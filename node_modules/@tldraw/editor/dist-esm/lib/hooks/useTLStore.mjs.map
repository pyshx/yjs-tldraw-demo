{
  "version": 3,
  "sources": ["../../../src/lib/hooks/useTLStore.ts"],
  "sourcesContent": ["import { StoreSnapshot } from '@tldraw/store'\nimport { TLRecord } from '@tldraw/tlschema'\nimport { useEffect, useRef, useState } from 'react'\nimport { TLStoreOptions, createTLStore } from '../config/createTLStore'\n\n/** @public */\nexport function useTLStore(opts: TLStoreOptions & { snapshot?: StoreSnapshot<TLRecord> }) {\n\tconst [store, setStore] = useState(() => {\n\t\tconst store = createTLStore(opts)\n\t\tif (opts.snapshot) {\n\t\t\tstore.loadSnapshot(opts.snapshot)\n\t\t}\n\t\treturn store\n\t})\n\t// prev\n\tconst ref = useRef(opts)\n\tuseEffect(() => void (ref.current = opts))\n\n\tif (\n\t\t// shallow equality check\n\t\t(Object.keys(ref.current) as (keyof TLStoreOptions)[]).some(\n\t\t\t(key) => ref.current[key] !== opts[key]\n\t\t)\n\t) {\n\t\tconst newStore = createTLStore(opts)\n\t\tif (opts.snapshot) {\n\t\t\tnewStore.loadSnapshot(opts.snapshot)\n\t\t}\n\t\tsetStore(newStore)\n\t\treturn newStore\n\t}\n\treturn store\n}\n"],
  "mappings": "AAEA,SAAS,WAAW,QAAQ,gBAAgB;AAC5C,SAAyB,qBAAqB;AAGvC,SAAS,WAAW,MAA+D;AACzF,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,MAAM;AACxC,UAAMA,SAAQ,cAAc,IAAI;AAChC,QAAI,KAAK,UAAU;AAClB,MAAAA,OAAM,aAAa,KAAK,QAAQ;AAAA,IACjC;AACA,WAAOA;AAAA,EACR,CAAC;AAED,QAAM,MAAM,OAAO,IAAI;AACvB,YAAU,MAAM,MAAM,IAAI,UAAU,KAAK;AAEzC;AAAA;AAAA,IAEE,OAAO,KAAK,IAAI,OAAO,EAA+B;AAAA,MACtD,CAAC,QAAQ,IAAI,QAAQ,GAAG,MAAM,KAAK,GAAG;AAAA,IACvC;AAAA,IACC;AACD,UAAM,WAAW,cAAc,IAAI;AACnC,QAAI,KAAK,UAAU;AAClB,eAAS,aAAa,KAAK,QAAQ;AAAA,IACpC;AACA,aAAS,QAAQ;AACjB,WAAO;AAAA,EACR;AACA,SAAO;AACR;",
  "names": ["store"]
}
