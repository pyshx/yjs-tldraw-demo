{
  "version": 3,
  "sources": ["../../../src/lib/components/Canvas.tsx"],
  "sourcesContent": ["import { react, track, useQuickReactor, useValue } from '@tldraw/state'\nimport { TLHandle, TLShapeId } from '@tldraw/tlschema'\nimport { dedupe, modulate, objectMapValues } from '@tldraw/utils'\nimport classNames from 'classnames'\nimport React from 'react'\nimport { useCanvasEvents } from '../hooks/useCanvasEvents'\nimport { useCoarsePointer } from '../hooks/useCoarsePointer'\nimport { useDocumentEvents } from '../hooks/useDocumentEvents'\nimport { useEditor } from '../hooks/useEditor'\nimport { useEditorComponents } from '../hooks/useEditorComponents'\nimport { useFixSafariDoubleTapZoomPencilEvents } from '../hooks/useFixSafariDoubleTapZoomPencilEvents'\nimport { useGestureEvents } from '../hooks/useGestureEvents'\nimport { useHandleEvents } from '../hooks/useHandleEvents'\nimport { useScreenBounds } from '../hooks/useScreenBounds'\nimport { Matrix2d } from '../primitives/Matrix2d'\nimport { toDomPrecision } from '../primitives/utils'\nimport { debugFlags } from '../utils/debug-flags'\nimport { GeometryDebuggingView } from './GeometryDebuggingView'\nimport { LiveCollaborators } from './LiveCollaborators'\nimport { Shape } from './Shape'\nimport { ShapeIndicator } from './ShapeIndicator'\n\n/** @public */\nexport function Canvas({ className }: { className?: string }) {\n\tconst editor = useEditor()\n\n\tconst { Background, SvgDefs } = useEditorComponents()\n\n\tconst rCanvas = React.useRef<HTMLDivElement>(null)\n\tconst rHtmlLayer = React.useRef<HTMLDivElement>(null)\n\tconst rHtmlLayer2 = React.useRef<HTMLDivElement>(null)\n\n\tuseScreenBounds()\n\tuseDocumentEvents()\n\tuseCoarsePointer()\n\n\tuseGestureEvents(rCanvas)\n\tuseFixSafariDoubleTapZoomPencilEvents(rCanvas)\n\n\tuseQuickReactor(\n\t\t'position layers',\n\t\t() => {\n\t\t\tconst htmlElm = rHtmlLayer.current\n\t\t\tif (!htmlElm) return\n\t\t\tconst htmlElm2 = rHtmlLayer2.current\n\t\t\tif (!htmlElm2) return\n\n\t\t\tconst { x, y, z } = editor.camera\n\n\t\t\t// Because the html container has a width/height of 1px, we\n\t\t\t// need to create a small offset when zoomed to ensure that\n\t\t\t// the html container and svg container are lined up exactly.\n\t\t\tconst offset =\n\t\t\t\tz >= 1 ? modulate(z, [1, 8], [0.125, 0.5], true) : modulate(z, [0.1, 1], [-2, 0.125], true)\n\n\t\t\tconst transform = `scale(${toDomPrecision(z)}) translate(${toDomPrecision(\n\t\t\t\tx + offset\n\t\t\t)}px,${toDomPrecision(y + offset)}px)`\n\t\t\thtmlElm.style.setProperty('transform', transform)\n\t\t\thtmlElm2.style.setProperty('transform', transform)\n\t\t},\n\t\t[editor]\n\t)\n\n\tconst events = useCanvasEvents()\n\n\tconst shapeSvgDefs = useValue(\n\t\t'shapeSvgDefs',\n\t\t() => {\n\t\t\tconst shapeSvgDefsByKey = new Map<string, JSX.Element>()\n\t\t\tfor (const util of objectMapValues(editor.shapeUtils)) {\n\t\t\t\tif (!util) return\n\t\t\t\tconst defs = util.getCanvasSvgDefs()\n\t\t\t\tfor (const { key, component: Component } of defs) {\n\t\t\t\t\tif (shapeSvgDefsByKey.has(key)) continue\n\t\t\t\t\tshapeSvgDefsByKey.set(key, <Component key={key} />)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [...shapeSvgDefsByKey.values()]\n\t\t},\n\t\t[editor]\n\t)\n\n\tconst hideShapes = useValue('debug_shapes', () => debugFlags.hideShapes.value, [debugFlags])\n\tconst debugSvg = useValue('debug_svg', () => debugFlags.debugSvg.value, [debugFlags])\n\tconst debugGeometry = useValue('debug_geometry', () => debugFlags.debugGeometry.value, [\n\t\tdebugFlags,\n\t])\n\n\treturn (\n\t\t<div\n\t\t\tref={rCanvas}\n\t\t\tdraggable={false}\n\t\t\tclassName={classNames('tl-canvas', className)}\n\t\t\tdata-testid=\"canvas\"\n\t\t\t{...events}\n\t\t>\n\t\t\t{Background && <Background />}\n\t\t\t<GridWrapper />\n\t\t\t<UiLogger />\n\t\t\t<svg className=\"tl-svg-context\">\n\t\t\t\t<defs>\n\t\t\t\t\t{shapeSvgDefs}\n\t\t\t\t\t{Cursor && <Cursor />}\n\t\t\t\t\t<CollaboratorHint />\n\t\t\t\t\t<ArrowheadDot />\n\t\t\t\t\t<ArrowheadCross />\n\t\t\t\t\t{SvgDefs && <SvgDefs />}\n\t\t\t\t</defs>\n\t\t\t</svg>\n\t\t\t<div ref={rHtmlLayer} className=\"tl-html-layer tl-shapes\" draggable={false}>\n\t\t\t\t<SelectionBackgroundWrapper />\n\t\t\t\t{hideShapes ? null : debugSvg ? <ShapesWithSVGs /> : <ShapesToDisplay />}\n\t\t\t</div>\n\t\t\t<div className=\"tl-fixed-layer tl-overlays\">\n\t\t\t\t<div ref={rHtmlLayer2} className=\"tl-html-layer\">\n\t\t\t\t\t{debugGeometry ? <GeometryDebuggingView /> : null}\n\t\t\t\t\t<HandlesWrapper />\n\t\t\t\t\t<BrushWrapper />\n\t\t\t\t\t<ScribbleWrapper />\n\t\t\t\t\t<ZoomBrushWrapper />\n\t\t\t\t\t<SelectedIdIndicators />\n\t\t\t\t\t<HoveredShapeIndicator />\n\t\t\t\t\t<HintedShapeIndicator />\n\t\t\t\t\t<SnapLinesWrapper />\n\t\t\t\t\t<SelectionForegroundWrapper />\n\t\t\t\t\t<LiveCollaborators />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction GridWrapper() {\n\tconst editor = useEditor()\n\tconst gridSize = useValue('gridSize', () => editor.documentSettings.gridSize, [editor])\n\tconst { x, y, z } = useValue('camera', () => editor.camera, [editor])\n\tconst isGridMode = useValue('isGridMode', () => editor.instanceState.isGridMode, [editor])\n\tconst { Grid } = useEditorComponents()\n\n\tif (!(Grid && isGridMode)) return null\n\n\treturn <Grid x={x} y={y} z={z} size={gridSize} />\n}\n\nfunction ScribbleWrapper() {\n\tconst editor = useEditor()\n\tconst scribble = useValue('scribble', () => editor.instanceState.scribble, [editor])\n\tconst zoomLevel = useValue('zoomLevel', () => editor.zoomLevel, [editor])\n\tconst { Scribble } = useEditorComponents()\n\n\tif (!(Scribble && scribble)) return null\n\n\treturn <Scribble className=\"tl-user-scribble\" scribble={scribble} zoom={zoomLevel} />\n}\n\nfunction BrushWrapper() {\n\tconst editor = useEditor()\n\tconst brush = useValue('brush', () => editor.instanceState.brush, [editor])\n\tconst { Brush } = useEditorComponents()\n\n\tif (!(Brush && brush)) return null\n\n\treturn <Brush className=\"tl-user-brush\" brush={brush} />\n}\n\nfunction ZoomBrushWrapper() {\n\tconst editor = useEditor()\n\tconst zoomBrush = useValue('zoomBrush', () => editor.instanceState.zoomBrush, [editor])\n\tconst { ZoomBrush } = useEditorComponents()\n\n\tif (!(ZoomBrush && zoomBrush)) return null\n\n\treturn <ZoomBrush className=\"tl-user-brush\" brush={zoomBrush} />\n}\n\nfunction SnapLinesWrapper() {\n\tconst editor = useEditor()\n\tconst lines = useValue('snapLines', () => editor.snaps.lines, [editor])\n\tconst zoomLevel = useValue('zoomLevel', () => editor.zoomLevel, [editor])\n\tconst { SnapLine } = useEditorComponents()\n\n\tif (!(SnapLine && lines.length > 0)) return null\n\n\treturn (\n\t\t<>\n\t\t\t{lines.map((line) => (\n\t\t\t\t<SnapLine key={line.id} className=\"tl-user-snapline\" line={line} zoom={zoomLevel} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nconst MIN_HANDLE_DISTANCE = 48\n\nfunction HandlesWrapper() {\n\tconst editor = useEditor()\n\tconst { Handles } = useEditorComponents()\n\n\tconst zoomLevel = useValue('zoomLevel', () => editor.zoomLevel, [editor])\n\tconst isCoarse = useValue('coarse pointer', () => editor.instanceState.isCoarsePointer, [editor])\n\tconst onlySelectedShape = useValue('onlySelectedShape', () => editor.onlySelectedShape, [editor])\n\tconst isChangingStyle = useValue('isChangingStyle', () => editor.instanceState.isChangingStyle, [\n\t\teditor,\n\t])\n\tconst isReadonly = useValue('isChangingStyle', () => editor.instanceState.isReadonly, [editor])\n\tconst handles = useValue(\n\t\t'handles',\n\t\t() => (editor.onlySelectedShape ? editor.getShapeHandles(editor.onlySelectedShape) : undefined),\n\t\t[editor]\n\t)\n\tconst transform = useValue(\n\t\t'transform',\n\t\t() =>\n\t\t\teditor.onlySelectedShape ? editor.getShapePageTransform(editor.onlySelectedShape) : undefined,\n\t\t[editor]\n\t)\n\n\tif (!Handles || !onlySelectedShape || isChangingStyle || isReadonly) return null\n\tif (!handles) return null\n\tif (!transform) return null\n\n\t// Don't display a temporary handle if the distance between it and its neighbors is too small.\n\tconst handlesToDisplay: TLHandle[] = []\n\n\tfor (let i = 0, handle = handles[i]; i < handles.length; i++, handle = handles[i]) {\n\t\tif (handle.type !== 'vertex') {\n\t\t\tconst prev = handles[i - 1]\n\t\t\tconst next = handles[i + 1]\n\t\t\tif (prev && next) {\n\t\t\t\tif (Math.hypot(prev.y - next.y, prev.x - next.x) < MIN_HANDLE_DISTANCE / zoomLevel) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\thandlesToDisplay.push(handle)\n\t}\n\n\thandlesToDisplay.sort((a) => (a.type === 'vertex' ? 1 : -1))\n\n\treturn (\n\t\t<Handles>\n\t\t\t<g transform={Matrix2d.toCssString(transform)}>\n\t\t\t\t{handlesToDisplay.map((handle) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<HandleWrapper\n\t\t\t\t\t\t\tkey={handle.id}\n\t\t\t\t\t\t\tshapeId={onlySelectedShape.id}\n\t\t\t\t\t\t\thandle={handle}\n\t\t\t\t\t\t\tzoom={zoomLevel}\n\t\t\t\t\t\t\tisCoarse={isCoarse}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</g>\n\t\t</Handles>\n\t)\n}\n\nfunction HandleWrapper({\n\tshapeId,\n\thandle,\n\tzoom,\n\tisCoarse,\n}: {\n\tshapeId: TLShapeId\n\thandle: TLHandle\n\tzoom: number\n\tisCoarse: boolean\n}) {\n\tconst events = useHandleEvents(shapeId, handle.id)\n\tconst { Handle } = useEditorComponents()\n\n\tif (!Handle) return null\n\n\treturn (\n\t\t<g aria-label=\"handle\" transform={`translate(${handle.x}, ${handle.y})`} {...events}>\n\t\t\t<Handle shapeId={shapeId} handle={handle} zoom={zoom} isCoarse={isCoarse} />\n\t\t</g>\n\t)\n}\n\nfunction ShapesWithSVGs() {\n\tconst editor = useEditor()\n\n\tconst renderingShapes = useValue('rendering shapes', () => editor.renderingShapes, [editor])\n\n\treturn (\n\t\t<>\n\t\t\t{renderingShapes.map((result) => (\n\t\t\t\t<React.Fragment key={result.id + '_fragment'}>\n\t\t\t\t\t<Shape {...result} />\n\t\t\t\t\t<DebugSvgCopy id={result.id} />\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nfunction ShapesToDisplay() {\n\tconst editor = useEditor()\n\n\tconst renderingShapes = useValue('rendering shapes', () => editor.renderingShapes, [editor])\n\n\treturn (\n\t\t<>\n\t\t\t{renderingShapes.map((result) => (\n\t\t\t\t<Shape key={result.id + '_shape'} {...result} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nfunction SelectedIdIndicators() {\n\tconst editor = useEditor()\n\tconst selectedShapeIds = useValue(\n\t\t'selectedShapeIds',\n\t\t() => editor.currentPageState.selectedShapeIds,\n\t\t[editor]\n\t)\n\tconst shouldDisplay = useValue(\n\t\t'should display selected ids',\n\t\t() => {\n\t\t\t// todo: move to tldraw selected ids wrapper\n\t\t\treturn (\n\t\t\t\teditor.isInAny(\n\t\t\t\t\t'select.idle',\n\t\t\t\t\t'select.brushing',\n\t\t\t\t\t'select.scribble_brushing',\n\t\t\t\t\t'select.editing_shape',\n\t\t\t\t\t'select.pointing_shape',\n\t\t\t\t\t'select.pointing_selection',\n\t\t\t\t\t'select.pointing_handle'\n\t\t\t\t) && !editor.instanceState.isChangingStyle\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n\n\tif (!shouldDisplay) return null\n\n\treturn (\n\t\t<>\n\t\t\t{selectedShapeIds.map((id) => (\n\t\t\t\t<ShapeIndicator key={id + '_indicator'} className=\"tl-user-indicator__selected\" id={id} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nconst HoveredShapeIndicator = function HoveredShapeIndicator() {\n\tconst editor = useEditor()\n\tconst { HoveredShapeIndicator } = useEditorComponents()\n\tconst isCoarsePointer = useValue('coarse pointer', () => editor.instanceState.isCoarsePointer, [\n\t\teditor,\n\t])\n\tconst isHoveringCanvas = useValue(\n\t\t'hovering canvas',\n\t\t() => editor.instanceState.isHoveringCanvas,\n\t\t[editor]\n\t)\n\tconst hoveredShapeId = useValue('hovered id', () => editor.currentPageState.hoveredShapeId, [\n\t\teditor,\n\t])\n\n\tif (isCoarsePointer || !isHoveringCanvas || !hoveredShapeId || !HoveredShapeIndicator) return null\n\n\treturn <HoveredShapeIndicator shapeId={hoveredShapeId} />\n}\n\nconst HintedShapeIndicator = track(function HintedShapeIndicator() {\n\tconst editor = useEditor()\n\n\tconst ids = dedupe(editor.hintingShapeIds)\n\n\tif (!ids.length) return null\n\n\treturn (\n\t\t<>\n\t\t\t{ids.map((id) => (\n\t\t\t\t<ShapeIndicator className=\"tl-user-indicator__hint\" id={id} key={id + '_hinting'} />\n\t\t\t))}\n\t\t</>\n\t)\n})\n\nfunction Cursor() {\n\treturn (\n\t\t<g id=\"cursor\">\n\t\t\t<g fill=\"rgba(0,0,0,.2)\" transform=\"translate(-11,-11)\">\n\t\t\t\t<path d=\"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" />\n\t\t\t\t<path d=\"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" />\n\t\t\t</g>\n\t\t\t<g fill=\"white\" transform=\"translate(-12,-12)\">\n\t\t\t\t<path d=\"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" />\n\t\t\t\t<path d=\"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" />\n\t\t\t</g>\n\t\t\t<g fill=\"currentColor\" transform=\"translate(-12,-12)\">\n\t\t\t\t<path d=\"m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z\" />\n\t\t\t\t<path d=\"m13 10.814v11.188l2.969-2.866.428-.139h4.768z\" />\n\t\t\t</g>\n\t\t</g>\n\t)\n}\n\nfunction CollaboratorHint() {\n\treturn <path id=\"cursor_hint\" fill=\"currentColor\" d=\"M -2,-5 2,0 -2,5 Z\" />\n}\n\nfunction ArrowheadDot() {\n\treturn (\n\t\t<marker id=\"arrowhead-dot\" className=\"tl-arrow-hint\" refX=\"3.0\" refY=\"3.0\" orient=\"0\">\n\t\t\t<circle cx=\"3\" cy=\"3\" r=\"2\" strokeDasharray=\"100%\" />\n\t\t</marker>\n\t)\n}\n\nfunction ArrowheadCross() {\n\treturn (\n\t\t<marker id=\"arrowhead-cross\" className=\"tl-arrow-hint\" refX=\"3.0\" refY=\"3.0\" orient=\"auto\">\n\t\t\t<line x1=\"1.5\" y1=\"1.5\" x2=\"4.5\" y2=\"4.5\" strokeDasharray=\"100%\" />\n\t\t\t<line x1=\"1.5\" y1=\"4.5\" x2=\"4.5\" y2=\"1.5\" strokeDasharray=\"100%\" />\n\t\t</marker>\n\t)\n}\n\nconst DebugSvgCopy = track(function DupSvg({ id }: { id: TLShapeId }) {\n\tconst editor = useEditor()\n\tconst shape = editor.getShape(id)\n\n\tconst [html, setHtml] = React.useState('')\n\n\tconst isInRoot = shape?.parentId === editor.currentPageId\n\n\tReact.useEffect(() => {\n\t\tif (!isInRoot) return\n\n\t\tlet latest = null\n\t\tconst unsubscribe = react('shape to svg', async () => {\n\t\t\tconst renderId = Math.random()\n\t\t\tlatest = renderId\n\t\t\tconst bb = editor.getShapePageBounds(id)\n\t\t\tconst el = await editor.getSvg([id], { padding: 0 })\n\t\t\tif (el && bb && latest === renderId) {\n\t\t\t\tel.style.setProperty('overflow', 'visible')\n\t\t\t\tel.setAttribute('preserveAspectRatio', 'xMidYMin slice')\n\t\t\t\tel.style.setProperty('transform', `translate(${bb.x}px, ${bb.y + bb.h + 12}px)`)\n\t\t\t\tel.style.setProperty('border', '1px solid black')\n\t\t\t\tsetHtml(el?.outerHTML)\n\t\t\t}\n\t\t})\n\n\t\treturn () => {\n\t\t\tlatest = null\n\t\t\tunsubscribe()\n\t\t}\n\t}, [editor, id, isInRoot])\n\n\tif (!isInRoot) return null\n\n\treturn (\n\t\t<div style={{ paddingTop: 12, position: 'absolute' }}>\n\t\t\t<div style={{ display: 'flex' }} dangerouslySetInnerHTML={{ __html: html }} />\n\t\t</div>\n\t)\n})\n\nfunction UiLogger() {\n\tconst uiLog = useValue('debugging ui log', () => debugFlags.logMessages.value, [debugFlags])\n\n\tif (!uiLog.length) return null\n\n\treturn (\n\t\t<div className=\"debug__ui-logger\">\n\t\t\t{uiLog.map((message, messageIndex) => {\n\t\t\t\tconst text = typeof message === 'string' ? message : JSON.stringify(message)\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"debug__ui-logger__line\" key={messageIndex}>\n\t\t\t\t\t\t{text}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport function SelectionForegroundWrapper() {\n\tconst editor = useEditor()\n\tconst selectionRotation = useValue('selection rotation', () => editor.selectionRotation, [editor])\n\tconst selectionBounds = useValue('selection bounds', () => editor.selectionRotatedPageBounds, [\n\t\teditor,\n\t])\n\tconst { SelectionForeground } = useEditorComponents()\n\tif (!selectionBounds || !SelectionForeground) return null\n\treturn <SelectionForeground bounds={selectionBounds} rotation={selectionRotation} />\n}\n\nexport function SelectionBackgroundWrapper() {\n\tconst editor = useEditor()\n\tconst selectionRotation = useValue('selection rotation', () => editor.selectionRotation, [editor])\n\tconst selectionBounds = useValue('selection bounds', () => editor.selectionRotatedPageBounds, [\n\t\teditor,\n\t])\n\tconst { SelectionBackground } = useEditorComponents()\n\tif (!selectionBounds || !SelectionBackground) return null\n\treturn <SelectionBackground bounds={selectionBounds} rotation={selectionRotation} />\n}\n"],
  "mappings": "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",
  "names": ["HoveredShapeIndicator", "HintedShapeIndicator"]
}
