{
  "version": 3,
  "sources": ["../../../../src/lib/primitives/geometry/Stadium2d.ts"],
  "sourcesContent": ["import { Vec2d } from '../Vec2d'\nimport { PI, TAU } from '../utils'\nimport { Ellipse2d } from './Ellipse2d'\nimport { Geometry2dOptions } from './Geometry2d'\n\n/** @public */\nexport class Stadium2d extends Ellipse2d {\n\tconstructor(\n\t\tpublic config: Omit<Geometry2dOptions, 'isClosed'> & { width: number; height: number }\n\t) {\n\t\tsuper({ ...config })\n\t}\n\n\tgetVertices() {\n\t\t// Perimeter of the ellipse\n\t\tconst w = Math.max(1, this.w)\n\t\tconst h = Math.max(1, this.h)\n\t\tconst cx = w / 2\n\t\tconst cy = h / 2\n\n\t\tconst len = 10\n\t\tconst points: Vec2d[] = Array(len * 2 - 2)\n\n\t\tif (h > w) {\n\t\t\tfor (let i = 0; i < len - 1; i++) {\n\t\t\t\tconst t1 = -PI + (PI * i) / (len - 2)\n\t\t\t\tconst t2 = (PI * i) / (len - 2)\n\t\t\t\tpoints[i] = new Vec2d(cx + cx * Math.cos(t1), cx + cx * Math.sin(t1))\n\t\t\t\tpoints[i + (len - 1)] = new Vec2d(cx + cx * Math.cos(t2), h - cx + cx * Math.sin(t2))\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0; i < len - 1; i++) {\n\t\t\t\tconst t1 = -TAU + (PI * i) / (len - 2)\n\t\t\t\tconst t2 = TAU + (PI * -i) / (len - 2)\n\t\t\t\tpoints[i] = new Vec2d(w - cy + cy * Math.cos(t1), h - cy + cy * Math.sin(t1))\n\t\t\t\tpoints[i + (len - 1)] = new Vec2d(cy - cy * Math.cos(t2), h - cy + cy * Math.sin(t2))\n\t\t\t}\n\t\t}\n\n\t\treturn points\n\t}\n}\n"],
  "mappings": "AAAA,SAAS,aAAa;AACtB,SAAS,IAAI,WAAW;AACxB,SAAS,iBAAiB;AAInB,MAAM,kBAAkB,UAAU;AAAA,EACxC,YACQ,QACN;AACD,UAAM,EAAE,GAAG,OAAO,CAAC;AAFZ;AAAA,EAGR;AAAA,EAEA,cAAc;AAEb,UAAM,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAM,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,IAAI;AAEf,UAAM,MAAM;AACZ,UAAM,SAAkB,MAAM,MAAM,IAAI,CAAC;AAEzC,QAAI,IAAI,GAAG;AACV,eAAS,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK;AACjC,cAAM,KAAK,CAAC,KAAM,KAAK,KAAM,MAAM;AACnC,cAAM,KAAM,KAAK,KAAM,MAAM;AAC7B,eAAO,CAAC,IAAI,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,EAAE,GAAG,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC;AACpE,eAAO,KAAK,MAAM,EAAE,IAAI,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,EAAE,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC;AAAA,MACrF;AAAA,IACD,OAAO;AACN,eAAS,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK;AACjC,cAAM,KAAK,CAAC,MAAO,KAAK,KAAM,MAAM;AACpC,cAAM,KAAK,MAAO,KAAK,CAAC,KAAM,MAAM;AACpC,eAAO,CAAC,IAAI,IAAI,MAAM,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC;AAC5E,eAAO,KAAK,MAAM,EAAE,IAAI,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,EAAE,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE,CAAC;AAAA,MACrF;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;",
  "names": []
}
