{
  "version": 3,
  "sources": ["../../../../src/lib/editor/managers/UserPreferencesManager.ts"],
  "sourcesContent": ["import { computed } from '@tldraw/state'\nimport {\n\tTLUserPreferences,\n\tdefaultUserPreferences,\n\tuserPrefersDarkUI,\n} from '../../config/TLUserPreferences'\nimport { TLUser } from '../../config/createTLUser'\n\nexport class UserPreferencesManager {\n\tconstructor(private readonly user: TLUser, private readonly inferDarkMode: boolean) {}\n\n\tupdateUserPreferences = (userPreferences: Partial<TLUserPreferences>) => {\n\t\tthis.user.setUserPreferences({\n\t\t\t...this.user.userPreferences.value,\n\t\t\t...userPreferences,\n\t\t})\n\t}\n\t@computed get userPreferences() {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tlocale: this.locale,\n\t\t\tcolor: this.color,\n\t\t\tisDarkMode: this.isDarkMode,\n\t\t\tanimationSpeed: this.animationSpeed,\n\t\t\tisSnapMode: this.isSnapMode,\n\t\t}\n\t}\n\n\t@computed get isDarkMode() {\n\t\treturn (\n\t\t\tthis.user.userPreferences.value.isDarkMode ??\n\t\t\t(this.inferDarkMode ? userPrefersDarkUI() : false)\n\t\t)\n\t}\n\n\t@computed get animationSpeed() {\n\t\treturn this.user.userPreferences.value.animationSpeed ?? defaultUserPreferences.animationSpeed\n\t}\n\n\t@computed get id() {\n\t\treturn this.user.userPreferences.value.id\n\t}\n\n\t@computed get name() {\n\t\treturn this.user.userPreferences.value.name ?? defaultUserPreferences.name\n\t}\n\n\t@computed get locale() {\n\t\treturn this.user.userPreferences.value.locale ?? defaultUserPreferences.locale\n\t}\n\n\t@computed get color() {\n\t\treturn this.user.userPreferences.value.color ?? defaultUserPreferences.color\n\t}\n\n\t@computed get isSnapMode() {\n\t\treturn this.user.userPreferences.value.isSnapMode ?? defaultUserPreferences.isSnapMode\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA,SAAS,gBAAgB;AACzB;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AAGA,MAAM,uBAAuB;AAAA,EACnC,YAA6B,MAA+B,eAAwB;AAAvD;AAA+B;AAAA,EAAyB;AAAA,EAErF,wBAAwB,CAAC,oBAAgD;AACxE,SAAK,KAAK,mBAAmB;AAAA,MAC5B,GAAG,KAAK,KAAK,gBAAgB;AAAA,MAC7B,GAAG;AAAA,IACJ,CAAC;AAAA,EACF;AAAA,EACU,IAAI,kBAAkB;AAC/B,WAAO;AAAA,MACN,IAAI,KAAK;AAAA,MACT,MAAM,KAAK;AAAA,MACX,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,MACZ,YAAY,KAAK;AAAA,MACjB,gBAAgB,KAAK;AAAA,MACrB,YAAY,KAAK;AAAA,IAClB;AAAA,EACD;AAAA,EAEU,IAAI,aAAa;AAC1B,WACC,KAAK,KAAK,gBAAgB,MAAM,eAC/B,KAAK,gBAAgB,kBAAkB,IAAI;AAAA,EAE9C;AAAA,EAEU,IAAI,iBAAiB;AAC9B,WAAO,KAAK,KAAK,gBAAgB,MAAM,kBAAkB,uBAAuB;AAAA,EACjF;AAAA,EAEU,IAAI,KAAK;AAClB,WAAO,KAAK,KAAK,gBAAgB,MAAM;AAAA,EACxC;AAAA,EAEU,IAAI,OAAO;AACpB,WAAO,KAAK,KAAK,gBAAgB,MAAM,QAAQ,uBAAuB;AAAA,EACvE;AAAA,EAEU,IAAI,SAAS;AACtB,WAAO,KAAK,KAAK,gBAAgB,MAAM,UAAU,uBAAuB;AAAA,EACzE;AAAA,EAEU,IAAI,QAAQ;AACrB,WAAO,KAAK,KAAK,gBAAgB,MAAM,SAAS,uBAAuB;AAAA,EACxE;AAAA,EAEU,IAAI,aAAa;AAC1B,WAAO,KAAK,KAAK,gBAAgB,MAAM,cAAc,uBAAuB;AAAA,EAC7E;AACD;AA1Ce;AAAA,EAAb;AAAA,GATW,uBASE;AAYA;AAAA,EAAb;AAAA,GArBW,uBAqBE;AAOA;AAAA,EAAb;AAAA,GA5BW,uBA4BE;AAIA;AAAA,EAAb;AAAA,GAhCW,uBAgCE;AAIA;AAAA,EAAb;AAAA,GApCW,uBAoCE;AAIA;AAAA,EAAb;AAAA,GAxCW,uBAwCE;AAIA;AAAA,EAAb;AAAA,GA5CW,uBA4CE;AAIA;AAAA,EAAb;AAAA,GAhDW,uBAgDE;",
  "names": []
}
