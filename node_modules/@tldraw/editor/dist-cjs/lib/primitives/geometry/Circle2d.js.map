{
  "version": 3,
  "sources": ["../../../../src/lib/primitives/geometry/Circle2d.ts"],
  "sourcesContent": ["import { Box2d } from '../Box2d'\nimport { Vec2d } from '../Vec2d'\nimport { intersectLineSegmentCircle } from '../intersect'\nimport { PI2 } from '../utils'\nimport { Geometry2d, Geometry2dOptions } from './Geometry2d'\nimport { getVerticesCountForLength } from './geometry-constants'\n\n/** @public */\nexport class Circle2d extends Geometry2d {\n\t_center: Vec2d\n\tradius: number\n\tx: number\n\ty: number\n\n\tconstructor(\n\t\tpublic config: Omit<Geometry2dOptions, 'isClosed'> & {\n\t\t\tx?: number\n\t\t\ty?: number\n\t\t\tradius: number\n\t\t\tisFilled: boolean\n\t\t}\n\t) {\n\t\tsuper({ isClosed: true, ...config })\n\t\tconst { x = 0, y = 0, radius } = config\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis._center = new Vec2d(radius + x, radius + y)\n\t\tthis.radius = radius\n\t}\n\n\tgetBounds() {\n\t\treturn new Box2d(this.x, this.y, this.radius * 2, this.radius * 2)\n\t}\n\n\tgetVertices(): Vec2d[] {\n\t\tconst { _center, radius } = this\n\t\tconst perimeter = PI2 * radius\n\t\tconst vertices: Vec2d[] = []\n\t\tfor (let i = 0, n = getVerticesCountForLength(perimeter); i < n; i++) {\n\t\t\tconst angle = (i / n) * PI2\n\t\t\tvertices.push(_center.clone().add(Vec2d.FromAngle(angle).mul(radius)))\n\t\t}\n\t\treturn vertices\n\t}\n\n\tnearestPoint(point: Vec2d): Vec2d {\n\t\tconst { _center, radius } = this\n\t\tif (_center.equals(point)) return Vec2d.AddXY(_center, radius, 0)\n\t\treturn _center.clone().add(point.clone().sub(_center).uni().mul(radius))\n\t}\n\n\thitTestLineSegment(A: Vec2d, B: Vec2d, _zoom: number): boolean {\n\t\tconst { _center, radius } = this\n\t\treturn intersectLineSegmentCircle(A, B, _center, radius) !== null\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsB;AACtB,mBAAsB;AACtB,uBAA2C;AAC3C,mBAAoB;AACpB,wBAA8C;AAC9C,gCAA0C;AAGnC,MAAM,iBAAiB,6BAAW;AAAA,EAMxC,YACQ,QAMN;AACD,UAAM,EAAE,UAAU,MAAM,GAAG,OAAO,CAAC;AAP5B;AAQP,UAAM,EAAE,IAAI,GAAG,IAAI,GAAG,OAAO,IAAI;AACjC,SAAK,IAAI;AACT,SAAK,IAAI;AACT,SAAK,UAAU,IAAI,mBAAM,SAAS,GAAG,SAAS,CAAC;AAC/C,SAAK,SAAS;AAAA,EACf;AAAA,EAnBA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAkBA,YAAY;AACX,WAAO,IAAI,mBAAM,KAAK,GAAG,KAAK,GAAG,KAAK,SAAS,GAAG,KAAK,SAAS,CAAC;AAAA,EAClE;AAAA,EAEA,cAAuB;AACtB,UAAM,EAAE,SAAS,OAAO,IAAI;AAC5B,UAAM,YAAY,mBAAM;AACxB,UAAM,WAAoB,CAAC;AAC3B,aAAS,IAAI,GAAG,QAAI,qDAA0B,SAAS,GAAG,IAAI,GAAG,KAAK;AACrE,YAAM,QAAS,IAAI,IAAK;AACxB,eAAS,KAAK,QAAQ,MAAM,EAAE,IAAI,mBAAM,UAAU,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC;AAAA,IACtE;AACA,WAAO;AAAA,EACR;AAAA,EAEA,aAAa,OAAqB;AACjC,UAAM,EAAE,SAAS,OAAO,IAAI;AAC5B,QAAI,QAAQ,OAAO,KAAK;AAAG,aAAO,mBAAM,MAAM,SAAS,QAAQ,CAAC;AAChE,WAAO,QAAQ,MAAM,EAAE,IAAI,MAAM,MAAM,EAAE,IAAI,OAAO,EAAE,IAAI,EAAE,IAAI,MAAM,CAAC;AAAA,EACxE;AAAA,EAEA,mBAAmB,GAAU,GAAU,OAAwB;AAC9D,UAAM,EAAE,SAAS,OAAO,IAAI;AAC5B,eAAO,6CAA2B,GAAG,GAAG,SAAS,MAAM,MAAM;AAAA,EAC9D;AACD;",
  "names": []
}
