{
  "version": 3,
  "sources": ["../../../../src/lib/primitives/geometry/Geometry2d.ts"],
  "sourcesContent": ["import { Box2d } from '../Box2d'\nimport { Vec2d } from '../Vec2d'\nimport { pointInPolygon } from '../utils'\n\nexport interface Geometry2dOptions {\n\tisFilled: boolean\n\tisClosed: boolean\n\tisLabel?: boolean\n\tisSnappable?: boolean\n}\n\n/** @public */\nexport abstract class Geometry2d {\n\tisFilled = false\n\tisClosed = true\n\tisLabel = false\n\tisSnappable = true\n\n\tconstructor(opts: Geometry2dOptions) {\n\t\tthis.isFilled = opts.isFilled\n\t\tthis.isClosed = opts.isClosed\n\t\tthis.isSnappable = opts.isSnappable ?? false\n\t\tthis.isLabel = opts.isLabel ?? false\n\t}\n\n\tabstract getVertices(): Vec2d[]\n\n\tabstract nearestPoint(point: Vec2d): Vec2d\n\n\thitTestPoint(point: Vec2d, margin = 0, hitInside = false) {\n\t\t// We've removed the broad phase here; that should be done outside of the call\n\t\treturn this.distanceToPoint(point, hitInside) <= margin\n\t}\n\n\tdistanceToPoint(point: Vec2d, hitInside = false) {\n\t\tconst dist = point.dist(this.nearestPoint(point))\n\n\t\tif (this.isClosed && (this.isFilled || hitInside) && pointInPolygon(point, this.vertices)) {\n\t\t\treturn -dist\n\t\t}\n\t\treturn dist\n\t}\n\n\tdistanceToLineSegment(A: Vec2d, B: Vec2d) {\n\t\tconst point = this.nearestPointOnLineSegment(A, B)\n\t\tconst dist = Vec2d.DistanceToLineSegment(A, B, point) // repeated, bleh\n\t\treturn this.isClosed && this.isFilled && pointInPolygon(point, this.vertices) ? -dist : dist\n\t}\n\n\thitTestLineSegment(A: Vec2d, B: Vec2d, distance = 0): boolean {\n\t\treturn this.distanceToLineSegment(A, B) <= distance\n\t}\n\n\tnearestPointOnLineSegment(A: Vec2d, B: Vec2d): Vec2d {\n\t\tlet distance = Infinity\n\t\tlet nearest: Vec2d | undefined\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\n\t\t\tconst point = this.vertices[i]\n\t\t\tconst d = Vec2d.DistanceToLineSegment(A, B, point)\n\t\t\tif (d < distance) {\n\t\t\t\tdistance = d\n\t\t\t\tnearest = point\n\t\t\t}\n\t\t}\n\t\tif (!nearest) throw Error('nearest point not found')\n\t\treturn nearest\n\t}\n\n\tisPointInBounds(point: Vec2d, margin = 0) {\n\t\tconst { bounds } = this\n\t\treturn !(\n\t\t\tpoint.x < bounds.minX - margin ||\n\t\t\tpoint.y < bounds.minY - margin ||\n\t\t\tpoint.x > bounds.maxX + margin ||\n\t\t\tpoint.y > bounds.maxY + margin\n\t\t)\n\t}\n\n\t_vertices: Vec2d[] | undefined\n\n\tget vertices(): Vec2d[] {\n\t\tif (!this._vertices) {\n\t\t\tthis._vertices = this.getVertices()\n\t\t}\n\n\t\treturn this._vertices\n\t}\n\n\tgetBounds() {\n\t\treturn Box2d.FromPoints(this.vertices)\n\t}\n\n\t_bounds: Box2d | undefined\n\n\tget bounds(): Box2d {\n\t\tif (!this._bounds) {\n\t\t\tthis._bounds = this.getBounds()\n\t\t}\n\t\treturn this._bounds\n\t}\n\n\t_snapPoints: Vec2d[] | undefined\n\n\tget snapPoints() {\n\t\tif (!this._snapPoints) {\n\t\t\tthis._snapPoints = this.bounds.snapPoints\n\t\t}\n\t\treturn this._snapPoints\n\t}\n\n\tget center() {\n\t\treturn this.bounds.center\n\t}\n\n\t_area: number | undefined\n\n\tget area() {\n\t\tif (!this._area) {\n\t\t\tthis._area = this.getArea()\n\t\t}\n\t\treturn this._area\n\t}\n\n\tgetArea() {\n\t\tif (!this.isClosed) {\n\t\t\treturn 0\n\t\t}\n\t\tconst { vertices } = this\n\t\tlet area = 0\n\t\tfor (let i = 0, n = vertices.length; i < n; i++) {\n\t\t\tconst curr = vertices[i]\n\t\t\tconst next = vertices[(i + 1) % n]\n\t\t\tarea += curr.x * next.y - next.x * curr.y\n\t\t}\n\t\treturn area / 2\n\t}\n\n\ttoSimpleSvgPath() {\n\t\tlet path = ''\n\n\t\tconst { vertices } = this\n\t\tconst n = vertices.length\n\n\t\tif (n === 0) return path\n\n\t\tpath += `M${vertices[0].x},${vertices[0].y}`\n\n\t\tfor (let i = 1; i < n; i++) {\n\t\t\tpath += `L${vertices[i].x},${vertices[i].y}`\n\t\t}\n\n\t\tif (this.isClosed) {\n\t\t\tpath += 'Z'\n\t\t}\n\n\t\treturn path\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
