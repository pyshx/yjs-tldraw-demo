{
  "version": 3,
  "sources": ["../../../src/lib/hooks/useScreenBounds.ts"],
  "sourcesContent": ["import throttle from 'lodash.throttle'\nimport { useLayoutEffect } from 'react'\nimport { useEditor } from './useEditor'\n\nexport function useScreenBounds() {\n\tconst editor = useEditor()\n\n\tuseLayoutEffect(() => {\n\t\tconst updateBounds = throttle(\n\t\t\t() => {\n\t\t\t\teditor.updateViewportScreenBounds()\n\t\t\t},\n\t\t\t200,\n\t\t\t{\n\t\t\t\ttrailing: true,\n\t\t\t}\n\t\t)\n\n\t\teditor.updateViewportScreenBounds()\n\n\t\t// Rather than running getClientRects on every frame, we'll\n\t\t// run it once a second or when the window resizes / scrolls.\n\t\tconst interval = setInterval(updateBounds, 1000)\n\t\twindow.addEventListener('resize', updateBounds)\n\t\twindow.addEventListener('scroll', updateBounds)\n\n\t\treturn () => {\n\t\t\tclearInterval(interval)\n\t\t\twindow.removeEventListener('resize', updateBounds)\n\t\t\twindow.removeEventListener('scroll', updateBounds)\n\t\t}\n\t}, [editor])\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqB;AACrB,mBAAgC;AAChC,uBAA0B;AAEnB,SAAS,kBAAkB;AACjC,QAAM,aAAS,4BAAU;AAEzB,oCAAgB,MAAM;AACrB,UAAM,mBAAe,cAAAA;AAAA,MACpB,MAAM;AACL,eAAO,2BAA2B;AAAA,MACnC;AAAA,MACA;AAAA,MACA;AAAA,QACC,UAAU;AAAA,MACX;AAAA,IACD;AAEA,WAAO,2BAA2B;AAIlC,UAAM,WAAW,YAAY,cAAc,GAAI;AAC/C,WAAO,iBAAiB,UAAU,YAAY;AAC9C,WAAO,iBAAiB,UAAU,YAAY;AAE9C,WAAO,MAAM;AACZ,oBAAc,QAAQ;AACtB,aAAO,oBAAoB,UAAU,YAAY;AACjD,aAAO,oBAAoB,UAAU,YAAY;AAAA,IAClD;AAAA,EACD,GAAG,CAAC,MAAM,CAAC;AACZ;",
  "names": ["throttle"]
}
