{
  "version": 3,
  "sources": ["../../../../src/lib/ui/hooks/useBreakpoint.tsx"],
  "sourcesContent": ["import { useEditor, useValue } from '@tldraw/editor'\nimport React, { useContext } from 'react'\nimport { PORTRAIT_BREAKPOINTS } from '../constants'\n\nconst BreakpointContext = React.createContext(0)\n\n/** @public */\nexport function BreakPointProvider({ children }: { children: any }) {\n\tconst editor = useEditor()\n\n\tconst breakpoint = useValue(\n\t\t'breakpoint',\n\t\t() => {\n\t\t\tconst { width } = editor.viewportScreenBounds\n\t\t\tconst breakpoints = PORTRAIT_BREAKPOINTS\n\n\t\t\tfor (let i = 0; i < breakpoints.length - 1; i++) {\n\t\t\t\tif (width > breakpoints[i] && width <= breakpoints[i + 1]) {\n\t\t\t\t\treturn i\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn breakpoints.length\n\t\t},\n\t\t[editor]\n\t)\n\n\treturn <BreakpointContext.Provider value={breakpoint}>{children}</BreakpointContext.Provider>\n}\n\n/** @public */\nexport function useBreakpoint() {\n\tlet breakpoint = useContext(BreakpointContext)\n\tconst layoutQuery = new URL(window.location.href).searchParams.get('layout')\n\n\tif (layoutQuery === 'desktop') {\n\t\tbreakpoint = 7\n\t} else if (layoutQuery === 'mobile') {\n\t\tbreakpoint = 1\n\t}\n\n\treturn breakpoint\n}\n"],
  "mappings": "AA2BQ;AA3BR,SAAS,WAAW,gBAAgB;AACpC,OAAO,SAAS,kBAAkB;AAClC,SAAS,4BAA4B;AAErC,MAAM,oBAAoB,MAAM,cAAc,CAAC;AAGxC,SAAS,mBAAmB,EAAE,SAAS,GAAsB;AACnE,QAAM,SAAS,UAAU;AAEzB,QAAM,aAAa;AAAA,IAClB;AAAA,IACA,MAAM;AACL,YAAM,EAAE,MAAM,IAAI,OAAO;AACzB,YAAM,cAAc;AAEpB,eAAS,IAAI,GAAG,IAAI,YAAY,SAAS,GAAG,KAAK;AAChD,YAAI,QAAQ,YAAY,CAAC,KAAK,SAAS,YAAY,IAAI,CAAC,GAAG;AAC1D,iBAAO;AAAA,QACR;AAAA,MACD;AAEA,aAAO,YAAY;AAAA,IACpB;AAAA,IACA,CAAC,MAAM;AAAA,EACR;AAEA,SAAO,oBAAC,kBAAkB,UAAlB,EAA2B,OAAO,YAAa,UAAS;AACjE;AAGO,SAAS,gBAAgB;AAC/B,MAAI,aAAa,WAAW,iBAAiB;AAC7C,QAAM,cAAc,IAAI,IAAI,OAAO,SAAS,IAAI,EAAE,aAAa,IAAI,QAAQ;AAE3E,MAAI,gBAAgB,WAAW;AAC9B,iBAAa;AAAA,EACd,WAAW,gBAAgB,UAAU;AACpC,iBAAa;AAAA,EACd;AAEA,SAAO;AACR;",
  "names": []
}
