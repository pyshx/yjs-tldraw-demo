{
  "version": 3,
  "sources": ["../../../../src/lib/ui/hooks/useRevelantStyles.ts"],
  "sourcesContent": ["import {\n\tDefaultColorStyle,\n\tDefaultDashStyle,\n\tDefaultFillStyle,\n\tDefaultSizeStyle,\n\tReadonlySharedStyleMap,\n\tSharedStyle,\n\tSharedStyleMap,\n\tuseEditor,\n\tuseValue,\n} from '@tldraw/editor'\n\nconst selectToolStyles = [DefaultColorStyle, DefaultDashStyle, DefaultFillStyle, DefaultSizeStyle]\n\nexport function useRelevantStyles(): {\n\tstyles: ReadonlySharedStyleMap\n\topacity: SharedStyle<number>\n} | null {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'getRelevantStyles',\n\t\t() => {\n\t\t\tconst styles = new SharedStyleMap(editor.sharedStyles)\n\t\t\tconst hasShape = editor.selectedShapeIds.length > 0 || !!editor.root.current.value?.shapeType\n\n\t\t\tif (styles.size === 0 && editor.isIn('select') && editor.selectedShapeIds.length === 0) {\n\t\t\t\tfor (const style of selectToolStyles) {\n\t\t\t\t\tstyles.applyValue(style, editor.getStyleForNextShape(style))\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (styles.size === 0 && !hasShape) return null\n\t\t\treturn { styles, opacity: editor.sharedOpacity }\n\t\t},\n\t\t[editor]\n\t)\n}\n"],
  "mappings": "AAAA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,MAAM,mBAAmB,CAAC,mBAAmB,kBAAkB,kBAAkB,gBAAgB;AAE1F,SAAS,oBAGP;AACR,QAAM,SAAS,UAAU;AACzB,SAAO;AAAA,IACN;AAAA,IACA,MAAM;AACL,YAAM,SAAS,IAAI,eAAe,OAAO,YAAY;AACrD,YAAM,WAAW,OAAO,iBAAiB,SAAS,KAAK,CAAC,CAAC,OAAO,KAAK,QAAQ,OAAO;AAEpF,UAAI,OAAO,SAAS,KAAK,OAAO,KAAK,QAAQ,KAAK,OAAO,iBAAiB,WAAW,GAAG;AACvF,mBAAW,SAAS,kBAAkB;AACrC,iBAAO,WAAW,OAAO,OAAO,qBAAqB,KAAK,CAAC;AAAA,QAC5D;AAAA,MACD;AAEA,UAAI,OAAO,SAAS,KAAK,CAAC;AAAU,eAAO;AAC3C,aAAO,EAAE,QAAQ,SAAS,OAAO,cAAc;AAAA,IAChD;AAAA,IACA,CAAC,MAAM;AAAA,EACR;AACD;",
  "names": []
}
