{
  "version": 3,
  "sources": ["../../src/misc/TLScribble.ts"],
  "sourcesContent": ["import { T } from '@tldraw/validate'\nimport { SetValue } from '../util-types'\nimport { TLCanvasUiColor, canvasUiColorTypeValidator } from './TLColor'\nimport { Vec2dModel, vec2dModelValidator } from './geometry-types'\n\n/**\n * The scribble states used by tldraw.\n *\n *  @public */\nexport const TL_SCRIBBLE_STATES = new Set(['starting', 'paused', 'active', 'stopping'] as const)\n\n/**\n * A type for the scribble used by tldraw.\n *\n * @public */\nexport type TLScribble = {\n\tpoints: Vec2dModel[]\n\tsize: number\n\tcolor: TLCanvasUiColor\n\topacity: number\n\tstate: SetValue<typeof TL_SCRIBBLE_STATES>\n\tdelay: number\n}\n\n/** @internal */\nexport const scribbleValidator: T.Validator<TLScribble> = T.object({\n\tpoints: T.arrayOf(vec2dModelValidator),\n\tsize: T.positiveNumber,\n\tcolor: canvasUiColorTypeValidator,\n\topacity: T.number,\n\tstate: T.setEnum(TL_SCRIBBLE_STATES),\n\tdelay: T.number,\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkB;AAElB,qBAA4D;AAC5D,4BAAgD;AAMzC,MAAM,qBAAqB,oBAAI,IAAI,CAAC,YAAY,UAAU,UAAU,UAAU,CAAU;AAgBxF,MAAM,oBAA6C,kBAAE,OAAO;AAAA,EAClE,QAAQ,kBAAE,QAAQ,yCAAmB;AAAA,EACrC,MAAM,kBAAE;AAAA,EACR,OAAO;AAAA,EACP,SAAS,kBAAE;AAAA,EACX,OAAO,kBAAE,QAAQ,kBAAkB;AAAA,EACnC,OAAO,kBAAE;AACV,CAAC;",
  "names": []
}
