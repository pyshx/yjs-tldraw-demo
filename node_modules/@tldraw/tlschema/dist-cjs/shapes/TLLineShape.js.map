{
  "version": 3,
  "sources": ["../../src/shapes/TLLineShape.ts"],
  "sourcesContent": ["import { defineMigrations } from '@tldraw/store'\nimport { deepCopy } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { handleValidator } from '../misc/TLHandle'\nimport { StyleProp } from '../styles/StyleProp'\nimport { DefaultColorStyle } from '../styles/TLColorStyle'\nimport { DefaultDashStyle } from '../styles/TLDashStyle'\nimport { DefaultSizeStyle } from '../styles/TLSizeStyle'\nimport { ShapePropsType, TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport const LineShapeSplineStyle = StyleProp.defineEnum('tldraw:spline', {\n\tdefaultValue: 'line',\n\tvalues: ['cubic', 'line'],\n})\n\n/** @public */\nexport type TLLineShapeSplineStyle = T.TypeOf<typeof LineShapeSplineStyle>\n\n/** @public */\nexport const lineShapeProps = {\n\tcolor: DefaultColorStyle,\n\tdash: DefaultDashStyle,\n\tsize: DefaultSizeStyle,\n\tspline: LineShapeSplineStyle,\n\thandles: T.dict(T.string, handleValidator),\n}\n\n/** @public */\nexport type TLLineShapeProps = ShapePropsType<typeof lineShapeProps>\n\n/** @public */\nexport type TLLineShape = TLBaseShape<'line', TLLineShapeProps>\n\n/** @internal */\nexport const lineShapeVersions = {\n\tAddSnapHandles: 1,\n} as const\n\n/** @internal */\nexport const lineShapeMigrations = defineMigrations({\n\tcurrentVersion: lineShapeVersions.AddSnapHandles,\n\tmigrators: {\n\t\t[lineShapeVersions.AddSnapHandles]: {\n\t\t\tup: (record: any) => {\n\t\t\t\tconst handles = deepCopy(record.props.handles as Record<string, any>)\n\t\t\t\tfor (const id in handles) {\n\t\t\t\t\thandles[id].canSnap = true\n\t\t\t\t}\n\t\t\t\treturn { ...record, props: { ...record.props, handles } }\n\t\t\t},\n\t\t\tdown: (record: any) => {\n\t\t\t\tconst handles = deepCopy(record.props.handles as Record<string, any>)\n\t\t\t\tfor (const id in handles) {\n\t\t\t\t\tdelete handles[id].canSnap\n\t\t\t\t}\n\t\t\t\treturn { ...record, props: { ...record.props, handles } }\n\t\t\t},\n\t\t},\n\t},\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiC;AACjC,mBAAyB;AACzB,sBAAkB;AAClB,sBAAgC;AAChC,uBAA0B;AAC1B,0BAAkC;AAClC,yBAAiC;AACjC,yBAAiC;AAI1B,MAAM,uBAAuB,2BAAU,WAAW,iBAAiB;AAAA,EACzE,cAAc;AAAA,EACd,QAAQ,CAAC,SAAS,MAAM;AACzB,CAAC;AAMM,MAAM,iBAAiB;AAAA,EAC7B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,SAAS,kBAAE,KAAK,kBAAE,QAAQ,+BAAe;AAC1C;AASO,MAAM,oBAAoB;AAAA,EAChC,gBAAgB;AACjB;AAGO,MAAM,0BAAsB,+BAAiB;AAAA,EACnD,gBAAgB,kBAAkB;AAAA,EAClC,WAAW;AAAA,IACV,CAAC,kBAAkB,cAAc,GAAG;AAAA,MACnC,IAAI,CAAC,WAAgB;AACpB,cAAM,cAAU,uBAAS,OAAO,MAAM,OAA8B;AACpE,mBAAW,MAAM,SAAS;AACzB,kBAAQ,EAAE,EAAE,UAAU;AAAA,QACvB;AACA,eAAO,EAAE,GAAG,QAAQ,OAAO,EAAE,GAAG,OAAO,OAAO,QAAQ,EAAE;AAAA,MACzD;AAAA,MACA,MAAM,CAAC,WAAgB;AACtB,cAAM,cAAU,uBAAS,OAAO,MAAM,OAA8B;AACpE,mBAAW,MAAM,SAAS;AACzB,iBAAO,QAAQ,EAAE,EAAE;AAAA,QACpB;AACA,eAAO,EAAE,GAAG,QAAQ,OAAO,EAAE,GAAG,OAAO,OAAO,QAAQ,EAAE;AAAA,MACzD;AAAA,IACD;AAAA,EACD;AACD,CAAC;",
  "names": []
}
