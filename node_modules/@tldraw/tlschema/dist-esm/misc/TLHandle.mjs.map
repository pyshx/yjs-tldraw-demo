{
  "version": 3,
  "sources": ["../../src/misc/TLHandle.ts"],
  "sourcesContent": ["import { T } from '@tldraw/validate'\nimport { SetValue } from '../util-types'\n\n/**\n * The handle types used by tldraw's default shapes.\n *\n * @public */\nexport const TL_HANDLE_TYPES = new Set(['vertex', 'virtual', 'create'] as const)\n\n/**\n * A type for the handle types used by tldraw's default shapes.\n *\n * @public */\nexport type TLHandleType = SetValue<typeof TL_HANDLE_TYPES>\n\n/**\n * A base interface for a shape's handles.\n *\n * @public\n */\nexport interface TLHandle {\n\t/** A unique identifier for the handle. */\n\tid: string\n\ttype: TLHandleType\n\tcanBind?: boolean\n\tcanSnap?: boolean\n\tindex: string\n\tx: number\n\ty: number\n}\n\n/** @internal */\nexport const handleValidator: T.Validator<TLHandle> = T.object({\n\tid: T.string,\n\ttype: T.setEnum(TL_HANDLE_TYPES),\n\tcanBind: T.boolean.optional(),\n\tcanSnap: T.boolean.optional(),\n\tindex: T.string,\n\tx: T.number,\n\ty: T.number,\n})\n"],
  "mappings": "AAAA,SAAS,SAAS;AAOX,MAAM,kBAAkB,oBAAI,IAAI,CAAC,UAAU,WAAW,QAAQ,CAAU;AAyBxE,MAAM,kBAAyC,EAAE,OAAO;AAAA,EAC9D,IAAI,EAAE;AAAA,EACN,MAAM,EAAE,QAAQ,eAAe;AAAA,EAC/B,SAAS,EAAE,QAAQ,SAAS;AAAA,EAC5B,SAAS,EAAE,QAAQ,SAAS;AAAA,EAC5B,OAAO,EAAE;AAAA,EACT,GAAG,EAAE;AAAA,EACL,GAAG,EAAE;AACN,CAAC;",
  "names": []
}
