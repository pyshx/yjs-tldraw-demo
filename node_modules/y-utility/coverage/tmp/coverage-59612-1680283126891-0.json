{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":8841,"endOffset":8912,"count":71}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":8917,"endOffset":8966,"count":442}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8971,"endOffset":9016,"count":41}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":10581,"endOffset":10648,"count":30}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":11306,"endOffset":11334,"count":53}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":11478,"endOffset":11506,"count":2}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":11635,"endOffset":11663,"count":53}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12087,"endOffset":12143,"count":1}],"isBlockCoverage":true},{"functionName":"SafePromise","ranges":[{"startOffset":12482,"endOffset":12524,"count":240}],"isBlockCoverage":true},{"functionName":"primordials.SafePromisePrototypeFinally","ranges":[{"startOffset":13028,"endOffset":13302,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13173,"endOffset":13297,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13203,"endOffset":13252,"count":40}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnArrayLike","ranges":[{"startOffset":14622,"endOffset":15178,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14657,"endOffset":15177,"count":43},{"startOffset":14827,"endOffset":14846,"count":14},{"startOffset":14919,"endOffset":15173,"count":105},{"startOffset":14957,"endOffset":14980,"count":0},{"startOffset":15173,"endOffset":15176,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15048,"endOffset":15157,"count":105},{"startOffset":15130,"endOffset":15149,"count":29}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnVoid","ranges":[{"startOffset":15520,"endOffset":15922,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15555,"endOffset":15921,"count":84},{"startOffset":15652,"endOffset":15662,"count":28},{"startOffset":15709,"endOffset":15917,"count":208},{"startOffset":15747,"endOffset":15770,"count":104},{"startOffset":15771,"endOffset":15784,"count":104},{"startOffset":15917,"endOffset":15920,"count":208}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15838,"endOffset":15901,"count":208},{"startOffset":15883,"endOffset":15893,"count":56}],"isBlockCoverage":true}]},{"scriptId":"9","url":"node:internal/bootstrap/loaders","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5245,"endOffset":5507,"count":71}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":5648,"endOffset":5802,"count":154},{"startOffset":5784,"endOffset":5799,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":7493,"endOffset":7610,"count":34},{"startOffset":7578,"endOffset":7605,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":7761,"endOffset":7838,"count":68}],"isBlockCoverage":true},{"functionName":"getSchemeOnlyModuleNames","ranges":[{"startOffset":7849,"endOffset":7924,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":7996,"endOffset":8690,"count":2},{"startOffset":8059,"endOffset":8251,"count":0},{"startOffset":8574,"endOffset":8578,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":8694,"endOffset":9456,"count":4},{"startOffset":8732,"endOffset":9455,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9193,"endOffset":9296,"count":2}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":9752,"endOffset":10096,"count":4},{"startOffset":9871,"endOffset":10086,"count":154},{"startOffset":9948,"endOffset":9957,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":10100,"endOffset":10922,"count":1194}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":11116,"endOffset":11483,"count":1194}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3643,"endOffset":3705,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3711,"endOffset":3781,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4106,"endOffset":4142,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4148,"endOffset":4293,"count":2},{"startOffset":4213,"endOffset":4264,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12604,"endOffset":12640,"count":8}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/errors","functions":[{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5633,"endOffset":6140,"count":207},{"startOffset":5863,"endOffset":5886,"count":0},{"startOffset":5987,"endOffset":6030,"count":0},{"startOffset":6109,"endOffset":6137,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10340,"endOffset":11342,"count":69}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11087,"endOffset":11165,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":11507,"endOffset":11772,"count":3}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":12394,"endOffset":13267,"count":69},{"startOffset":12807,"endOffset":13266,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":13285,"endOffset":13365,"count":51}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":13422,"endOffset":13574,"count":51}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13627,"endOffset":14029,"count":69}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48087,"endOffset":48240,"count":69}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14545,"endOffset":14615,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14990,"endOffset":15280,"count":1},{"startOffset":15246,"endOffset":15279,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16095,"endOffset":16158,"count":1}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16221,"endOffset":16276,"count":1}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":944,"endOffset":1006,"count":1}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1630,"endOffset":1941,"count":41},{"startOffset":1723,"endOffset":1891,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2187,"endOffset":2568,"count":2},{"startOffset":2307,"endOffset":2361,"count":0},{"startOffset":2401,"endOffset":2455,"count":0},{"startOffset":2498,"endOffset":2564,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2812,"endOffset":3275,"count":3},{"startOffset":2984,"endOffset":3052,"count":0},{"startOffset":3086,"endOffset":3154,"count":0},{"startOffset":3191,"endOffset":3271,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3513,"endOffset":3945,"count":41},{"startOffset":3583,"endOffset":3647,"count":0},{"startOffset":3679,"endOffset":3743,"count":0},{"startOffset":3767,"endOffset":3770,"count":0},{"startOffset":3867,"endOffset":3943,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4098,"endOffset":4230,"count":4468}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4431,"endOffset":4899,"count":443},{"startOffset":4529,"endOffset":4583,"count":0},{"startOffset":4604,"endOffset":4618,"count":0},{"startOffset":4636,"endOffset":4650,"count":0},{"startOffset":4691,"endOffset":4712,"count":0},{"startOffset":4715,"endOffset":4897,"count":0}],"isBlockCoverage":true},{"functionName":"validateBoolean","ranges":[{"startOffset":5574,"endOffset":5709,"count":1},{"startOffset":5652,"endOffset":5707,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyValueOrDefault","ranges":[{"startOffset":5821,"endOffset":6002,"count":570},{"startOffset":5914,"endOffset":5961,"count":75},{"startOffset":5962,"endOffset":5980,"count":541},{"startOffset":5981,"endOffset":5999,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6267,"endOffset":6822,"count":190},{"startOffset":6572,"endOffset":6589,"count":188},{"startOffset":6615,"endOffset":6637,"count":165},{"startOffset":6677,"endOffset":6747,"count":0},{"startOffset":6750,"endOffset":6818,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9422,"endOffset":9652,"count":1},{"startOffset":9487,"endOffset":9650,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11276,"endOffset":11392,"count":80}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12914,"endOffset":13124,"count":78},{"startOffset":13054,"endOffset":13122,"count":0}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/util","functions":[{"functionName":"toUSVString","ranges":[{"startOffset":1681,"endOffset":1993,"count":103},{"startOffset":1950,"endOffset":1992,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2740,"endOffset":4082,"count":5}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":3077,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":4352,"endOffset":4426,"count":1},{"startOffset":4398,"endOffset":4424,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":4605,"endOffset":4736,"count":1},{"startOffset":4675,"endOffset":4693,"count":0},{"startOffset":4709,"endOffset":4735,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":7100,"endOffset":7256,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7151,"endOffset":7253,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":9266,"endOffset":11125,"count":5},{"startOffset":9386,"endOffset":9442,"count":1},{"startOffset":9529,"endOffset":9805,"count":0},{"startOffset":10911,"endOffset":11073,"count":14}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":10005,"endOffset":10524,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":11220,"endOffset":11542,"count":10},{"startOffset":11381,"endOffset":11492,"count":7}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":13799,"endOffset":13999,"count":1}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":14051,"endOffset":14270,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":14272,"endOffset":15205,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":14491,"endOffset":14634,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14737,"endOffset":14933,"count":2}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":15207,"endOffset":16107,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15419,"endOffset":15655,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15760,"endOffset":15831,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":16109,"endOffset":16209,"count":1}],"isBlockCoverage":false},{"functionName":"filterOwnProperties","ranges":[{"startOffset":16713,"endOffset":16985,"count":4},{"startOffset":16838,"endOffset":16963,"count":17},{"startOffset":16917,"endOffset":16959,"count":11}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":19701,"endOffset":20378,"count":1},{"startOffset":20171,"endOffset":20348,"count":0}],"isBlockCoverage":true}]},{"scriptId":"16","url":"node:internal/util/types","functions":[{"functionName":"isTypedArray","ranges":[{"startOffset":131,"endOffset":234,"count":384}],"isBlockCoverage":true},{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":7337}],"isBlockCoverage":true},{"functionName":"isFloat32Array","ranges":[{"startOffset":1008,"endOffset":1118,"count":384}],"isBlockCoverage":true},{"functionName":"isFloat64Array","ranges":[{"startOffset":1120,"endOffset":1230,"count":384}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":134}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/util/inspect","functions":[{"functionName":"isUndetectableObject","ranges":[{"startOffset":3611,"endOffset":3661,"count":17},{"startOffset":3643,"endOffset":3661,"count":0}],"isBlockCoverage":true},{"functionName":"inspect","ranges":[{"startOffset":8982,"endOffset":11008,"count":5},{"startOffset":9834,"endOffset":10030,"count":0},{"startOffset":10100,"endOffset":10136,"count":0},{"startOffset":10241,"endOffset":10775,"count":0},{"startOffset":10804,"endOffset":10835,"count":0},{"startOffset":10871,"endOffset":10901,"count":0},{"startOffset":10938,"endOffset":10969,"count":0}],"isBlockCoverage":true},{"functionName":"addQuotes","ranges":[{"startOffset":14280,"endOffset":14438,"count":17},{"startOffset":14335,"endOffset":14363,"count":0},{"startOffset":14385,"endOffset":14415,"count":0}],"isBlockCoverage":true},{"functionName":"strEscape","ranges":[{"startOffset":14727,"endOffset":16881,"count":17},{"startOffset":15166,"endOffset":15611,"count":0},{"startOffset":15802,"endOffset":16880,"count":0}],"isBlockCoverage":true},{"functionName":"stylizeNoColor","ranges":[{"startOffset":17151,"endOffset":17197,"count":29}],"isBlockCoverage":true},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":17276,"endOffset":17323,"count":5}],"isBlockCoverage":true},{"functionName":"isInstanceof","ranges":[{"startOffset":17325,"endOffset":17443,"count":10},{"startOffset":17412,"endOffset":17441,"count":0}],"isBlockCoverage":true},{"functionName":"getConstructorName","ranges":[{"startOffset":17445,"endOffset":18713,"count":10},{"startOffset":17561,"endOffset":17589,"count":0},{"startOffset":17591,"endOffset":18230,"count":20},{"startOffset":17701,"endOffset":17750,"count":10},{"startOffset":17751,"endOffset":17790,"count":10},{"startOffset":17791,"endOffset":17837,"count":10},{"startOffset":17839,"endOffset":18122,"count":10},{"startOffset":17876,"endOffset":17963,"count":0},{"startOffset":17965,"endOffset":18072,"count":0},{"startOffset":18122,"endOffset":18226,"count":10},{"startOffset":18230,"endOffset":18383,"count":0},{"startOffset":18385,"endOffset":18712,"count":0}],"isBlockCoverage":true},{"functionName":"getPrefix","ranges":[{"startOffset":20735,"endOffset":21122,"count":5},{"startOffset":20823,"endOffset":20991,"count":0},{"startOffset":21034,"endOffset":21085,"count":0}],"isBlockCoverage":true},{"functionName":"getKeys","ranges":[{"startOffset":21159,"endOffset":22150,"count":10},{"startOffset":21281,"endOffset":21407,"count":0},{"startOffset":21756,"endOffset":21936,"count":0},{"startOffset":21967,"endOffset":22129,"count":0}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":21990,"endOffset":22046,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":23049,"endOffset":25806,"count":27},{"startOffset":23187,"endOffset":23223,"count":17},{"startOffset":23224,"endOffset":23261,"count":17},{"startOffset":23263,"endOffset":23321,"count":17},{"startOffset":23321,"endOffset":23344,"count":10},{"startOffset":23344,"endOffset":23389,"count":0},{"startOffset":23389,"endOffset":23665,"count":10},{"startOffset":23665,"endOffset":23881,"count":0},{"startOffset":23881,"endOffset":25182,"count":10},{"startOffset":24129,"endOffset":24235,"count":0},{"startOffset":24236,"endOffset":24383,"count":0},{"startOffset":24385,"endOffset":25178,"count":0},{"startOffset":25182,"endOffset":25372,"count":10},{"startOffset":25372,"endOffset":25745,"count":0},{"startOffset":25745,"endOffset":25805,"count":10}],"isBlockCoverage":true},{"functionName":"formatRaw","ranges":[{"startOffset":25808,"endOffset":36653,"count":10},{"startOffset":25918,"endOffset":25970,"count":0},{"startOffset":25972,"endOffset":25998,"count":0},{"startOffset":26163,"endOffset":26189,"count":0},{"startOffset":26191,"endOffset":26224,"count":0},{"startOffset":26406,"endOffset":26582,"count":5},{"startOffset":26452,"endOffset":26491,"count":0},{"startOffset":26584,"endOffset":26603,"count":5},{"startOffset":26744,"endOffset":26760,"count":0},{"startOffset":27042,"endOffset":27065,"count":5},{"startOffset":27067,"endOffset":30041,"count":5},{"startOffset":27122,"endOffset":27616,"count":0},{"startOffset":27640,"endOffset":28118,"count":0},{"startOffset":28401,"endOffset":28477,"count":0},{"startOffset":28500,"endOffset":28520,"count":0},{"startOffset":28521,"endOffset":28548,"count":0},{"startOffset":28558,"endOffset":28579,"count":0},{"startOffset":28621,"endOffset":30037,"count":0},{"startOffset":30060,"endOffset":34002,"count":5},{"startOffset":30202,"endOffset":30248,"count":0},{"startOffset":30270,"endOffset":30344,"count":0},{"startOffset":30373,"endOffset":30400,"count":0},{"startOffset":30402,"endOffset":30443,"count":0},{"startOffset":30449,"endOffset":33998,"count":0},{"startOffset":34035,"endOffset":34056,"count":0},{"startOffset":34058,"endOffset":34286,"count":0},{"startOffset":34523,"endOffset":34652,"count":12},{"startOffset":34687,"endOffset":34745,"count":0},{"startOffset":34750,"endOffset":34940,"count":0},{"startOffset":34975,"endOffset":35365,"count":0},{"startOffset":35403,"endOffset":35855,"count":0},{"startOffset":36612,"endOffset":36637,"count":0}],"isBlockCoverage":true},{"functionName":"formatPrimitive","ranges":[{"startOffset":53535,"endOffset":54940,"count":17},{"startOffset":53679,"endOffset":53891,"count":0},{"startOffset":54128,"endOffset":54194,"count":0},{"startOffset":54196,"endOffset":54469,"count":0},{"startOffset":54526,"endOffset":54939,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54324,"endOffset":54363,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":60210,"endOffset":60810,"count":5},{"startOffset":60529,"endOffset":60535,"count":0},{"startOffset":60701,"endOffset":60764,"count":0}],"isBlockCoverage":true},{"functionName":"formatProperty","ranges":[{"startOffset":64238,"endOffset":66811,"count":12},{"startOffset":64445,"endOffset":64491,"count":0},{"startOffset":64566,"endOffset":64589,"count":0},{"startOffset":64595,"endOffset":64598,"count":0},{"startOffset":64705,"endOffset":64757,"count":0},{"startOffset":64759,"endOffset":64835,"count":0},{"startOffset":64871,"endOffset":66098,"count":0},{"startOffset":66126,"endOffset":66147,"count":0},{"startOffset":66179,"endOffset":66369,"count":0},{"startOffset":66400,"endOffset":66433,"count":0},{"startOffset":66470,"endOffset":66612,"count":0},{"startOffset":66713,"endOffset":66774,"count":0}],"isBlockCoverage":true},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":66813,"endOffset":67771,"count":10},{"startOffset":67366,"endOffset":67379,"count":0},{"startOffset":67422,"endOffset":67627,"count":17},{"startOffset":67444,"endOffset":67504,"count":0},{"startOffset":67596,"endOffset":67623,"count":2},{"startOffset":67627,"endOffset":67729,"count":8},{"startOffset":67729,"endOffset":67768,"count":0}],"isBlockCoverage":true},{"functionName":"reduceToSingleString","ranges":[{"startOffset":67773,"endOffset":70674,"count":10},{"startOffset":68275,"endOffset":68289,"count":0},{"startOffset":68291,"endOffset":68357,"count":0},{"startOffset":69413,"endOffset":69657,"count":8},{"startOffset":69555,"endOffset":69567,"count":0},{"startOffset":69671,"endOffset":69819,"count":2},{"startOffset":69819,"endOffset":69831,"count":0},{"startOffset":69832,"endOffset":69836,"count":2},{"startOffset":69944,"endOffset":70485,"count":0},{"startOffset":70486,"endOffset":70495,"count":0},{"startOffset":70496,"endOffset":70543,"count":0}],"isBlockCoverage":true},{"functionName":"formatWithOptions","ranges":[{"startOffset":72455,"endOffset":72642,"count":23}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":73012,"endOffset":77034,"count":23},{"startOffset":73176,"endOffset":76837,"count":0},{"startOffset":76865,"endOffset":77018,"count":5},{"startOffset":76981,"endOffset":76988,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":424},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":503,"endOffset":976,"count":1},{"startOffset":595,"endOffset":932,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":870,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":958,"endOffset":969,"count":4}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1404,"endOffset":1412,"count":89}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1415,"endOffset":1980,"count":4},{"startOffset":1490,"endOffset":1952,"count":3},{"startOffset":1509,"endOffset":1905,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1598,"endOffset":1898,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2200,"endOffset":3225,"count":5}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2231,"endOffset":2327,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2342,"endOffset":2736,"count":4},{"startOffset":2589,"endOffset":2619,"count":3},{"startOffset":2626,"endOffset":2665,"count":1},{"startOffset":2672,"endOffset":2726,"count":0}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2766,"endOffset":2835,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2854,"endOffset":3049,"count":4},{"startOffset":2902,"endOffset":2932,"count":3},{"startOffset":2939,"endOffset":2978,"count":1},{"startOffset":2985,"endOffset":3039,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3120,"endOffset":3154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"22","url":"node:events","functions":[{"functionName":"EventEmitter","ranges":[{"startOffset":6276,"endOffset":6345,"count":42}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":7692,"endOffset":7770,"count":74}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7878,"endOffset":7926,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9820,"endOffset":10418,"count":42}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":13299,"endOffset":15601,"count":44}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15604,"endOffset":17498,"count":26}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17676,"endOffset":17768,"count":26}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":18427,"endOffset":18668,"count":23}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":18859,"endOffset":18985,"count":23}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":19595,"endOffset":20890,"count":25},{"startOffset":19744,"endOffset":19756,"count":0},{"startOffset":19829,"endOffset":19841,"count":1},{"startOffset":19841,"endOffset":19871,"count":24},{"startOffset":19871,"endOffset":19900,"count":23},{"startOffset":19902,"endOffset":20163,"count":24},{"startOffset":19953,"endOffset":19988,"count":0},{"startOffset":20084,"endOffset":20145,"count":1},{"startOffset":20163,"endOffset":20864,"count":0},{"startOffset":20864,"endOffset":20889,"count":24}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24103,"endOffset":24393,"count":23},{"startOffset":24276,"endOffset":24299,"count":0},{"startOffset":24335,"endOffset":24374,"count":0}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:buffer","functions":[{"functionName":"alignPool","ranges":[{"startOffset":4108,"endOffset":4230,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8540,"endOffset":9505,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10317,"endOffset":10472,"count":41},{"startOffset":10403,"endOffset":10470,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":10999,"endOffset":11074,"count":1}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11315,"endOffset":11404,"count":40}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":11704,"endOffset":12036,"count":1},{"startOffset":11747,"endOffset":11781,"count":0},{"startOffset":11820,"endOffset":11999,"count":0}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12038,"endOffset":12584,"count":1}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":12586,"endOffset":13039,"count":1}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":14903,"endOffset":15054,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":16673,"endOffset":16737,"count":1}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":16750,"endOffset":16796,"count":1}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":20056,"endOffset":21880,"count":1},{"startOffset":20206,"endOffset":20442,"count":0},{"startOffset":20447,"endOffset":20866,"count":0},{"startOffset":20871,"endOffset":21025,"count":0},{"startOffset":21030,"endOffset":21186,"count":0},{"startOffset":21191,"endOffset":21572,"count":0},{"startOffset":21577,"endOffset":21709,"count":0},{"startOffset":21714,"endOffset":21874,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":23282,"endOffset":23861,"count":1},{"startOffset":23354,"endOffset":23402,"count":0},{"startOffset":23454,"endOffset":23464,"count":0},{"startOffset":23494,"endOffset":23504,"count":0},{"startOffset":23553,"endOffset":23565,"count":0},{"startOffset":23581,"endOffset":23602,"count":0},{"startOffset":23628,"endOffset":23638,"count":0},{"startOffset":23674,"endOffset":23708,"count":0},{"startOffset":23779,"endOffset":23820,"count":0}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26363,"endOffset":26463,"count":43}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30289,"endOffset":30425,"count":41}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30680,"endOffset":30752,"count":1}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1443,"endOffset":1911,"count":1}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":1960,"endOffset":2462,"count":42},{"startOffset":2031,"endOffset":2381,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":5070,"endOffset":6447,"count":1},{"startOffset":5271,"endOffset":5483,"count":0}],"isBlockCoverage":true},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12489,"endOffset":12819,"count":1},{"startOffset":12569,"endOffset":12744,"count":0},{"startOffset":12776,"endOffset":12817,"count":0}],"isBlockCoverage":true},{"functionName":"isDeprecatedExitCode","ranges":[{"startOffset":12821,"endOffset":13240,"count":3},{"startOffset":12902,"endOffset":13222,"count":2},{"startOffset":12953,"endOffset":12967,"count":0},{"startOffset":12968,"endOffset":12982,"count":0},{"startOffset":13192,"endOffset":13218,"count":0}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":1},{"startOffset":1139,"endOffset":1142,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":1},{"startOffset":2669,"endOffset":2676,"count":0},{"startOffset":2724,"endOffset":2738,"count":0},{"startOffset":2785,"endOffset":2836,"count":0},{"startOffset":2841,"endOffset":2906,"count":0},{"startOffset":2911,"endOffset":3054,"count":0},{"startOffset":3354,"endOffset":3414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":1}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":1},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true}]},{"scriptId":"32","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":681,"endOffset":1011,"count":1},{"startOffset":742,"endOffset":1009,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1825,"endOffset":1902,"count":14374}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2137,"endOffset":4085,"count":254},{"startOffset":2354,"endOffset":4069,"count":14374},{"startOffset":2387,"endOffset":2429,"count":14120},{"startOffset":2429,"endOffset":2520,"count":254},{"startOffset":2478,"endOffset":2520,"count":0},{"startOffset":2520,"endOffset":2553,"count":14120},{"startOffset":2553,"endOffset":3970,"count":1975},{"startOffset":2585,"endOffset":2598,"count":1718},{"startOffset":2600,"endOffset":2625,"count":258},{"startOffset":2625,"endOffset":3927,"count":1717},{"startOffset":2647,"endOffset":3682,"count":2},{"startOffset":2703,"endOffset":2777,"count":0},{"startOffset":2778,"endOffset":2852,"count":0},{"startOffset":3006,"endOffset":3082,"count":0},{"startOffset":3363,"endOffset":3532,"count":0},{"startOffset":3542,"endOffset":3674,"count":0},{"startOffset":3682,"endOffset":3927,"count":1715},{"startOffset":3728,"endOffset":3797,"count":1461},{"startOffset":3797,"endOffset":3872,"count":254},{"startOffset":3927,"endOffset":3970,"count":1973},{"startOffset":3970,"endOffset":4065,"count":12145},{"startOffset":3998,"endOffset":4012,"count":276},{"startOffset":4014,"endOffset":4035,"count":9},{"startOffset":4035,"endOffset":4065,"count":12136}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33752,"endOffset":33771,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":33896,"endOffset":34813,"count":254},{"startOffset":34019,"endOffset":34039,"count":515},{"startOffset":34046,"endOffset":34367,"count":262},{"startOffset":34074,"endOffset":34083,"count":261},{"startOffset":34084,"endOffset":34096,"count":1},{"startOffset":34193,"endOffset":34220,"count":0},{"startOffset":34752,"endOffset":34802,"count":0},{"startOffset":34803,"endOffset":34808,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":35559,"endOffset":35715,"count":42}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":38714,"endOffset":38790,"count":286}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":42121,"endOffset":43811,"count":103},{"startOffset":42454,"endOffset":43416,"count":1133},{"startOffset":42550,"endOffset":42796,"count":103},{"startOffset":42770,"endOffset":42796,"count":0},{"startOffset":42796,"endOffset":42819,"count":1030},{"startOffset":42819,"endOffset":42976,"count":103},{"startOffset":42976,"endOffset":43006,"count":1030},{"startOffset":43006,"endOffset":43206,"count":111},{"startOffset":43122,"endOffset":43135,"count":103},{"startOffset":43135,"endOffset":43198,"count":8},{"startOffset":43206,"endOffset":43410,"count":919},{"startOffset":43233,"endOffset":43410,"count":709},{"startOffset":43655,"endOffset":43687,"count":0},{"startOffset":43688,"endOffset":43726,"count":0},{"startOffset":43729,"endOffset":43753,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:internal/console/constructor","functions":[{"functionName":"value","ranges":[{"startOffset":5709,"endOffset":6351,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5918,"endOffset":6013,"count":46},{"startOffset":5951,"endOffset":5974,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6025,"endOffset":6055,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6184,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6295,"endOffset":6325,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6442,"endOffset":7844,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":7935,"endOffset":9387,"count":23},{"startOffset":8161,"endOffset":8175,"count":0},{"startOffset":8249,"endOffset":8275,"count":0},{"startOffset":8314,"endOffset":8509,"count":12},{"startOffset":8367,"endOffset":8462,"count":2},{"startOffset":8567,"endOffset":8595,"count":0},{"startOffset":9033,"endOffset":9317,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9481,"endOffset":9971,"count":23},{"startOffset":9595,"endOffset":9701,"count":0},{"startOffset":9775,"endOffset":9896,"count":0},{"startOffset":9917,"endOffset":9939,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10063,"endOffset":10243,"count":23}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10604,"endOffset":11493,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10672,"endOffset":11490,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11522,"endOffset":11609,"count":23}],"isBlockCoverage":true},{"functionName":"group","ranges":[{"startOffset":14646,"endOffset":14831,"count":9},{"startOffset":14688,"endOffset":14737,"count":0}],"isBlockCoverage":true},{"functionName":"groupEnd","ranges":[{"startOffset":14836,"endOffset":15005,"count":9}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20364,"endOffset":21402,"count":1},{"startOffset":20731,"endOffset":21401,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21297,"endOffset":21398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3003,"endOffset":3234,"count":902}],"isBlockCoverage":false},{"functionName":"URLSearchParams","ranges":[{"startOffset":3634,"endOffset":6452,"count":1040},{"startOffset":3749,"endOffset":6390,"count":0}],"isBlockCoverage":true},{"functionName":"isURLThis","ranges":[{"startOffset":13940,"endOffset":14126,"count":4909}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":15119,"endOffset":22019,"count":1109}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":15133,"endOffset":15595,"count":1109},{"startOffset":15377,"endOffset":15408,"count":480},{"startOffset":15544,"endOffset":15591,"count":69}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15599,"endOffset":16453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16457,"endOffset":16601,"count":0}],"isBlockCoverage":false},{"functionName":"#onParseComplete","ranges":[{"startOffset":16624,"endOffset":17463,"count":1386},{"startOffset":17274,"endOffset":17405,"count":1040}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":17468,"endOffset":17582,"count":408},{"startOffset":17513,"endOffset":17547,"count":0}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":17586,"endOffset":17700,"count":750},{"startOffset":17631,"endOffset":17665,"count":0}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":17704,"endOffset":17952,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":17970,"endOffset":18088,"count":520},{"startOffset":18017,"endOffset":18051,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":18092,"endOffset":18214,"count":1356},{"startOffset":18141,"endOffset":18175,"count":0}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":18218,"endOffset":18405,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":18409,"endOffset":18531,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":18535,"endOffset":18722,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":18726,"endOffset":18848,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":18852,"endOffset":19039,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":19043,"endOffset":19157,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":19161,"endOffset":19340,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":19344,"endOffset":19466,"count":481},{"startOffset":19393,"endOffset":19427,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":19470,"endOffset":19657,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":19661,"endOffset":19775,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":19779,"endOffset":19958,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":19962,"endOffset":20084,"count":842},{"startOffset":20011,"endOffset":20045,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":20088,"endOffset":20275,"count":140},{"startOffset":20142,"endOffset":20176,"count":0}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":20279,"endOffset":20397,"count":103},{"startOffset":20326,"endOffset":20360,"count":0}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":20401,"endOffset":20679,"count":103},{"startOffset":20454,"endOffset":20488,"count":0}],"isBlockCoverage":true},{"functionName":"get searchParams","ranges":[{"startOffset":20697,"endOffset":20819,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":20823,"endOffset":20937,"count":103},{"startOffset":20868,"endOffset":20902,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":20941,"endOffset":21120,"count":103},{"startOffset":20991,"endOffset":21025,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":21124,"endOffset":21236,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectURL","ranges":[{"startOffset":21247,"endOffset":21645,"count":0}],"isBlockCoverage":false},{"functionName":"revokeObjectURL","ranges":[{"startOffset":21656,"endOffset":22017,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":23055,"endOffset":23195,"count":1489},{"startOffset":23152,"endOffset":23194,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":33938,"endOffset":34459,"count":481},{"startOffset":34001,"endOffset":34057,"count":0},{"startOffset":34135,"endOffset":34418,"count":28347},{"startOffset":34166,"endOffset":34414,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":34461,"endOffset":34808,"count":481},{"startOffset":34528,"endOffset":34549,"count":1},{"startOffset":34549,"endOffset":34651,"count":480},{"startOffset":34587,"endOffset":34651,"count":0},{"startOffset":34689,"endOffset":34730,"count":0},{"startOffset":34750,"endOffset":34777,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":35568,"endOffset":36314,"count":140},{"startOffset":35655,"endOffset":35726,"count":0},{"startOffset":35848,"endOffset":35921,"count":0},{"startOffset":35973,"endOffset":36044,"count":0},{"startOffset":36096,"endOffset":36174,"count":0},{"startOffset":36226,"endOffset":36293,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":36316,"endOffset":37680,"count":140},{"startOffset":36404,"endOffset":36450,"count":0},{"startOffset":36452,"endOffset":37167,"count":0},{"startOffset":37466,"endOffset":37529,"count":138},{"startOffset":37489,"endOffset":37528,"count":0},{"startOffset":37531,"endOffset":37584,"count":2},{"startOffset":37592,"endOffset":37608,"count":2}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":37682,"endOffset":37801,"count":811},{"startOffset":37775,"endOffset":37798,"count":520}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":37803,"endOffset":37948,"count":331},{"startOffset":37886,"endOffset":37907,"count":291},{"startOffset":37907,"endOffset":37947,"count":40}],"isBlockCoverage":true}]},{"scriptId":"43","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":12144,"endOffset":12363,"count":1}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":26821,"endOffset":28286,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":26981,"endOffset":27117,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27216,"endOffset":28054,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":28314,"endOffset":29004,"count":1},{"startOffset":28745,"endOffset":28907,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":28383,"endOffset":28524,"count":40}],"isBlockCoverage":true}]},{"scriptId":"45","url":"node:internal/perf/utils","functions":[{"functionName":"now","ranges":[{"startOffset":243,"endOffset":344,"count":42}],"isBlockCoverage":true},{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":499,"endOffset":563,"count":1}],"isBlockCoverage":true}]},{"scriptId":"46","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1420,"endOffset":3019,"count":1},{"startOffset":1572,"endOffset":1706,"count":0},{"startOffset":1712,"endOffset":1906,"count":0},{"startOffset":2213,"endOffset":2241,"count":0},{"startOffset":2243,"endOffset":2463,"count":0},{"startOffset":2645,"endOffset":2898,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2835,"endOffset":2882,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3632,"endOffset":3723,"count":1},{"startOffset":3686,"endOffset":3721,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3725,"endOffset":4417,"count":2},{"startOffset":3762,"endOffset":4010,"count":1},{"startOffset":4010,"endOffset":4068,"count":0},{"startOffset":4068,"endOffset":4416,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4083,"endOffset":4261,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":349,"endOffset":510,"count":211}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":704,"endOffset":877,"count":1},{"startOffset":783,"endOffset":875,"count":0}],"isBlockCoverage":true}]},{"scriptId":"48","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":2}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":904,"count":2}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":906,"endOffset":1101,"count":1},{"startOffset":1008,"endOffset":1044,"count":0},{"startOffset":1046,"endOffset":1099,"count":0}],"isBlockCoverage":true}]},{"scriptId":"49","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":4991,"endOffset":5251,"count":503},{"startOffset":5190,"endOffset":5210,"count":54}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":10577,"endOffset":10807,"count":1},{"startOffset":10720,"endOffset":10732,"count":0},{"startOffset":10734,"endOffset":10789,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10809,"endOffset":11120,"count":1},{"startOffset":10927,"endOffset":10979,"count":0},{"startOffset":11066,"endOffset":11078,"count":0},{"startOffset":11080,"endOffset":11097,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11122,"endOffset":11377,"count":1},{"startOffset":11320,"endOffset":11332,"count":0},{"startOffset":11334,"endOffset":11351,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11601,"endOffset":12999,"count":1},{"startOffset":11770,"endOffset":11776,"count":0},{"startOffset":11916,"endOffset":11919,"count":0},{"startOffset":12049,"endOffset":12072,"count":0},{"startOffset":12324,"endOffset":12693,"count":0},{"startOffset":12753,"endOffset":12849,"count":0},{"startOffset":12871,"endOffset":12911,"count":0}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13544,"endOffset":13684,"count":1}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":14676,"endOffset":15072,"count":1}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":17850,"endOffset":18987,"count":1},{"startOffset":18072,"endOffset":18328,"count":0},{"startOffset":18358,"endOffset":18379,"count":0},{"startOffset":18470,"endOffset":18489,"count":0},{"startOffset":18522,"endOffset":18652,"count":0}],"isBlockCoverage":true},{"functionName":"hasNoEntryError","ranges":[{"startOffset":39494,"endOffset":39709,"count":185},{"startOffset":39543,"endOffset":39626,"count":51},{"startOffset":39626,"endOffset":39645,"count":134},{"startOffset":39645,"endOffset":39690,"count":0},{"startOffset":39690,"endOffset":39708,"count":134}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":41011,"endOffset":41432,"count":185},{"startOffset":41335,"endOffset":41362,"count":51},{"startOffset":41362,"endOffset":41431,"count":134}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":65816,"endOffset":66026,"count":41},{"startOffset":65883,"endOffset":66006,"count":82},{"startOffset":65961,"endOffset":66000,"count":41},{"startOffset":66006,"endOffset":66025,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":66031,"endOffset":66318,"count":41},{"startOffset":66116,"endOffset":66146,"count":0},{"startOffset":66166,"endOffset":66317,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":66724,"endOffset":66799,"count":278}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":66973,"endOffset":70885,"count":105},{"startOffset":67097,"endOffset":67115,"count":0},{"startOffset":67276,"endOffset":67311,"count":64},{"startOffset":67311,"endOffset":67873,"count":41},{"startOffset":67873,"endOffset":68045,"count":0},{"startOffset":68045,"endOffset":68182,"count":41},{"startOffset":68182,"endOffset":70812,"count":278},{"startOffset":68294,"endOffset":68425,"count":41},{"startOffset":68425,"endOffset":68583,"count":237},{"startOffset":68700,"endOffset":68853,"count":224},{"startOffset":68807,"endOffset":68831,"count":0},{"startOffset":68853,"endOffset":68919,"count":54},{"startOffset":68956,"endOffset":69005,"count":0},{"startOffset":69005,"endOffset":70309,"count":54},{"startOffset":69445,"endOffset":70229,"count":0},{"startOffset":70273,"endOffset":70303,"count":0},{"startOffset":70309,"endOffset":70624,"count":0},{"startOffset":70626,"endOffset":70808,"count":0},{"startOffset":70812,"endOffset":70826,"count":41}],"isBlockCoverage":true}]},{"scriptId":"50","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3526,"endOffset":3726,"count":106},{"startOffset":3577,"endOffset":3608,"count":1},{"startOffset":3610,"endOffset":3724,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7221,"endOffset":7846,"count":146},{"startOffset":7305,"endOffset":7337,"count":106},{"startOffset":7339,"endOffset":7371,"count":40},{"startOffset":7371,"endOffset":7408,"count":106},{"startOffset":7408,"endOffset":7526,"count":1},{"startOffset":7526,"endOffset":7648,"count":105},{"startOffset":7565,"endOffset":7648,"count":0},{"startOffset":7648,"endOffset":7762,"count":106},{"startOffset":7762,"endOffset":7826,"count":0},{"startOffset":7826,"endOffset":7845,"count":106}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":7904,"endOffset":8433,"count":191},{"startOffset":7974,"endOffset":8109,"count":0},{"startOffset":8141,"endOffset":8431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8574,"endOffset":9164,"count":331},{"startOffset":8804,"endOffset":8824,"count":0},{"startOffset":8894,"endOffset":8962,"count":0},{"startOffset":8981,"endOffset":9163,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9907,"endOffset":10214,"count":185}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10250,"endOffset":10307,"count":185}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10339,"endOffset":10396,"count":103}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10995,"endOffset":11077,"count":536}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11564,"endOffset":11675,"count":740}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":12847,"endOffset":13389,"count":185}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13730,"endOffset":13960,"count":288},{"startOffset":13767,"endOffset":13845,"count":0},{"startOffset":13847,"endOffset":13914,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14078,"endOffset":15157,"count":134},{"startOffset":14158,"endOffset":14684,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15559,"endOffset":16815,"count":41},{"startOffset":15640,"endOffset":15695,"count":0},{"startOffset":15718,"endOffset":15744,"count":0},{"startOffset":15801,"endOffset":15812,"count":0},{"startOffset":15834,"endOffset":15871,"count":0},{"startOffset":15876,"endOffset":15902,"count":0},{"startOffset":15907,"endOffset":15919,"count":0},{"startOffset":15941,"endOffset":15977,"count":0},{"startOffset":15983,"endOffset":16030,"count":0},{"startOffset":16035,"endOffset":16046,"count":0},{"startOffset":16068,"endOffset":16125,"count":0},{"startOffset":16131,"endOffset":16177,"count":0},{"startOffset":16182,"endOffset":16193,"count":0},{"startOffset":16215,"endOffset":16270,"count":0},{"startOffset":16276,"endOffset":16324,"count":0},{"startOffset":16329,"endOffset":16340,"count":0},{"startOffset":16362,"endOffset":16420,"count":0},{"startOffset":16425,"endOffset":16436,"count":0},{"startOffset":16458,"endOffset":16516,"count":0},{"startOffset":16522,"endOffset":16569,"count":0},{"startOffset":16574,"endOffset":16585,"count":0},{"startOffset":16607,"endOffset":16663,"count":0},{"startOffset":16668,"endOffset":16679,"count":0},{"startOffset":16701,"endOffset":16757,"count":0},{"startOffset":16761,"endOffset":16814,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17792,"endOffset":18171,"count":1},{"startOffset":17848,"endOffset":17915,"count":0},{"startOffset":17936,"endOffset":18003,"count":0},{"startOffset":18044,"endOffset":18167,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18677,"endOffset":18947,"count":331},{"startOffset":18739,"endOffset":18761,"count":0},{"startOffset":18763,"endOffset":18849,"count":0},{"startOffset":18925,"endOffset":18945,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18992,"endOffset":19127,"count":226}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19170,"endOffset":19291,"count":2},{"startOffset":19221,"endOffset":19240,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24365,"endOffset":24835,"count":1},{"startOffset":24465,"endOffset":24833,"count":0}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2274,"endOffset":2343,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":4939,"endOffset":5349,"count":1},{"startOffset":5037,"endOffset":5131,"count":0},{"startOffset":5204,"endOffset":5218,"count":0},{"startOffset":5220,"endOffset":5330,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":8491,"endOffset":10080,"count":1},{"startOffset":8690,"endOffset":8883,"count":0},{"startOffset":8931,"endOffset":9124,"count":0},{"startOffset":9283,"endOffset":9430,"count":322},{"startOffset":9318,"endOffset":9371,"count":68},{"startOffset":9373,"endOffset":9426,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9509,"endOffset":9535,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9594,"endOffset":9641,"count":1}],"isBlockCoverage":true},{"functionName":"isBuiltin","ranges":[{"startOffset":9740,"endOffset":9816,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":10349,"endOffset":11101,"count":1},{"startOffset":10529,"endOffset":10545,"count":0},{"startOffset":10643,"endOffset":10649,"count":0},{"startOffset":10693,"endOffset":10759,"count":0},{"startOffset":10984,"endOffset":11099,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":11389,"endOffset":11933,"count":1},{"startOffset":11731,"endOffset":11744,"count":0},{"startOffset":11870,"endOffset":11932,"count":0}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":13794,"endOffset":13925,"count":2}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":17204,"endOffset":21159,"count":1},{"startOffset":17337,"endOffset":17400,"count":0},{"startOffset":17537,"endOffset":17550,"count":0},{"startOffset":17772,"endOffset":18126,"count":0},{"startOffset":18208,"endOffset":18664,"count":0},{"startOffset":18709,"endOffset":18863,"count":0},{"startOffset":19068,"endOffset":19089,"count":0},{"startOffset":19091,"endOffset":19100,"count":0},{"startOffset":19128,"endOffset":19258,"count":0},{"startOffset":19443,"endOffset":19632,"count":0},{"startOffset":19686,"endOffset":20326,"count":0},{"startOffset":20417,"endOffset":20611,"count":0},{"startOffset":20637,"endOffset":20648,"count":0},{"startOffset":20650,"endOffset":20866,"count":0},{"startOffset":20962,"endOffset":21158,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":44234,"endOffset":45199,"count":1},{"startOffset":44275,"endOffset":44300,"count":0},{"startOffset":44352,"endOffset":44375,"count":0},{"startOffset":44583,"endOffset":44625,"count":0},{"startOffset":44924,"endOffset":45066,"count":0}],"isBlockCoverage":true}]},{"scriptId":"54","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":357,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1529,"endOffset":1703,"count":41},{"startOffset":1602,"endOffset":1673,"count":1}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1705,"endOffset":2349,"count":1},{"startOffset":1916,"endOffset":2070,"count":0},{"startOffset":2113,"endOffset":2319,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2351,"endOffset":2951,"count":1},{"startOffset":2653,"endOffset":2686,"count":0},{"startOffset":2739,"endOffset":2875,"count":0},{"startOffset":2877,"endOffset":2950,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceMapURLMagicComment","ranges":[{"startOffset":2953,"endOffset":3396,"count":40},{"startOffset":3274,"endOffset":3302,"count":1},{"startOffset":3328,"endOffset":3350,"count":39},{"startOffset":3350,"endOffset":3395,"count":1}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3398,"endOffset":5168,"count":40},{"startOffset":3600,"endOffset":3620,"count":0},{"startOffset":3623,"endOffset":3630,"count":0},{"startOffset":3764,"endOffset":3888,"count":0},{"startOffset":4079,"endOffset":4096,"count":39},{"startOffset":4096,"endOffset":4268,"count":1},{"startOffset":4269,"endOffset":4283,"count":0},{"startOffset":4310,"endOffset":4495,"count":0},{"startOffset":4495,"endOffset":5166,"count":1},{"startOffset":4524,"endOffset":4789,"count":0},{"startOffset":5108,"endOffset":5162,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5763,"endOffset":6283,"count":1},{"startOffset":5900,"endOffset":5975,"count":0},{"startOffset":5982,"endOffset":6062,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6473,"endOffset":6818,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6775,"endOffset":6814,"count":9878}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6820,"endOffset":7100,"count":1},{"startOffset":7048,"endOffset":7098,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8050,"endOffset":8377,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8128,"endOffset":8234,"count":41}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":464,"endOffset":598,"count":271},{"startOffset":521,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":733,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":879,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":962,"endOffset":1228,"count":271},{"startOffset":1084,"endOffset":1185,"count":8},{"startOffset":1185,"endOffset":1225,"count":263}],"isBlockCoverage":true}]},{"scriptId":"57","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":901,"endOffset":926,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":949,"endOffset":1341,"count":1},{"startOffset":1128,"endOffset":1132,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":1472,"endOffset":1781,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":6543,"endOffset":6731,"count":40},{"startOffset":6650,"endOffset":6696,"count":0}],"isBlockCoverage":true}]},{"scriptId":"58","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":279,"endOffset":955,"count":6},{"startOffset":332,"endOffset":369,"count":1},{"startOffset":369,"endOffset":602,"count":5},{"startOffset":602,"endOffset":905,"count":3},{"startOffset":636,"endOffset":770,"count":1},{"startOffset":695,"endOffset":748,"count":0},{"startOffset":798,"endOffset":901,"count":0},{"startOffset":905,"endOffset":954,"count":5}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/modules/esm/utils","functions":[{"functionName":"setCallbackForWrap","ranges":[{"startOffset":538,"endOffset":612,"count":40}],"isBlockCoverage":true},{"functionName":"getDefaultConditions","ranges":[{"startOffset":637,"endOffset":743,"count":208}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":771,"endOffset":886,"count":103}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":966,"endOffset":1348,"count":1},{"startOffset":1149,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":1418,"endOffset":1777,"count":103},{"startOffset":1531,"endOffset":1739,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":2437,"endOffset":2755,"count":1}],"isBlockCoverage":true}]},{"scriptId":"62","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":155,"endOffset":666,"count":1},{"startOffset":495,"endOffset":502,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":668,"endOffset":1558,"count":1},{"startOffset":1184,"endOffset":1196,"count":0},{"startOffset":1378,"endOffset":1390,"count":0},{"startOffset":1457,"endOffset":1470,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1560,"endOffset":1920,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1736,"endOffset":1915,"count":1},{"startOffset":1833,"endOffset":1843,"count":0}],"isBlockCoverage":true},{"functionName":"handleMainPromise","ranges":[{"startOffset":1922,"endOffset":2196,"count":1}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2382,"endOffset":2780,"count":1},{"startOffset":2592,"endOffset":2599,"count":0},{"startOffset":2605,"endOffset":2778,"count":0}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/dns/utils","functions":[{"functionName":"initializeDns","ranges":[{"startOffset":5427,"endOffset":5813,"count":1},{"startOffset":5570,"endOffset":5680,"count":0},{"startOffset":5728,"endOffset":5812,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5753,"endOffset":5809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":778,"endOffset":955,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":1158,"endOffset":3262,"count":1},{"startOffset":2050,"endOffset":2154,"count":0},{"startOffset":3042,"endOffset":3204,"count":0}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":3264,"endOffset":3553,"count":1}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":3555,"endOffset":3611,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":3613,"endOffset":5724,"count":1},{"startOffset":4393,"endOffset":4445,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":5726,"endOffset":6007,"count":13},{"startOffset":5847,"endOffset":6005,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":6009,"endOffset":6529,"count":1},{"startOffset":6384,"endOffset":6523,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6413,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"setupFetch","ranges":[{"startOffset":6565,"endOffset":7716,"count":1},{"startOffset":6696,"endOffset":6713,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":6731,"endOffset":6876,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":6880,"endOffset":6975,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInterface","ranges":[{"startOffset":7027,"endOffset":7268,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7128,"endOffset":7178,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7186,"endOffset":7256,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7601,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":7822,"endOffset":8785,"count":1},{"startOffset":7968,"endOffset":7985,"count":0},{"startOffset":8474,"endOffset":8783,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":8159,"endOffset":8335,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":8636,"endOffset":8735,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":8787,"endOffset":9308,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":9416,"endOffset":9704,"count":1},{"startOffset":9566,"endOffset":9583,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":9706,"endOffset":9931,"count":1},{"startOffset":9808,"endOffset":9930,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":9933,"endOffset":10182,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10078,"endOffset":10173,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":10184,"endOffset":10417,"count":1},{"startOffset":10335,"endOffset":10415,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":10479,"endOffset":10667,"count":1},{"startOffset":10567,"endOffset":10665,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":10669,"endOffset":11250,"count":1},{"startOffset":10804,"endOffset":11248,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":10917,"endOffset":10978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11170,"endOffset":11242,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":11252,"endOffset":11511,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":11513,"endOffset":11596,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":11598,"endOffset":12180,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":12375,"endOffset":14327,"count":1},{"startOffset":13087,"endOffset":13389,"count":16},{"startOffset":13132,"endOffset":13364,"count":0},{"startOffset":13706,"endOffset":13903,"count":0},{"startOffset":13931,"endOffset":14325,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":14329,"endOffset":14894,"count":1},{"startOffset":14405,"endOffset":14892,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":14896,"endOffset":15166,"count":1},{"startOffset":14983,"endOffset":15164,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":15168,"endOffset":16993,"count":1},{"startOffset":15296,"endOffset":16991,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":16995,"endOffset":17226,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":17228,"endOffset":17349,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":17351,"endOffset":17898,"count":1},{"startOffset":17651,"endOffset":17896,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":17900,"endOffset":18187,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":18189,"endOffset":18446,"count":1},{"startOffset":18274,"endOffset":18444,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":18448,"endOffset":18796,"count":1},{"startOffset":18642,"endOffset":18794,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":18798,"endOffset":18892,"count":1}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3324,"endOffset":3427,"count":4},{"startOffset":3376,"endOffset":3405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"384","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":false}]},{"scriptId":"385","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2996,"count":1}],"isBlockCoverage":false},{"functionName":"initializeLoader","ranges":[{"startOffset":748,"endOffset":1991,"count":1},{"startOffset":808,"endOffset":819,"count":0},{"startOffset":1052,"endOffset":1078,"count":0},{"startOffset":1246,"endOffset":1632,"count":0},{"startOffset":1883,"endOffset":1961,"count":0}],"isBlockCoverage":true},{"functionName":"loadModulesInIsolation","ranges":[{"startOffset":1993,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"loadESM","ranges":[{"startOffset":2658,"endOffset":2994,"count":1},{"startOffset":2766,"endOffset":2992,"count":0}],"isBlockCoverage":true}]},{"scriptId":"386","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26009,"count":1}],"isBlockCoverage":false},{"functionName":"newModuleMap","ranges":[{"startOffset":987,"endOffset":1104,"count":2}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":1254,"endOffset":1376,"count":44}],"isBlockCoverage":true},{"functionName":"nextHookFactory","ranges":[{"startOffset":3284,"endOffset":5366,"count":147},{"startOffset":3885,"endOffset":4125,"count":0}],"isBlockCoverage":true},{"functionName":"chainAdvancedTooFar","ranges":[{"startOffset":4203,"endOffset":4371,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.__proto__","ranges":[{"startOffset":4413,"endOffset":5300,"count":147},{"startOffset":5241,"endOffset":5272,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5589,"endOffset":25926,"count":2}],"isBlockCoverage":false},{"functionName":"ESMLoader","ranges":[{"startOffset":6961,"endOffset":7217,"count":2},{"startOffset":7037,"endOffset":7097,"count":0},{"startOffset":7156,"endOffset":7213,"count":0}],"isBlockCoverage":true},{"functionName":"pluckHooks","ranges":[{"startOffset":7311,"endOffset":8593,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomLoaders","ranges":[{"startOffset":8870,"endOffset":9669,"count":1},{"startOffset":8969,"endOffset":9665,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":9673,"endOffset":10570,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":11305,"endOffset":12238,"count":105},{"startOffset":11521,"endOffset":11777,"count":0},{"startOffset":12042,"endOffset":12104,"count":0},{"startOffset":12133,"endOffset":12217,"count":42}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":12876,"endOffset":13934,"count":42},{"startOffset":13467,"endOffset":13507,"count":1},{"startOffset":13562,"endOffset":13577,"count":0},{"startOffset":13579,"endOffset":13633,"count":0}],"isBlockCoverage":true},{"functionName":"moduleProvider","ranges":[{"startOffset":12964,"endOffset":13409,"count":42},{"startOffset":13239,"endOffset":13319,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":14644,"endOffset":15976,"count":1},{"startOffset":15752,"endOffset":15975,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15562,"endOffset":15580,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15596,"endOffset":15633,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":16466,"endOffset":19714,"count":42},{"startOffset":18070,"endOffset":18101,"count":0},{"startOffset":18131,"endOffset":18154,"count":0},{"startOffset":18156,"endOffset":18227,"count":0},{"startOffset":18363,"endOffset":18395,"count":0},{"startOffset":18531,"endOffset":18611,"count":0},{"startOffset":18665,"endOffset":18855,"count":0},{"startOffset":18881,"endOffset":19104,"count":0},{"startOffset":19142,"endOffset":19297,"count":0},{"startOffset":19329,"endOffset":19364,"count":40},{"startOffset":19365,"endOffset":19399,"count":40},{"startOffset":19400,"endOffset":19435,"count":40},{"startOffset":19442,"endOffset":19619,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":16745,"endOffset":17498,"count":42},{"startOffset":16823,"endOffset":17077,"count":0},{"startOffset":17243,"endOffset":17415,"count":0}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":17527,"endOffset":17764,"count":84},{"startOffset":17617,"endOffset":17758,"count":0}],"isBlockCoverage":true},{"functionName":"preload","ranges":[{"startOffset":19718,"endOffset":22436,"count":1},{"startOffset":19798,"endOffset":22435,"count":0}],"isBlockCoverage":true},{"functionName":"replacedImportMetaInitializer","ranges":[{"startOffset":21537,"endOffset":21837,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21939,"endOffset":22272,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":22440,"endOffset":22529,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23210,"endOffset":25924,"count":105},{"startOffset":23359,"endOffset":23397,"count":104},{"startOffset":23398,"endOffset":23432,"count":0},{"startOffset":23439,"endOffset":23560,"count":0},{"startOffset":24799,"endOffset":24830,"count":0},{"startOffset":24860,"endOffset":24883,"count":0},{"startOffset":24885,"endOffset":24956,"count":0},{"startOffset":25046,"endOffset":25081,"count":103},{"startOffset":25095,"endOffset":25243,"count":0},{"startOffset":25278,"endOffset":25531,"count":0},{"startOffset":25635,"endOffset":25851,"count":42},{"startOffset":25679,"endOffset":25845,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":23926,"endOffset":24195,"count":105}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":24224,"endOffset":24461,"count":210},{"startOffset":24314,"endOffset":24455,"count":0}],"isBlockCoverage":true}]},{"scriptId":"387","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37022,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2067,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":2695,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":3536,"endOffset":4634,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":4767,"endOffset":4833,"count":185},{"startOffset":4819,"endOffset":4833,"count":51}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":4895,"endOffset":4993,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5381,"endOffset":7220,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":7400,"endOffset":8611,"count":103},{"startOffset":7540,"endOffset":7683,"count":0},{"startOffset":7789,"endOffset":7825,"count":0},{"startOffset":7862,"endOffset":7989,"count":0},{"startOffset":8016,"endOffset":8271,"count":0},{"startOffset":8516,"endOffset":8521,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":8723,"endOffset":8934,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":9044,"endOffset":9239,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":9406,"endOffset":9789,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":9791,"endOffset":10169,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":10892,"endOffset":13684,"count":34},{"startOffset":11061,"endOffset":11072,"count":0},{"startOffset":11073,"endOffset":11109,"count":0},{"startOffset":11115,"endOffset":11189,"count":0},{"startOffset":11239,"endOffset":11851,"count":0},{"startOffset":11943,"endOffset":12553,"count":0},{"startOffset":12776,"endOffset":12850,"count":0},{"startOffset":12890,"endOffset":13683,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11626,"endOffset":11639,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12152,"endOffset":12165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12298,"endOffset":12311,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13025,"endOffset":13038,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13265,"endOffset":13278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13618,"endOffset":13631,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":13739,"endOffset":13879,"count":156},{"startOffset":13831,"endOffset":13876,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":14143,"endOffset":16391,"count":73},{"startOffset":14336,"endOffset":14490,"count":34},{"startOffset":14490,"endOffset":16274,"count":39},{"startOffset":14522,"endOffset":15360,"count":0},{"startOffset":15513,"endOffset":15741,"count":156},{"startOffset":15571,"endOffset":15735,"count":0},{"startOffset":15784,"endOffset":16199,"count":122},{"startOffset":15841,"endOffset":15863,"count":117},{"startOffset":15865,"endOffset":16193,"count":39},{"startOffset":16146,"endOffset":16155,"count":0},{"startOffset":16199,"endOffset":16274,"count":0},{"startOffset":16274,"endOffset":16390,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":16576,"endOffset":17511,"count":34},{"startOffset":16708,"endOffset":16720,"count":0},{"startOffset":16776,"endOffset":16789,"count":0},{"startOffset":16929,"endOffset":17480,"count":4250},{"startOffset":17039,"endOffset":17096,"count":34},{"startOffset":17096,"endOffset":17476,"count":4216},{"startOffset":17152,"endOffset":17476,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":17721,"endOffset":20280,"count":34},{"startOffset":17933,"endOffset":17960,"count":0},{"startOffset":18362,"endOffset":18436,"count":0},{"startOffset":18467,"endOffset":20279,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":20282,"endOffset":20813,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":20942,"endOffset":23399,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":23504,"endOffset":23617,"count":99}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":23779,"endOffset":24831,"count":34},{"startOffset":23970,"endOffset":24198,"count":0},{"startOffset":24244,"endOffset":24259,"count":4},{"startOffset":24260,"endOffset":24312,"count":30},{"startOffset":24489,"endOffset":24514,"count":0},{"startOffset":24541,"endOffset":24660,"count":0},{"startOffset":24716,"endOffset":24720,"count":4},{"startOffset":24721,"endOffset":24774,"count":30}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":24993,"endOffset":27085,"count":34},{"startOffset":25100,"endOffset":25160,"count":0},{"startOffset":25162,"endOffset":25208,"count":0},{"startOffset":25512,"endOffset":25558,"count":3},{"startOffset":25559,"endOffset":25592,"count":3},{"startOffset":25594,"endOffset":25711,"count":3},{"startOffset":25715,"endOffset":25886,"count":31},{"startOffset":25886,"endOffset":26876,"count":82},{"startOffset":26068,"endOffset":26345,"count":51},{"startOffset":26145,"endOffset":26182,"count":0},{"startOffset":26345,"endOffset":26524,"count":31},{"startOffset":26526,"endOffset":26643,"count":31},{"startOffset":26643,"endOffset":26876,"count":0},{"startOffset":26876,"endOffset":27084,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":27146,"endOffset":27256,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":27258,"endOffset":27529,"count":208},{"startOffset":27328,"endOffset":27511,"count":136},{"startOffset":27386,"endOffset":27398,"count":132},{"startOffset":27398,"endOffset":27507,"count":4},{"startOffset":27511,"endOffset":27528,"count":72}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":27531,"endOffset":27714,"count":208},{"startOffset":27617,"endOffset":27630,"count":0},{"startOffset":27659,"endOffset":27671,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":27907,"endOffset":28698,"count":103},{"startOffset":28233,"endOffset":28279,"count":68},{"startOffset":28279,"endOffset":28569,"count":35},{"startOffset":28324,"endOffset":28396,"count":0},{"startOffset":28457,"endOffset":28565,"count":34},{"startOffset":28607,"endOffset":28633,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":28844,"endOffset":30301,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":30363,"endOffset":31558,"count":105},{"startOffset":30457,"endOffset":31556,"count":104},{"startOffset":30564,"endOffset":31552,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLProtocol","ranges":[{"startOffset":31560,"endOffset":31758,"count":103},{"startOffset":31637,"endOffset":31664,"count":0},{"startOffset":31665,"endOffset":31698,"count":0},{"startOffset":31700,"endOffset":31756,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":31760,"endOffset":32275,"count":103},{"startOffset":31853,"endOffset":31887,"count":69},{"startOffset":31888,"endOffset":31922,"count":0},{"startOffset":31923,"endOffset":32066,"count":0},{"startOffset":32071,"endOffset":32273,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":32277,"endOffset":36271,"count":105},{"startOffset":32393,"endOffset":32412,"count":104},{"startOffset":32402,"endOffset":32412,"count":0},{"startOffset":32414,"endOffset":33223,"count":0},{"startOffset":33265,"endOffset":33370,"count":104},{"startOffset":33327,"endOffset":33366,"count":0},{"startOffset":33454,"endOffset":33513,"count":68},{"startOffset":33513,"endOffset":33561,"count":37},{"startOffset":33561,"endOffset":33746,"count":71},{"startOffset":33636,"endOffset":33738,"count":0},{"startOffset":33753,"endOffset":33812,"count":0},{"startOffset":33817,"endOffset":33852,"count":34},{"startOffset":34186,"endOffset":34205,"count":0},{"startOffset":34270,"endOffset":34300,"count":71},{"startOffset":34302,"endOffset":34345,"count":2},{"startOffset":34345,"endOffset":34471,"count":103},{"startOffset":34471,"endOffset":34992,"count":1},{"startOffset":34949,"endOffset":34988,"count":0},{"startOffset":34992,"endOffset":35148,"count":103},{"startOffset":35148,"endOffset":35170,"count":1},{"startOffset":35171,"endOffset":35189,"count":102},{"startOffset":35202,"endOffset":36006,"count":0},{"startOffset":36006,"endOffset":36270,"count":103}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":36615,"endOffset":37018,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3630,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":808,"endOffset":2394,"count":183},{"startOffset":936,"endOffset":962,"count":178},{"startOffset":962,"endOffset":1122,"count":5},{"startOffset":1122,"endOffset":1397,"count":2},{"startOffset":1397,"endOffset":1467,"count":3},{"startOffset":1467,"endOffset":1647,"count":0},{"startOffset":1647,"endOffset":1851,"count":3},{"startOffset":1852,"endOffset":1863,"count":0},{"startOffset":1899,"endOffset":1918,"count":0},{"startOffset":1920,"endOffset":1983,"count":3},{"startOffset":1983,"endOffset":2010,"count":1},{"startOffset":2010,"endOffset":2043,"count":3},{"startOffset":2043,"endOffset":2070,"count":0},{"startOffset":2070,"endOffset":2148,"count":3},{"startOffset":2148,"endOffset":2170,"count":0},{"startOffset":2172,"endOffset":2196,"count":0},{"startOffset":2196,"endOffset":2393,"count":3}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":2467,"endOffset":3560,"count":133},{"startOffset":2585,"endOffset":3231,"count":152},{"startOffset":2719,"endOffset":2739,"count":0},{"startOffset":2855,"endOffset":2890,"count":133},{"startOffset":2890,"endOffset":3207,"count":19},{"startOffset":3207,"endOffset":3227,"count":0},{"startOffset":3231,"endOffset":3559,"count":0}],"isBlockCoverage":true}]},{"scriptId":"389","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3897,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":885,"endOffset":916,"count":2}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":981,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":1321,"endOffset":2531,"count":103},{"startOffset":1481,"endOffset":1555,"count":99},{"startOffset":1538,"endOffset":1550,"count":0},{"startOffset":1555,"endOffset":1627,"count":4},{"startOffset":1627,"endOffset":1823,"count":0},{"startOffset":1825,"endOffset":2530,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":2667,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":3171,"endOffset":3415,"count":103},{"startOffset":3334,"endOffset":3346,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":3574,"endOffset":3798,"count":2},{"startOffset":3785,"endOffset":3795,"count":0}],"isBlockCoverage":true}]},{"scriptId":"390","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":854,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":468,"endOffset":792,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2791,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":829,"endOffset":2086,"count":40},{"startOffset":1103,"endOffset":1950,"count":0},{"startOffset":1963,"endOffset":1973,"count":0},{"startOffset":1975,"endOffset":2033,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoad","ranges":[{"startOffset":2198,"endOffset":2752,"count":42},{"startOffset":2376,"endOffset":2432,"count":2},{"startOffset":2520,"endOffset":2548,"count":40},{"startOffset":2553,"endOffset":2577,"count":2},{"startOffset":2577,"endOffset":2671,"count":40}],"isBlockCoverage":true}]},{"scriptId":"392","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1279,"endOffset":1317,"count":5}],"isBlockCoverage":true},{"functionName":"validateAssertions","ranges":[{"startOffset":1738,"endOffset":2900,"count":42},{"startOffset":1920,"endOffset":2065,"count":0},{"startOffset":2330,"endOffset":2390,"count":0},{"startOffset":2396,"endOffset":2504,"count":0},{"startOffset":2510,"endOffset":2894,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3132,"endOffset":3546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":981,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":289,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":729,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1434,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":185,"endOffset":210,"count":1}],"isBlockCoverage":true},{"functionName":"ModuleMap","ranges":[{"startOffset":429,"endOffset":457,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":506,"endOffset":649,"count":105},{"startOffset":636,"endOffset":644,"count":63}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":652,"endOffset":1243,"count":42},{"startOffset":871,"endOffset":907,"count":0},{"startOffset":909,"endOffset":979,"count":0},{"startOffset":1063,"endOffset":1069,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":1246,"endOffset":1403,"count":147},{"startOffset":1376,"endOffset":1384,"count":63}],"isBlockCoverage":true}]},{"scriptId":"395","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10799,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":381,"endOffset":493,"count":80},{"startOffset":427,"endOffset":441,"count":79},{"startOffset":441,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":931,"endOffset":956,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1437,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":1969,"endOffset":2390,"count":80},{"startOffset":2046,"endOffset":2073,"count":40},{"startOffset":2075,"endOffset":2092,"count":0},{"startOffset":2186,"endOffset":2211,"count":0},{"startOffset":2230,"endOffset":2309,"count":0},{"startOffset":2310,"endOffset":2314,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":2392,"endOffset":2666,"count":40},{"startOffset":2451,"endOffset":2463,"count":0},{"startOffset":2603,"endOffset":2622,"count":1},{"startOffset":2623,"endOffset":2632,"count":39}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2668,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2815,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":3035,"endOffset":3547,"count":40}],"isBlockCoverage":true},{"functionName":"initializeImportMeta","ranges":[{"startOffset":3436,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":3714,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":4384,"endOffset":5822,"count":0}],"isBlockCoverage":false},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":5826,"endOffset":7346,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":7470,"endOffset":7853,"count":2},{"startOffset":7726,"endOffset":7778,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":7917,"endOffset":9794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9860,"endOffset":10796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"node:internal/modules/esm/handle_process_exit","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":false},{"functionName":"handleProcessExit","ranges":[{"startOffset":298,"endOffset":379,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8150,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":903,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1272,"endOffset":3085,"count":42}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1841,"endOffset":2702,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2297,"endOffset":2548,"count":104}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3089,"endOffset":3234,"count":1}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3238,"endOffset":6858,"count":1},{"startOffset":3698,"endOffset":3875,"count":0},{"startOffset":3932,"endOffset":6611,"count":0},{"startOffset":6658,"endOffset":6854,"count":42}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3337,"endOffset":3597,"count":105},{"startOffset":3398,"endOffset":3423,"count":63},{"startOffset":3423,"endOffset":3596,"count":42}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":6862,"endOffset":8070,"count":1},{"startOffset":7037,"endOffset":8013,"count":0}],"isBlockCoverage":true}]},{"scriptId":"398","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27057,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2940,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3094,"endOffset":3177,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3179,"endOffset":8200,"count":40}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":3320,"endOffset":3497,"count":40},{"startOffset":3434,"endOffset":3438,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3501,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3562,"endOffset":3598,"count":80}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":3602,"endOffset":3684,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3688,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3748,"endOffset":3812,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":3816,"endOffset":3868,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":3872,"endOffset":3916,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3920,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":4033,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":4118,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":4189,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4336,"endOffset":4396,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4400,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4468,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4546,"endOffset":4657,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4661,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4748,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4841,"endOffset":5633,"count":40},{"startOffset":4875,"endOffset":4913,"count":0},{"startOffset":4944,"endOffset":4985,"count":0},{"startOffset":5211,"endOffset":5572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5153,"endOffset":5195,"count":40}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":5296,"endOffset":5408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5411,"endOffset":5556,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":5772,"endOffset":6537,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":6835,"endOffset":6986,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":7235,"endOffset":7389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7393,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7796,"endOffset":7849,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7853,"endOffset":7940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7944,"endOffset":7977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7981,"endOffset":8198,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":8202,"endOffset":8573,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8313,"endOffset":8372,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8359,"endOffset":8371,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8378,"endOffset":8565,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":8575,"endOffset":9035,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":9037,"endOffset":9157,"count":160},{"startOffset":9081,"endOffset":9090,"count":0},{"startOffset":9096,"endOffset":9155,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":9159,"endOffset":10301,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":10303,"endOffset":12442,"count":40},{"startOffset":10455,"endOffset":10485,"count":0},{"startOffset":10765,"endOffset":10803,"count":0},{"startOffset":10836,"endOffset":10884,"count":0},{"startOffset":10917,"endOffset":10955,"count":0},{"startOffset":11197,"endOffset":11269,"count":0},{"startOffset":11413,"endOffset":11417,"count":0},{"startOffset":11502,"endOffset":11558,"count":0},{"startOffset":11652,"endOffset":11663,"count":0},{"startOffset":11720,"endOffset":11780,"count":0},{"startOffset":11828,"endOffset":11842,"count":0},{"startOffset":11844,"endOffset":11954,"count":0},{"startOffset":11985,"endOffset":12436,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":12595,"endOffset":12816,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":12818,"endOffset":13087,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":13089,"endOffset":13447,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":13567,"endOffset":13892,"count":40}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":13894,"endOffset":15265,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":15267,"endOffset":15604,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15606,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":16857,"endOffset":17299,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":17301,"endOffset":17607,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":17609,"endOffset":17742,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":17744,"endOffset":17903,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":17905,"endOffset":18109,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":18111,"endOffset":18482,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":18484,"endOffset":18573,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":18575,"endOffset":18656,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":18658,"endOffset":19134,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":19136,"endOffset":19584,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":19586,"endOffset":19825,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":19827,"endOffset":20551,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":20553,"endOffset":20731,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":20733,"endOffset":21003,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":21005,"endOffset":21272,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":21274,"endOffset":21548,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":21550,"endOffset":21873,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":21875,"endOffset":22013,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":22015,"endOffset":22148,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":22150,"endOffset":22336,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":22338,"endOffset":22566,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":22568,"endOffset":22844,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":22846,"endOffset":23043,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":23045,"endOffset":23318,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":23320,"endOffset":23592,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":23594,"endOffset":23793,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":23795,"endOffset":24072,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":24074,"endOffset":24247,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":24249,"endOffset":24497,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":24499,"endOffset":25174,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":25176,"endOffset":25290,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":25292,"endOffset":25533,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":25535,"endOffset":25879,"count":40},{"startOffset":25652,"endOffset":25658,"count":0},{"startOffset":25699,"endOffset":25736,"count":0}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":25881,"endOffset":26546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7453,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1174,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1637,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2498,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2936,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3237,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3927,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4128,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4814,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5446,"endOffset":6943,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6946,"endOffset":7393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6836,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1197,"endOffset":2011,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":2015,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2062,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2133,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":3517,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4324,"endOffset":5013,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":5017,"endOffset":5394,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":5398,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":5841,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6422,"endOffset":6780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5219,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2130,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"StringDecoder","ranges":[{"startOffset":2709,"endOffset":2908,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3234,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3899,"endOffset":4090,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4301,"endOffset":4458,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4596,"endOffset":4809,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4900,"endOffset":4963,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5055,"endOffset":5170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11040,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1417,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1467,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1817,"endOffset":2174,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2562,"endOffset":3395,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3616,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3870,"endOffset":4151,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4240,"endOffset":4667,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4698,"endOffset":4980,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5013,"endOffset":5263,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5267,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6771,"endOffset":7680,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7897,"endOffset":7905,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8028,"endOffset":8365,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8394,"endOffset":8463,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8494,"endOffset":8565,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8568,"endOffset":8620,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8844,"endOffset":8880,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8884,"endOffset":8925,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8931,"endOffset":10908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7482,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsPromises","ranges":[{"startOffset":812,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":921,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":1009,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1592,"endOffset":7428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7987,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":437,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":856,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1078,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":1279,"endOffset":1550,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":1552,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":1768,"endOffset":1936,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":1938,"endOffset":2105,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2107,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2221,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":2553,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":2838,"endOffset":3129,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3157,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":3583,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":3909,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":4259,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":4561,"endOffset":4785,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":4787,"endOffset":5101,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5103,"endOffset":5315,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":5317,"endOffset":5529,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":5531,"endOffset":6036,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6038,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":6292,"endOffset":6419,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":6421,"endOffset":6609,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":6611,"endOffset":6949,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":6951,"endOffset":7096,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":7098,"endOffset":7403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39632,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3801,"endOffset":9464,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9705,"endOffset":9805,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9808,"endOffset":9920,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10029,"endOffset":10080,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10174,"endOffset":10217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10221,"endOffset":10412,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10551,"endOffset":10805,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10809,"endOffset":11116,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11120,"endOffset":11362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11366,"endOffset":11453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11457,"endOffset":11625,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11629,"endOffset":11826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11830,"endOffset":13008,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13012,"endOffset":14017,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14101,"endOffset":14272,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14353,"endOffset":14484,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14576,"endOffset":14712,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14983,"endOffset":15142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15146,"endOffset":16880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16884,"endOffset":17553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17557,"endOffset":17956,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17960,"endOffset":20168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20172,"endOffset":20633,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20637,"endOffset":20895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20899,"endOffset":21381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21385,"endOffset":21866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21870,"endOffset":22630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22634,"endOffset":23061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23065,"endOffset":23343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23347,"endOffset":23605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23609,"endOffset":23869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23873,"endOffset":24028,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24032,"endOffset":24707,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24711,"endOffset":24860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24864,"endOffset":25018,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25022,"endOffset":25209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25213,"endOffset":25521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25525,"endOffset":25833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26268,"endOffset":26902,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26906,"endOffset":27614,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27689,"endOffset":28629,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28806,"endOffset":28975,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29094,"endOffset":29651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29688,"endOffset":37725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38033,"endOffset":39051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11903,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":4},{"startOffset":544,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11347,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11377,"endOffset":11790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"node:internal/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16693,"count":1}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1208,"endOffset":1333,"count":7006},{"startOffset":1289,"endOffset":1331,"count":0}],"isBlockCoverage":true},{"functionName":"validateDecoder","ranges":[{"startOffset":1335,"endOffset":1460,"count":46},{"startOffset":1416,"endOffset":1458,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8206,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8706,"endOffset":8885,"count":2},{"startOffset":8817,"endOffset":8884,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":8956,"endOffset":9002,"count":1}],"isBlockCoverage":true},{"functionName":"get encoding","ranges":[{"startOffset":9006,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9077,"endOffset":9169,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9173,"endOffset":9483,"count":7006},{"startOffset":9300,"endOffset":9359,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9487,"endOffset":9883,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10255,"endOffset":12221,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10393,"endOffset":11330,"count":2},{"startOffset":10703,"endOffset":10750,"count":0},{"startOffset":10834,"endOffset":10857,"count":1},{"startOffset":10858,"endOffset":10861,"count":1},{"startOffset":10898,"endOffset":10926,"count":1},{"startOffset":10927,"endOffset":10930,"count":1},{"startOffset":11281,"endOffset":11324,"count":0}],"isBlockCoverage":true},{"functionName":"#prepareConverter","ranges":[{"startOffset":11336,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11607,"endOffset":12192,"count":46},{"startOffset":11842,"endOffset":12191,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":12223,"endOffset":15058,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":15155,"endOffset":15230,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":15235,"endOffset":15356,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":15361,"endOffset":15510,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":15515,"endOffset":16098,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///home/dmonad/ylabs/y-utility/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1},{"startOffset":274,"endOffset":313,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":351,"endOffset":444,"count":1},{"startOffset":434,"endOffset":437,"count":0}],"isBlockCoverage":true}]},{"scriptId":"410","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/testing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26671,"count":1},{"startOffset":1830,"endOffset":1876,"count":0},{"startOffset":2960,"endOffset":2990,"count":0},{"startOffset":3065,"endOffset":3089,"count":0}],"isBlockCoverage":true},{"functionName":"TestCase","ranges":[{"startOffset":1985,"endOffset":2207,"count":9}],"isBlockCoverage":true},{"functionName":"resetSeed","ranges":[{"startOffset":2211,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"get seed","ranges":[{"startOffset":2332,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"get prng","ranges":[{"startOffset":2670,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":3345,"endOffset":6053,"count":9},{"startOffset":3603,"endOffset":3624,"count":0},{"startOffset":3931,"endOffset":3970,"count":0},{"startOffset":4200,"endOffset":4225,"count":0},{"startOffset":4232,"endOffset":4269,"count":0},{"startOffset":4384,"endOffset":4399,"count":0},{"startOffset":4400,"endOffset":4438,"count":0},{"startOffset":4440,"endOffset":4468,"count":0},{"startOffset":4518,"endOffset":4556,"count":0},{"startOffset":4636,"endOffset":4668,"count":0},{"startOffset":4670,"endOffset":4699,"count":0},{"startOffset":4930,"endOffset":5058,"count":0},{"startOffset":5141,"endOffset":5163,"count":0},{"startOffset":5193,"endOffset":5208,"count":0},{"startOffset":5214,"endOffset":5503,"count":0},{"startOffset":5571,"endOffset":5903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4847,"endOffset":4862,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":6407,"endOffset":6488,"count":5}],"isBlockCoverage":true},{"functionName":"info","ranges":[{"startOffset":6756,"endOffset":6782,"count":5}],"isBlockCoverage":true},{"functionName":"group","ranges":[{"startOffset":7340,"endOffset":7451,"count":0}],"isBlockCoverage":false},{"functionName":"groupAsync","ranges":[{"startOffset":7946,"endOffset":8069,"count":0}],"isBlockCoverage":false},{"functionName":"measureTime","ranges":[{"startOffset":8561,"endOffset":8806,"count":2}],"isBlockCoverage":true},{"functionName":"measureTimeAsync","ranges":[{"startOffset":9337,"endOffset":9594,"count":0}],"isBlockCoverage":false},{"functionName":"compareArrays","ranges":[{"startOffset":9740,"endOffset":9929,"count":0}],"isBlockCoverage":false},{"functionName":"compareStrings","ranges":[{"startOffset":10079,"endOffset":10346,"count":0}],"isBlockCoverage":false},{"functionName":"compareObjects","ranges":[{"startOffset":10522,"endOffset":10590,"count":0}],"isBlockCoverage":false},{"functionName":"compareValues","ranges":[{"startOffset":10734,"endOffset":10889,"count":12},{"startOffset":10781,"endOffset":10873,"count":0}],"isBlockCoverage":true},{"functionName":"_failMessage","ranges":[{"startOffset":11021,"endOffset":11139,"count":0}],"isBlockCoverage":false},{"functionName":"_compare","ranges":[{"startOffset":11321,"endOffset":13833,"count":17},{"startOffset":11506,"endOffset":11554,"count":0},{"startOffset":11594,"endOffset":11660,"count":0},{"startOffset":11713,"endOffset":11786,"count":0},{"startOffset":11838,"endOffset":12095,"count":0},{"startOffset":12100,"endOffset":12413,"count":0},{"startOffset":12418,"endOffset":12849,"count":0},{"startOffset":12854,"endOffset":13295,"count":5},{"startOffset":12916,"endOffset":13010,"count":0},{"startOffset":13300,"endOffset":13564,"count":0},{"startOffset":13596,"endOffset":13786,"count":12},{"startOffset":13673,"endOffset":13786,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12267,"endOffset":12394,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12585,"endOffset":12830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13035,"endOffset":13282,"count":12},{"startOffset":13094,"endOffset":13197,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13475,"endOffset":13551,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":14008,"endOffset":14110,"count":5}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":14302,"endOffset":14413,"count":88},{"startOffset":14343,"endOffset":14411,"count":0}],"isBlockCoverage":true},{"functionName":"promiseRejected","ranges":[{"startOffset":14492,"endOffset":14596,"count":0}],"isBlockCoverage":false},{"functionName":"fails","ranges":[{"startOffset":14680,"endOffset":14824,"count":0}],"isBlockCoverage":false},{"functionName":"failsAsync","ranges":[{"startOffset":14921,"endOffset":15077,"count":0}],"isBlockCoverage":false},{"functionName":"runTests","ranges":[{"startOffset":15198,"endOffset":16645,"count":1},{"startOffset":15639,"endOffset":16129,"count":2},{"startOffset":15701,"endOffset":16125,"count":9},{"startOffset":15885,"endOffset":15906,"count":18},{"startOffset":16442,"endOffset":16603,"count":0}],"isBlockCoverage":true},{"functionName":"filterTest","ranges":[{"startOffset":15278,"endOffset":15353,"count":18},{"startOffset":15318,"endOffset":15353,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15396,"endOffset":15505,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15419,"endOffset":15484,"count":9},{"startOffset":15481,"endOffset":15484,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":16758,"endOffset":16865,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":17013,"endOffset":17089,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/logging.node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1},{"startOffset":1586,"endOffset":1610,"count":0}],"isBlockCoverage":true},{"functionName":"computeNodeLoggingArgs","ranges":[{"startOffset":732,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":1751,"endOffset":1810,"count":18}],"isBlockCoverage":true},{"functionName":"warn","ranges":[{"startOffset":1914,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"printError","ranges":[{"startOffset":2075,"endOffset":2108,"count":0}],"isBlockCoverage":false},{"functionName":"printImg","ranges":[{"startOffset":2280,"endOffset":2402,"count":1}],"isBlockCoverage":true},{"functionName":"printImgBase64","ranges":[{"startOffset":2538,"endOffset":2611,"count":1}],"isBlockCoverage":true},{"functionName":"group","ranges":[{"startOffset":2717,"endOffset":2778,"count":0}],"isBlockCoverage":false},{"functionName":"groupCollapsed","ranges":[{"startOffset":2893,"endOffset":2963,"count":9}],"isBlockCoverage":true},{"functionName":"groupEnd","ranges":[{"startOffset":3012,"endOffset":3042,"count":9}],"isBlockCoverage":true},{"functionName":"printDom","ranges":[{"startOffset":3139,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"printCanvas","ranges":[{"startOffset":3281,"endOffset":3339,"count":0}],"isBlockCoverage":false},{"functionName":"createVConsole","ranges":[{"startOffset":3425,"endOffset":3437,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLogger","ranges":[{"startOffset":3567,"endOffset":3627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///home/dmonad/ylabs/y-utility/y-multidoc-undomanager.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4356,"count":1}],"isBlockCoverage":true},{"functionName":"testUndo","ranges":[{"startOffset":186,"endOffset":1297,"count":1}],"isBlockCoverage":true},{"functionName":"testUndoMap","ranges":[{"startOffset":1361,"endOffset":1724,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1544,"endOffset":1577,"count":1}],"isBlockCoverage":true},{"functionName":"testUndoEvents","ranges":[{"startOffset":1791,"endOffset":2859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2078,"endOffset":2259,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2327,"endOffset":2365,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2431,"endOffset":2620,"count":2}],"isBlockCoverage":true},{"functionName":"testUndoAfterChangeAfterUndo","ranges":[{"startOffset":2940,"endOffset":3774,"count":1}],"isBlockCoverage":true},{"functionName":"testAfterDestroy","ranges":[{"startOffset":3843,"endOffset":4355,"count":1}],"isBlockCoverage":true}]},{"scriptId":"413","url":"file:///home/dmonad/ylabs/y-utility/y-keyvalue.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3468,"count":1}],"isBlockCoverage":true},{"functionName":"testBasic","ranges":[{"startOffset":164,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":425,"endOffset":502,"count":5}],"isBlockCoverage":true},{"functionName":"testInit","ranges":[{"startOffset":1708,"endOffset":2049,"count":1}],"isBlockCoverage":true},{"functionName":"testPerfYMap","ranges":[{"startOffset":2160,"endOffset":2796,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2371,"endOffset":2540,"count":1},{"startOffset":2422,"endOffset":2536,"count":10000}],"isBlockCoverage":true},{"functionName":"testPerfKv","ranges":[{"startOffset":2824,"endOffset":3467,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3072,"endOffset":3241,"count":1},{"startOffset":3123,"endOffset":3237,"count":10000}],"isBlockCoverage":true}]},{"scriptId":"414","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/environment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3483,"count":1},{"startOffset":531,"endOffset":565,"count":0},{"startOffset":566,"endOffset":576,"count":0},{"startOffset":656,"endOffset":688,"count":0},{"startOffset":3316,"endOffset":3461,"count":0}],"isBlockCoverage":true},{"functionName":"computeParams","ranges":[{"startOffset":810,"endOffset":2063,"count":6},{"startOffset":846,"endOffset":2045,"count":1},{"startOffset":1003,"endOffset":1401,"count":5},{"startOffset":1064,"endOffset":1200,"count":2},{"startOffset":1104,"endOffset":1159,"count":0},{"startOffset":1200,"endOffset":1393,"count":3},{"startOffset":1246,"endOffset":1336,"count":1},{"startOffset":1336,"endOffset":1383,"count":2},{"startOffset":1590,"endOffset":2041,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1757,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"hasParam","ranges":[{"startOffset":2184,"endOffset":2219,"count":5}],"isBlockCoverage":true},{"functionName":"getParam","ranges":[{"startOffset":2350,"endOffset":2413,"count":1},{"startOffset":2400,"endOffset":2413,"count":0}],"isBlockCoverage":true},{"functionName":"getVariable","ranges":[{"startOffset":2522,"endOffset":2673,"count":1},{"startOffset":2611,"endOffset":2673,"count":0}],"isBlockCoverage":true},{"functionName":"getConf","ranges":[{"startOffset":2778,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"hasConf","ranges":[{"startOffset":2944,"endOffset":3007,"count":2},{"startOffset":2978,"endOffset":3007,"count":1}],"isBlockCoverage":true}]},{"scriptId":"415","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4774,"count":1}],"isBlockCoverage":true},{"functionName":"simpleDiffString","ranges":[{"startOffset":1221,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"simpleDiffArray","ranges":[{"startOffset":2688,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"simpleDiffStringWithCursor","ranges":[{"startOffset":3443,"endOffset":4773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2001,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":154,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":433,"endOffset":500,"count":5},{"startOffset":472,"endOffset":498,"count":12}],"isBlockCoverage":true},{"functionName":"map","ranges":[{"startOffset":677,"endOffset":796,"count":3},{"startOffset":737,"endOffset":777,"count":11}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":883,"endOffset":906,"count":10}],"isBlockCoverage":true},{"functionName":"some","ranges":[{"startOffset":1035,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":1214,"endOffset":1285,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":1415,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":1684,"endOffset":1744,"count":12}],"isBlockCoverage":true},{"functionName":"equalFlat","ranges":[{"startOffset":1866,"endOffset":2000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3505,"count":1},{"startOffset":1291,"endOffset":1297,"count":0},{"startOffset":1562,"endOffset":1583,"count":0},{"startOffset":2265,"endOffset":2271,"count":0},{"startOffset":2434,"endOffset":2854,"count":0},{"startOffset":3168,"endOffset":3189,"count":0}],"isBlockCoverage":true},{"functionName":"toLowerCase","ranges":[{"startOffset":238,"endOffset":258,"count":19}],"isBlockCoverage":true},{"functionName":"trimLeft","ranges":[{"startOffset":364,"endOffset":397,"count":9}],"isBlockCoverage":true},{"functionName":"fromCamelCase","ranges":[{"startOffset":545,"endOffset":648,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":602,"endOffset":646,"count":19}],"isBlockCoverage":true},{"functionName":"utf8ByteLength","ranges":[{"startOffset":761,"endOffset":808,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeUtf8Polyfill","ranges":[{"startOffset":900,"endOffset":1154,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeUtf8Native","ranges":[{"startOffset":1388,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeUtf8Polyfill","ranges":[{"startOffset":1675,"endOffset":2178,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeUtf8Native","ranges":[{"startOffset":2965,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":3411,"endOffset":3504,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/math.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1249,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":450,"endOffset":465,"count":11}],"isBlockCoverage":true},{"functionName":"min","ranges":[{"startOffset":600,"endOffset":623,"count":18013},{"startOffset":616,"endOffset":619,"count":10},{"startOffset":620,"endOffset":623,"count":18003}],"isBlockCoverage":true},{"functionName":"max","ranges":[{"startOffset":757,"endOffset":780,"count":20027},{"startOffset":773,"endOffset":776,"count":19982},{"startOffset":777,"endOffset":780,"count":45}],"isBlockCoverage":true},{"functionName":"exp10","ranges":[{"startOffset":1005,"endOffset":1029,"count":12}],"isBlockCoverage":true},{"functionName":"isNegativeZero","ranges":[{"startOffset":1216,"endOffset":1248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":895,"count":1}],"isBlockCoverage":true},{"functionName":"uint32","ranges":[{"startOffset":355,"endOffset":399,"count":384}],"isBlockCoverage":true},{"functionName":"uint53","ranges":[{"startOffset":423,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":641,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"uuidv4","ranges":[{"startOffset":780,"endOffset":894,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":844,"endOffset":892,"count":372}],"isBlockCoverage":true}]},{"scriptId":"420","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/prng.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6079,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1105,"endOffset":1134,"count":1}],"isBlockCoverage":true},{"functionName":"bool","ranges":[{"startOffset":1288,"endOffset":1314,"count":0}],"isBlockCoverage":false},{"functionName":"int53","ranges":[{"startOffset":1663,"endOffset":1728,"count":0}],"isBlockCoverage":false},{"functionName":"uint53","ranges":[{"startOffset":2078,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"int32","ranges":[{"startOffset":2476,"endOffset":2541,"count":20000}],"isBlockCoverage":true},{"functionName":"uint32","ranges":[{"startOffset":2891,"endOffset":2936,"count":20000}],"isBlockCoverage":true},{"functionName":"int31","ranges":[{"startOffset":3430,"endOffset":3469,"count":0}],"isBlockCoverage":false},{"functionName":"real53","ranges":[{"startOffset":3665,"endOffset":3682,"count":0}],"isBlockCoverage":false},{"functionName":"char","ranges":[{"startOffset":4086,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"letter","ranges":[{"startOffset":4221,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"word","ranges":[{"startOffset":4468,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"utf16Rune","ranges":[{"startOffset":4791,"endOffset":4874,"count":0}],"isBlockCoverage":false},{"functionName":"utf16String","ranges":[{"startOffset":4965,"endOffset":5118,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":5375,"endOffset":5429,"count":0}],"isBlockCoverage":false},{"functionName":"uint8Array","ranges":[{"startOffset":5533,"endOffset":5699,"count":0}],"isBlockCoverage":false},{"functionName":"uint16Array","ranges":[{"startOffset":5827,"endOffset":5889,"count":0}],"isBlockCoverage":false},{"functionName":"uint32Array","ranges":[{"startOffset":5995,"endOffset":6057,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/statistics.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":540,"count":1}],"isBlockCoverage":true},{"functionName":"median","ranges":[{"startOffset":246,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"average","ranges":[{"startOffset":496,"endOffset":539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2699,"count":1}],"isBlockCoverage":true},{"functionName":"last","ranges":[{"startOffset":254,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":349,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":473,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"appendTo","ranges":[{"startOffset":652,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"every","ranges":[{"startOffset":1178,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":1546,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"equalFlat","ranges":[{"startOffset":1811,"endOffset":1890,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":2001,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"unique","ranges":[{"startOffset":2185,"endOffset":2211,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueBy","ranges":[{"startOffset":2359,"endOffset":2698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":296,"count":1}],"isBlockCoverage":true}]},{"scriptId":"424","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/time.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"getDate","ranges":[{"startOffset":214,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"humanizeDuration","ranges":[{"startOffset":570,"endOffset":1228,"count":12},{"startOffset":690,"endOffset":1220,"count":0},{"startOffset":1221,"endOffset":1225,"count":0}],"isBlockCoverage":true}]},{"scriptId":"425","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2440,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":334,"endOffset":381,"count":24}],"isBlockCoverage":true},{"functionName":"createEmpty","ranges":[{"startOffset":511,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"all","ranges":[{"startOffset":725,"endOffset":750,"count":0}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":837,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":969,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"resolveWith","ranges":[{"startOffset":1090,"endOffset":1117,"count":0}],"isBlockCoverage":false},{"functionName":"until","ranges":[{"startOffset":1364,"endOffset":1891,"count":0}],"isBlockCoverage":false},{"functionName":"wait","ranges":[{"startOffset":1980,"endOffset":2048,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":2373,"endOffset":2439,"count":9},{"startOffset":2405,"endOffset":2414,"count":0},{"startOffset":2415,"endOffset":2425,"count":0},{"startOffset":2426,"endOffset":2438,"count":0}],"isBlockCoverage":true}]},{"scriptId":"426","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/performance.node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1},{"startOffset":267,"endOffset":293,"count":0},{"startOffset":429,"endOffset":447,"count":0},{"startOffset":587,"endOffset":613,"count":0}],"isBlockCoverage":true}]},{"scriptId":"427","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":false}]},{"scriptId":"428","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":653,"endOffset":726,"count":27}],"isBlockCoverage":true},{"functionName":"PerformanceEntry","ranges":[{"startOffset":755,"endOffset":815,"count":0}],"isBlockCoverage":true},{"functionName":"get name","ranges":[{"startOffset":819,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":923,"endOffset":1038,"count":27}],"isBlockCoverage":true},{"functionName":"get startTime","ranges":[{"startOffset":1042,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1161,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1277,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1524,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"initPerformanceEntry","ranges":[{"startOffset":1968,"endOffset":2148,"count":27}],"isBlockCoverage":true},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2150,"endOffset":2359,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2476,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2590,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":2845,"endOffset":3102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7416,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":884,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":948,"endOffset":1073,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1077,"endOffset":1213,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1217,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1384,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1524,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1684,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":1836,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":1984,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2137,"endOffset":2320,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2324,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2507,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2687,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":2863,"endOffset":3061,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3065,"endOffset":3254,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3258,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3420,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3584,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3724,"endOffset":3872,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":3876,"endOffset":4024,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4028,"endOffset":4282,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4286,"endOffset":5227,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6095,"endOffset":6705,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":6774,"endOffset":7341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16740,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2620,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2883,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3225,"endOffset":3646,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3648,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4031,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4095,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4238,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":4546,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5043,"endOffset":5290,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceObserverEntryList","ranges":[{"startOffset":5642,"endOffset":5932,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5934,"endOffset":9505,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":9987,"endOffset":10189,"count":27},{"startOffset":10051,"endOffset":10118,"count":0},{"startOffset":10152,"endOffset":10187,"count":0}],"isBlockCoverage":true},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10250,"endOffset":11276,"count":27},{"startOffset":10364,"endOffset":10399,"count":18},{"startOffset":10399,"endOffset":10495,"count":9},{"startOffset":10472,"endOffset":10495,"count":0},{"startOffset":10612,"endOffset":10652,"count":0},{"startOffset":10654,"endOffset":11274,"count":0}],"isBlockCoverage":true},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":11564,"endOffset":12828,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":12916,"endOffset":13188,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13190,"endOffset":13255,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13257,"endOffset":13857,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":13859,"endOffset":14747,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":14749,"endOffset":15865,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":15902,"endOffset":16021,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16024,"endOffset":16134,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16136,"endOffset":16451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6257,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1212,"endOffset":1664,"count":18},{"startOffset":1263,"endOffset":1270,"count":0},{"startOffset":1303,"endOffset":1400,"count":0},{"startOffset":1471,"endOffset":1495,"count":0},{"startOffset":1560,"endOffset":1649,"count":0}],"isBlockCoverage":true},{"functionName":"PerformanceMark","ranges":[{"startOffset":1692,"endOffset":2427,"count":18},{"startOffset":1768,"endOffset":1817,"count":0},{"startOffset":1924,"endOffset":1970,"count":0},{"startOffset":2134,"endOffset":2189,"count":0},{"startOffset":2290,"endOffset":2321,"count":0}],"isBlockCoverage":true},{"functionName":"get detail","ranges":[{"startOffset":2431,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2540,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3107,"endOffset":3167,"count":0}],"isBlockCoverage":true},{"functionName":"get detail","ranges":[{"startOffset":3171,"endOffset":3279,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3481,"endOffset":3731,"count":9}],"isBlockCoverage":true},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3574,"endOffset":3703,"count":9}],"isBlockCoverage":true},{"functionName":"mark","ranges":[{"startOffset":3733,"endOffset":3874,"count":18}],"isBlockCoverage":true},{"functionName":"calculateStartDuration","ranges":[{"startOffset":3876,"endOffset":5459,"count":9},{"startOffset":4090,"endOffset":4212,"count":0},{"startOffset":4233,"endOffset":4791,"count":0},{"startOffset":4855,"endOffset":5081,"count":0},{"startOffset":5181,"endOffset":5400,"count":0}],"isBlockCoverage":true},{"functionName":"measure","ranges":[{"startOffset":5461,"endOffset":5896,"count":9},{"startOffset":5719,"endOffset":5744,"count":0}],"isBlockCoverage":true},{"functionName":"clearMarkTimings","ranges":[{"startOffset":5898,"endOffset":6153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3503,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":728,"endOffset":2730,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1389,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1600,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1813,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2027,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2239,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2459,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2734,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2978,"endOffset":3364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"node:internal/structured_clone","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":661,"count":1}],"isBlockCoverage":false},{"functionName":"structuredClone","ranges":[{"startOffset":186,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15419,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3661,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3747,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":3887,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4002,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4606,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4840,"endOffset":4966,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5081,"endOffset":5212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5322,"endOffset":5448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5557,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5924,"endOffset":6242,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6381,"endOffset":6524,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":6825,"endOffset":6864,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":6937,"endOffset":7010,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":7190,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7458,"endOffset":8085,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8091,"endOffset":9424,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9474,"endOffset":9823,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9827,"endOffset":10132,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10183,"endOffset":10332,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10336,"endOffset":10712,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":10716,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10899,"endOffset":11146,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11150,"endOffset":11419,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11421,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":11603,"endOffset":11698,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":11700,"endOffset":11786,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":11873,"endOffset":12387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12391,"endOffset":12803,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":12839,"endOffset":12968,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13005,"endOffset":13403,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13471,"endOffset":13881,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14164,"endOffset":14331,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14616,"endOffset":14787,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4489,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2226,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2807,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3813,"endOffset":3845,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3942,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4075,"endOffset":4116,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4280,"endOffset":4487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10097,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":905,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1487,"endOffset":4244,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4246,"endOffset":4719,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4721,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":4871,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5201,"endOffset":5343,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5345,"endOffset":5715,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5717,"endOffset":6044,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6260,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6378,"endOffset":7788,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":7790,"endOffset":8219,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8221,"endOffset":8415,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8417,"endOffset":8739,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":8741,"endOffset":9289,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9291,"endOffset":9869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10125,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1475,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1610,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2088,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2348,"endOffset":2473,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3055,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3494,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3591,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":3707,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":3790,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3910,"endOffset":4038,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4114,"endOffset":4258,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4336,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4602,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5201,"endOffset":5415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5419,"endOffset":6026,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6030,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6286,"endOffset":6734,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":6738,"endOffset":6822,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":6867,"endOffset":6875,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":7325,"endOffset":7681,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":7683,"endOffset":7908,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7910,"endOffset":8563,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":8711,"endOffset":8903,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":8975,"endOffset":9064,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":9158,"endOffset":9676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8214,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":847,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":956,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":967,"endOffset":6858,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":6860,"endOffset":7694,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7696,"endOffset":8154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3531,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":412,"endOffset":3529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11957,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":997,"endOffset":1426,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1428,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1758,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2046,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2222,"endOffset":3265,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3267,"endOffset":3865,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3867,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":3962,"endOffset":10273,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10275,"endOffset":11910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6757,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":358,"endOffset":669,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":779,"endOffset":1566,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1568,"endOffset":2182,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2184,"endOffset":2271,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2273,"endOffset":2521,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2523,"endOffset":2798,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":2800,"endOffset":3490,"count":1}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3492,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":4413,"endOffset":4819,"count":2},{"startOffset":4510,"endOffset":4818,"count":0}],"isBlockCoverage":true},{"functionName":"constructNT","ranges":[{"startOffset":4821,"endOffset":5503,"count":0}],"isBlockCoverage":false},{"functionName":"emitConstructNT","ranges":[{"startOffset":5505,"endOffset":5568,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":5570,"endOffset":5666,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":5668,"endOffset":5728,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":5730,"endOffset":5850,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":5885,"endOffset":6665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4938,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1996,"endOffset":2663,"count":1},{"startOffset":2060,"endOffset":2087,"count":0},{"startOffset":2440,"endOffset":2615,"count":0},{"startOffset":2619,"endOffset":2661,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3811,"endOffset":4023,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4029,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":4364,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":4547,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":4683,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":4805,"endOffset":4936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41570,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1777,"endOffset":1802,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2555,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":2607,"endOffset":6336,"count":1},{"startOffset":3006,"endOffset":3049,"count":0},{"startOffset":3582,"endOffset":3618,"count":0},{"startOffset":6235,"endOffset":6334,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6339,"endOffset":7227,"count":1},{"startOffset":6407,"endOffset":6436,"count":0},{"startOffset":6759,"endOffset":6785,"count":0},{"startOffset":6840,"endOffset":6872,"count":0},{"startOffset":6929,"endOffset":6965,"count":0},{"startOffset":6990,"endOffset":7002,"count":0},{"startOffset":7010,"endOffset":7047,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7114,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":7364,"endOffset":7396,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7447,"endOffset":7485,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7714,"endOffset":7800,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":7896,"endOffset":7981,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7984,"endOffset":10325,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10327,"endOffset":11058,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11090,"endOffset":11202,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11266,"endOffset":11827,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11888,"endOffset":12239,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12352,"endOffset":12746,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12843,"endOffset":17331,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":17334,"endOffset":18154,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":18355,"endOffset":18682,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18684,"endOffset":19338,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19688,"endOffset":19865,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19867,"endOffset":21659,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21930,"endOffset":21996,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":22025,"endOffset":26503,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":26506,"endOffset":27151,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":27182,"endOffset":27883,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":28009,"endOffset":28916,"count":24},{"startOffset":28141,"endOffset":28473,"count":0},{"startOffset":28502,"endOffset":28899,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":29011,"endOffset":29576,"count":23},{"startOffset":29173,"endOffset":29559,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":29679,"endOffset":30273,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":30276,"endOffset":30786,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30788,"endOffset":30876,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":31030,"endOffset":31355,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":31358,"endOffset":31508,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":31510,"endOffset":31761,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":31790,"endOffset":32057,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":32060,"endOffset":32207,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":32391,"endOffset":33412,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33457,"endOffset":33509,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":33542,"endOffset":33685,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":33688,"endOffset":33937,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":33939,"endOffset":35015,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35234,"endOffset":35623,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35629,"endOffset":35759,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35841,"endOffset":35905,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35987,"endOffset":36195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36283,"endOffset":36349,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36430,"endOffset":36512,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36594,"endOffset":36654,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36665,"endOffset":36774,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36850,"endOffset":36904,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36984,"endOffset":37072,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37150,"endOffset":37235,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37304,"endOffset":37388,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37433,"endOffset":37517,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37588,"endOffset":37675,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37681,"endOffset":37970,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38045,"endOffset":38133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38274,"endOffset":38319,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38399,"endOffset":38450,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":38456,"endOffset":38505,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":38811,"endOffset":39373,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":39375,"endOffset":39596,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":39598,"endOffset":40518,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":40520,"endOffset":40680,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":40698,"endOffset":40767,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":40832,"endOffset":40996,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":41017,"endOffset":41151,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":41171,"endOffset":41305,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":41324,"endOffset":41568,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2934,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":2}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":274,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2079,"endOffset":2886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1592,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":492,"endOffset":651,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":686,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1042,"endOffset":1590,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"node:internal/streams/buffer_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4060,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":254,"endOffset":338,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":342,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":533,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":695,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":926,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":998,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1184,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1551,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2009,"endOffset":2049,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2053,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2224,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2932,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3860,"endOffset":4056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":903,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":2},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":2},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":832,"count":2},{"startOffset":546,"endOffset":758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"448","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2614,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":2589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26066,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2389,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2452,"endOffset":6975,"count":1},{"startOffset":2847,"endOffset":2890,"count":0},{"startOffset":3441,"endOffset":3477,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6977,"endOffset":7109,"count":1}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":7147,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7332,"endOffset":7397,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7404,"endOffset":8932,"count":1},{"startOffset":8045,"endOffset":8099,"count":0},{"startOffset":8105,"endOffset":8134,"count":0},{"startOffset":8273,"endOffset":8301,"count":0},{"startOffset":8355,"endOffset":8385,"count":0},{"startOffset":8440,"endOffset":8472,"count":0},{"startOffset":8525,"endOffset":8553,"count":0},{"startOffset":8610,"endOffset":8646,"count":0},{"startOffset":8678,"endOffset":8715,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8782,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9014,"endOffset":9218,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9319,"endOffset":9387,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":9390,"endOffset":10734,"count":23},{"startOffset":9577,"endOffset":9813,"count":0},{"startOffset":9837,"endOffset":9882,"count":0},{"startOffset":9991,"endOffset":10075,"count":0},{"startOffset":10081,"endOffset":10384,"count":0},{"startOffset":10421,"endOffset":10470,"count":0},{"startOffset":10497,"endOffset":10547,"count":0},{"startOffset":10560,"endOffset":10651,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":10763,"endOffset":10849,"count":23}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":10878,"endOffset":10924,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10955,"endOffset":11110,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11153,"endOffset":11478,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":11668,"endOffset":12681,"count":23},{"startOffset":11766,"endOffset":11769,"count":0},{"startOffset":11988,"endOffset":12011,"count":0},{"startOffset":12089,"endOffset":12321,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":12683,"endOffset":13061,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":13063,"endOffset":13448,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":13450,"endOffset":15089,"count":23},{"startOffset":13608,"endOffset":13682,"count":0},{"startOffset":13800,"endOffset":14356,"count":0},{"startOffset":14417,"endOffset":14458,"count":0},{"startOffset":14773,"endOffset":14820,"count":22},{"startOffset":14822,"endOffset":14873,"count":22},{"startOffset":14873,"endOffset":15024,"count":1},{"startOffset":15030,"endOffset":15083,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":15091,"endOffset":15230,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":15232,"endOffset":15611,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":15683,"endOffset":16240,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16306,"endOffset":17800,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":17830,"endOffset":17999,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18063,"endOffset":19448,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":19451,"endOffset":19791,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":19793,"endOffset":20739,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":20741,"endOffset":21046,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":21048,"endOffset":21547,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":21549,"endOffset":22279,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22364,"endOffset":22448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22496,"endOffset":22583,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":22589,"endOffset":22771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22818,"endOffset":23210,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":23216,"endOffset":23350,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23405,"endOffset":23491,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23548,"endOffset":23636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23689,"endOffset":23771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23823,"endOffset":23907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23963,"endOffset":24121,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24181,"endOffset":24265,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24318,"endOffset":24398,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24451,"endOffset":24528,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24597,"endOffset":24681,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24763,"endOffset":24969,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":25047,"endOffset":25344,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":25432,"endOffset":25464,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":25515,"endOffset":25553,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":25618,"endOffset":25782,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":25803,"endOffset":25937,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":25957,"endOffset":26064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7176,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5747,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5749,"endOffset":6193,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6195,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6348,"endOffset":6443,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6475,"endOffset":7018,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7049,"endOffset":7174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6360,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1335,"endOffset":1395,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1399,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1697,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1932,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2145,"endOffset":2362,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2366,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2498,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2759,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3020,"endOffset":3241,"count":18},{"startOffset":3156,"endOffset":3205,"count":0}],"isBlockCoverage":true},{"functionName":"measure","ranges":[{"startOffset":3245,"endOffset":3530,"count":9},{"startOffset":3419,"endOffset":3468,"count":0}],"isBlockCoverage":true},{"functionName":"now","ranges":[{"startOffset":3534,"endOffset":3630,"count":24}],"isBlockCoverage":true},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3634,"endOffset":3950,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":3954,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4084,"endOffset":4312,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":5913,"endOffset":6082,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":5970,"endOffset":6061,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6126,"endOffset":6263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":153,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":448,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2276,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":609,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":986,"endOffset":2247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8268,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":912,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1008,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1072,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1534,"endOffset":1661,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1712,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1902,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2076,"endOffset":2211,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2262,"endOffset":2385,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2436,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2622,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2798,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":2980,"endOffset":3123,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3174,"endOffset":3303,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3374,"endOffset":3723,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3794,"endOffset":4155,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4218,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4470,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4708,"endOffset":4824,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4828,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4988,"endOffset":5048,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5052,"endOffset":5308,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5360,"endOffset":5420,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5489,"endOffset":5960,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":5997,"endOffset":6148,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6204,"endOffset":6477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6481,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6651,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6715,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":6947,"endOffset":6955,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":6958,"endOffset":7197,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7252,"endOffset":7260,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7404,"endOffset":8091,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"node:internal/webidl","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4315,"count":1}],"isBlockCoverage":false},{"functionName":"evenRound","ranges":[{"startOffset":774,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"pow2","ranges":[{"startOffset":1101,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"modulo","ranges":[{"startOffset":1476,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"convertToInt","ranges":[{"startOffset":1655,"endOffset":4262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1723,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":624,"endOffset":685,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":725,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":976,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1282,"endOffset":1681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/logging.common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2177,"count":1}],"isBlockCoverage":true},{"functionName":"computeNoColorLoggingArgs","ranges":[{"startOffset":649,"endOffset":1042,"count":27},{"startOffset":808,"endOffset":1023,"count":175},{"startOffset":869,"endOffset":898,"count":90},{"startOffset":900,"endOffset":934,"count":85},{"startOffset":934,"endOffset":1019,"count":90},{"startOffset":972,"endOffset":1019,"count":0}],"isBlockCoverage":true},{"functionName":"createModuleLogger","ranges":[{"startOffset":1347,"endOffset":2155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///home/dmonad/ylabs/y-utility/y-multidoc-undomanager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4999,"count":1}],"isBlockCoverage":true},{"functionName":"popStackItem","ranges":[{"startOffset":238,"endOffset":908,"count":13},{"startOffset":287,"endOffset":302,"count":9},{"startOffset":303,"endOffset":318,"count":4},{"startOffset":346,"endOffset":892,"count":12},{"startOffset":446,"endOffset":460,"count":8},{"startOffset":461,"endOffset":475,"count":4},{"startOffset":594,"endOffset":710,"count":8},{"startOffset":710,"endOffset":832,"count":4},{"startOffset":892,"endOffset":907,"count":1}],"isBlockCoverage":true},{"functionName":"YMultiDocUndoManager","ranges":[{"startOffset":1203,"endOffset":1666,"count":5},{"startOffset":1386,"endOffset":1404,"count":4}],"isBlockCoverage":true},{"functionName":"addToScope","ranges":[{"startOffset":1752,"endOffset":3231,"count":11},{"startOffset":1809,"endOffset":1817,"count":10},{"startOffset":1818,"endOffset":1828,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1848,"endOffset":3226,"count":8},{"startOffset":3182,"endOffset":3220,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1964,"endOffset":3105,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2093,"endOffset":2205,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2234,"endOffset":2428,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2324,"endOffset":2345,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2396,"endOffset":2417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2491,"endOffset":2693,"count":22},{"startOffset":2550,"endOffset":2566,"count":14},{"startOffset":2567,"endOffset":2583,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2758,"endOffset":2850,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2914,"endOffset":3005,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3161,"endOffset":3179,"count":8}],"isBlockCoverage":true},{"functionName":"addTrackedOrigin","ranges":[{"startOffset":3297,"endOffset":3364,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrackedOrigin","ranges":[{"startOffset":3430,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"undo","ranges":[{"startOffset":3618,"endOffset":3669,"count":9}],"isBlockCoverage":true},{"functionName":"redo","ranges":[{"startOffset":3783,"endOffset":3834,"count":4}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":3838,"endOffset":4362,"count":1},{"startOffset":3942,"endOffset":3959,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4026,"endOffset":4244,"count":1},{"startOffset":4086,"endOffset":4110,"count":0}],"isBlockCoverage":true},{"functionName":"stopCapturing","ranges":[{"startOffset":4391,"endOffset":4475,"count":0}],"isBlockCoverage":false},{"functionName":"canUndo","ranges":[{"startOffset":4577,"endOffset":4630,"count":6}],"isBlockCoverage":true},{"functionName":"canRedo","ranges":[{"startOffset":4732,"endOffset":4785,"count":7}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":4789,"endOffset":4867,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4824,"endOffset":4842,"count":1}],"isBlockCoverage":true}]},{"scriptId":"461","url":"file:///home/dmonad/ylabs/y-utility/y-keyvalue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5979,"count":1}],"isBlockCoverage":true},{"functionName":"YKeyValue","ranges":[{"startOffset":1059,"endOffset":5213,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1460,"endOffset":1757,"count":5},{"startOffset":1518,"endOffset":1749,"count":3},{"startOffset":1582,"endOffset":1685,"count":1},{"startOffset":1685,"endOffset":1739,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1850,"endOffset":5208,"count":10011},{"startOffset":5150,"endOffset":5202,"count":10006}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2397,"endOffset":2684,"count":9005}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2451,"endOffset":2675,"count":9005},{"startOffset":2547,"endOffset":2665,"count":9002}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2815,"endOffset":2848,"count":10007}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2865,"endOffset":2911,"count":10007}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3356,"endOffset":5120,"count":10011},{"startOffset":3528,"endOffset":3577,"count":20011},{"startOffset":3551,"endOffset":3576,"count":10004},{"startOffset":3584,"endOffset":5112,"count":10009},{"startOffset":3666,"endOffset":3757,"count":2},{"startOffset":3757,"endOffset":5102,"count":10007},{"startOffset":3807,"endOffset":4892,"count":10005},{"startOffset":3956,"endOffset":4284,"count":1},{"startOffset":4284,"endOffset":4791,"count":10004},{"startOffset":4467,"endOffset":4498,"count":9001},{"startOffset":4500,"endOffset":4632,"count":9001},{"startOffset":4632,"endOffset":4777,"count":1003},{"startOffset":4892,"endOffset":5102,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5274,"endOffset":5498,"count":10004}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5313,"endOffset":5493,"count":10004},{"startOffset":5414,"endOffset":5448,"count":9001}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":5539,"endOffset":5752,"count":9002},{"startOffset":5650,"endOffset":5748,"count":4254501},{"startOffset":5679,"endOffset":5732,"count":9002},{"startOffset":5732,"endOffset":5748,"count":4245499}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5822,"endOffset":5891,"count":4}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":5932,"endOffset":5976,"count":2}],"isBlockCoverage":true}]},{"scriptId":"462","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2107,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":196,"endOffset":211,"count":170331}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":365,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"setIfUndefined","ranges":[{"startOffset":823,"endOffset":952,"count":76211},{"startOffset":898,"endOffset":937,"count":58186}],"isBlockCoverage":true},{"functionName":"map","ranges":[{"startOffset":1230,"endOffset":1339,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":1637,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"all","ranges":[{"startOffset":1990,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/storage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1739,"count":1},{"startOffset":754,"endOffset":816,"count":0},{"startOffset":819,"endOffset":832,"count":0}],"isBlockCoverage":true},{"functionName":"VarStoragePolyfill","ranges":[{"startOffset":216,"endOffset":261,"count":1}],"isBlockCoverage":true},{"functionName":"setItem","ranges":[{"startOffset":329,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"getItem","ranges":[{"startOffset":431,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"onChange","ranges":[{"startOffset":1269,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"offChange","ranges":[{"startOffset":1642,"endOffset":1738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/conditions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"undefinedToNull","ranges":[{"startOffset":186,"endOffset":217,"count":1},{"startOffset":214,"endOffset":217,"count":0}],"isBlockCoverage":true}]},{"scriptId":"465","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3025,"count":1}],"isBlockCoverage":true},{"functionName":"callAll","ranges":[{"startOffset":334,"endOffset":506,"count":70120},{"startOffset":396,"endOffset":424,"count":110183},{"startOffset":462,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":527,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":623,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"id","ranges":[{"startOffset":708,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"equalityStrict","ranges":[{"startOffset":825,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"equalityFlat","ranges":[{"startOffset":979,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"equalityDeep","ranges":[{"startOffset":1307,"endOffset":2821,"count":0}],"isBlockCoverage":false},{"functionName":"isOneOf","ranges":[{"startOffset":2960,"endOffset":3003,"count":1}],"isBlockCoverage":true}]},{"scriptId":"466","url":"file:///home/dmonad/ylabs/y-utility/node_modules/yjs/dist/yjs.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":282543,"count":1},{"startOffset":279830,"endOffset":279942,"count":0},{"startOffset":280023,"endOffset":280947,"count":0}],"isBlockCoverage":true},{"functionName":"AbstractConnector","ranges":[{"startOffset":1096,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"DeleteItem","ranges":[{"startOffset":1286,"endOffset":1436,"count":19021}],"isBlockCoverage":true},{"functionName":"DeleteSet","ranges":[{"startOffset":1942,"endOffset":2053,"count":30082}],"isBlockCoverage":true},{"functionName":"iterateDeletedStructs","ranges":[{"startOffset":2265,"endOffset":2586,"count":48}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2310,"endOffset":2585,"count":21}],"isBlockCoverage":true},{"functionName":"findIndexDS","ranges":[{"startOffset":2729,"endOffset":3129,"count":4066303},{"startOffset":2962,"endOffset":3068,"count":1365929},{"startOffset":3002,"endOffset":3035,"count":9004},{"startOffset":3035,"endOffset":3068,"count":1356925},{"startOffset":3068,"endOffset":3109,"count":2700374},{"startOffset":3113,"endOffset":3128,"count":4057299}],"isBlockCoverage":true},{"functionName":"isDeleted","ranges":[{"startOffset":3250,"endOffset":3372,"count":4237229},{"startOffset":3332,"endOffset":3370,"count":4066303}],"isBlockCoverage":true},{"functionName":"sortAndMergeDeleteSet","ranges":[{"startOffset":3466,"endOffset":4151,"count":30054}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3495,"endOffset":4147,"count":18014},{"startOffset":3833,"endOffset":4122,"count":2},{"startOffset":4030,"endOffset":4116,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3519,"endOffset":3546,"count":2}],"isBlockCoverage":true},{"functionName":"mergeDeleteSets","ranges":[{"startOffset":4260,"endOffset":4941,"count":2},{"startOffset":4351,"endOffset":4940,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4383,"endOffset":4884,"count":2},{"startOffset":4446,"endOffset":4878,"count":1},{"startOffset":4811,"endOffset":4816,"count":0}],"isBlockCoverage":true},{"functionName":"addToDeleteSet","ranges":[{"startOffset":5105,"endOffset":5262,"count":18029}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5179,"endOffset":5222,"count":18028}],"isBlockCoverage":true},{"functionName":"createDeleteSet","ranges":[{"startOffset":5289,"endOffset":5310,"count":4}],"isBlockCoverage":true},{"functionName":"createDeleteSetFromStructStore","ranges":[{"startOffset":5466,"endOffset":6162,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5527,"endOffset":6146,"count":3},{"startOffset":5668,"endOffset":6067,"count":2492},{"startOffset":5729,"endOffset":6061,"count":992},{"startOffset":5906,"endOffset":5921,"count":9489},{"startOffset":5948,"endOffset":5993,"count":8497},{"startOffset":6096,"endOffset":6142,"count":2}],"isBlockCoverage":true},{"functionName":"writeDeleteSet","ranges":[{"startOffset":6295,"endOffset":6898,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6491,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6527,"endOffset":6894,"count":2},{"startOffset":6766,"endOffset":6888,"count":992}],"isBlockCoverage":true},{"functionName":"readDeleteSet","ranges":[{"startOffset":7028,"endOffset":7639,"count":0}],"isBlockCoverage":false},{"functionName":"readAndApplyDeleteSet","ranges":[{"startOffset":8137,"endOffset":10192,"count":1},{"startOffset":8314,"endOffset":9964,"count":0},{"startOffset":10001,"endOffset":10176,"count":0}],"isBlockCoverage":true},{"functionName":"Doc","ranges":[{"startOffset":11470,"endOffset":14418,"count":12}],"isBlockCoverage":true},{"functionName":"gcFilter","ranges":[{"startOffset":11552,"endOffset":11562,"count":18005}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13403,"endOffset":13514,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13438,"endOffset":13506,"count":0}],"isBlockCoverage":false},{"functionName":"provideSyncedPromise","ranges":[{"startOffset":13550,"endOffset":13866,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13571,"endOffset":13865,"count":12}],"isBlockCoverage":true},{"functionName":"eventHandler","ranges":[{"startOffset":13666,"endOffset":13821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13888,"endOffset":14148,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":14700,"endOffset":14958,"count":0}],"isBlockCoverage":false},{"functionName":"getSubdocs","ranges":[{"startOffset":14962,"endOffset":15005,"count":0}],"isBlockCoverage":false},{"functionName":"getSubdocGuids","ranges":[{"startOffset":15009,"endOffset":15098,"count":0}],"isBlockCoverage":false},{"functionName":"transact","ranges":[{"startOffset":15619,"endOffset":15689,"count":20022}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16616,"endOffset":17650,"count":13},{"startOffset":16915,"endOffset":16944,"count":12},{"startOffset":16946,"endOffset":17630,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16715,"endOffset":16834,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17126,"endOffset":17249,"count":0}],"isBlockCoverage":false},{"functionName":"getArray","ranges":[{"startOffset":17754,"endOffset":17832,"count":4}],"isBlockCoverage":true},{"functionName":"getText","ranges":[{"startOffset":17915,"endOffset":17991,"count":6}],"isBlockCoverage":true},{"functionName":"getMap","ranges":[{"startOffset":18093,"endOffset":18167,"count":2}],"isBlockCoverage":true},{"functionName":"getXmlFragment","ranges":[{"startOffset":18257,"endOffset":18347,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":18666,"endOffset":18851,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":18928,"endOffset":19623,"count":1},{"startOffset":19059,"endOffset":19528,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18978,"endOffset":19004,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19321,"endOffset":19508,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":19707,"endOffset":19758,"count":57}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":19830,"endOffset":19883,"count":2}],"isBlockCoverage":true},{"functionName":"DSDecoderV1","ranges":[{"startOffset":19960,"endOffset":20019,"count":4}],"isBlockCoverage":true},{"functionName":"resetDsCurVal","ranges":[{"startOffset":20023,"endOffset":20056,"count":0}],"isBlockCoverage":false},{"functionName":"readDsClock","ranges":[{"startOffset":20094,"endOffset":20164,"count":0}],"isBlockCoverage":false},{"functionName":"readDsLen","ranges":[{"startOffset":20202,"endOffset":20270,"count":0}],"isBlockCoverage":false},{"functionName":"readLeftID","ranges":[{"startOffset":20350,"endOffset":20469,"count":0}],"isBlockCoverage":false},{"functionName":"readRightID","ranges":[{"startOffset":20503,"endOffset":20623,"count":0}],"isBlockCoverage":false},{"functionName":"readClient","ranges":[{"startOffset":20761,"endOffset":20830,"count":1}],"isBlockCoverage":true},{"functionName":"readInfo","ranges":[{"startOffset":20899,"endOffset":20964,"count":1}],"isBlockCoverage":true},{"functionName":"readString","ranges":[{"startOffset":21002,"endOffset":21073,"count":1}],"isBlockCoverage":true},{"functionName":"readParentInfo","ranges":[{"startOffset":21118,"endOffset":21197,"count":1}],"isBlockCoverage":true},{"functionName":"readTypeRef","ranges":[{"startOffset":21266,"endOffset":21336,"count":0}],"isBlockCoverage":false},{"functionName":"readLen","ranges":[{"startOffset":21445,"endOffset":21511,"count":1}],"isBlockCoverage":true},{"functionName":"readAny","ranges":[{"startOffset":21546,"endOffset":21608,"count":1}],"isBlockCoverage":true},{"functionName":"readBuf","ranges":[{"startOffset":21650,"endOffset":21745,"count":0}],"isBlockCoverage":false},{"functionName":"readJSON","ranges":[{"startOffset":21856,"endOffset":21937,"count":0}],"isBlockCoverage":false},{"functionName":"readKey","ranges":[{"startOffset":21975,"endOffset":22043,"count":0}],"isBlockCoverage":false},{"functionName":"DSDecoderV2","ranges":[{"startOffset":22120,"endOffset":22235,"count":0}],"isBlockCoverage":false},{"functionName":"resetDsCurVal","ranges":[{"startOffset":22239,"endOffset":22285,"count":0}],"isBlockCoverage":false},{"functionName":"readDsClock","ranges":[{"startOffset":22323,"endOffset":22431,"count":0}],"isBlockCoverage":false},{"functionName":"readDsLen","ranges":[{"startOffset":22469,"endOffset":22592,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateDecoderV2","ranges":[{"startOffset":22693,"endOffset":23898,"count":0}],"isBlockCoverage":false},{"functionName":"readLeftID","ranges":[{"startOffset":23932,"endOffset":24026,"count":0}],"isBlockCoverage":false},{"functionName":"readRightID","ranges":[{"startOffset":24060,"endOffset":24156,"count":0}],"isBlockCoverage":false},{"functionName":"readClient","ranges":[{"startOffset":24294,"endOffset":24350,"count":0}],"isBlockCoverage":false},{"functionName":"readInfo","ranges":[{"startOffset":24419,"endOffset":24495,"count":0}],"isBlockCoverage":false},{"functionName":"readString","ranges":[{"startOffset":24533,"endOffset":24589,"count":0}],"isBlockCoverage":false},{"functionName":"readParentInfo","ranges":[{"startOffset":24628,"endOffset":24698,"count":0}],"isBlockCoverage":false},{"functionName":"readTypeRef","ranges":[{"startOffset":24762,"endOffset":24820,"count":0}],"isBlockCoverage":false},{"functionName":"readLen","ranges":[{"startOffset":24925,"endOffset":24975,"count":0}],"isBlockCoverage":false},{"functionName":"readAny","ranges":[{"startOffset":25010,"endOffset":25072,"count":0}],"isBlockCoverage":false},{"functionName":"readBuf","ranges":[{"startOffset":25114,"endOffset":25186,"count":0}],"isBlockCoverage":false},{"functionName":"readJSON","ranges":[{"startOffset":25432,"endOffset":25495,"count":0}],"isBlockCoverage":false},{"functionName":"readKey","ranges":[{"startOffset":25533,"endOffset":25779,"count":0}],"isBlockCoverage":false},{"functionName":"DSEncoderV1","ranges":[{"startOffset":25805,"endOffset":25874,"count":3}],"isBlockCoverage":true},{"functionName":"toUint8Array","ranges":[{"startOffset":25878,"endOffset":25950,"count":3}],"isBlockCoverage":true},{"functionName":"resetDsCurVal","ranges":[{"startOffset":25954,"endOffset":25987,"count":2}],"isBlockCoverage":true},{"functionName":"writeDsClock","ranges":[{"startOffset":26030,"endOffset":26108,"count":992}],"isBlockCoverage":true},{"functionName":"writeDsLen","ranges":[{"startOffset":26149,"endOffset":26221,"count":992}],"isBlockCoverage":true},{"functionName":"writeLeftID","ranges":[{"startOffset":26303,"endOffset":26436,"count":9987}],"isBlockCoverage":true},{"functionName":"writeRightID","ranges":[{"startOffset":26472,"endOffset":26606,"count":0}],"isBlockCoverage":false},{"functionName":"writeClient","ranges":[{"startOffset":26718,"endOffset":26797,"count":3}],"isBlockCoverage":true},{"functionName":"writeInfo","ranges":[{"startOffset":26865,"endOffset":26936,"count":10989}],"isBlockCoverage":true},{"functionName":"writeString","ranges":[{"startOffset":26975,"endOffset":27046,"count":2002}],"isBlockCoverage":true},{"functionName":"writeParentInfo","ranges":[{"startOffset":27091,"endOffset":27182,"count":1002},{"startOffset":27173,"endOffset":27176,"count":0}],"isBlockCoverage":true},{"functionName":"writeTypeRef","ranges":[{"startOffset":27250,"endOffset":27326,"count":0}],"isBlockCoverage":false},{"functionName":"writeLen","ranges":[{"startOffset":27434,"endOffset":27504,"count":10989}],"isBlockCoverage":true},{"functionName":"writeAny","ranges":[{"startOffset":27542,"endOffset":27608,"count":2001}],"isBlockCoverage":true},{"functionName":"writeBuf","ranges":[{"startOffset":27653,"endOffset":27729,"count":0}],"isBlockCoverage":false},{"functionName":"writeJSON","ranges":[{"startOffset":27769,"endOffset":27862,"count":0}],"isBlockCoverage":false},{"functionName":"writeKey","ranges":[{"startOffset":27903,"endOffset":27975,"count":0}],"isBlockCoverage":false},{"functionName":"DSEncoderV2","ranges":[{"startOffset":28001,"endOffset":28134,"count":0}],"isBlockCoverage":false},{"functionName":"toUint8Array","ranges":[{"startOffset":28138,"endOffset":28210,"count":0}],"isBlockCoverage":false},{"functionName":"resetDsCurVal","ranges":[{"startOffset":28214,"endOffset":28260,"count":0}],"isBlockCoverage":false},{"functionName":"writeDsClock","ranges":[{"startOffset":28303,"endOffset":28449,"count":0}],"isBlockCoverage":false},{"functionName":"writeDsLen","ranges":[{"startOffset":28490,"endOffset":28650,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateEncoderV2","ranges":[{"startOffset":28700,"endOffset":29557,"count":0}],"isBlockCoverage":false},{"functionName":"toUint8Array","ranges":[{"startOffset":29561,"endOffset":30631,"count":0}],"isBlockCoverage":false},{"functionName":"writeLeftID","ranges":[{"startOffset":30667,"endOffset":30773,"count":0}],"isBlockCoverage":false},{"functionName":"writeRightID","ranges":[{"startOffset":30809,"endOffset":30917,"count":0}],"isBlockCoverage":false},{"functionName":"writeClient","ranges":[{"startOffset":30961,"endOffset":31025,"count":0}],"isBlockCoverage":false},{"functionName":"writeInfo","ranges":[{"startOffset":31093,"endOffset":31149,"count":0}],"isBlockCoverage":false},{"functionName":"writeString","ranges":[{"startOffset":31188,"endOffset":31242,"count":0}],"isBlockCoverage":false},{"functionName":"writeParentInfo","ranges":[{"startOffset":31287,"endOffset":31367,"count":0}],"isBlockCoverage":false},{"functionName":"writeTypeRef","ranges":[{"startOffset":31435,"endOffset":31497,"count":0}],"isBlockCoverage":false},{"functionName":"writeLen","ranges":[{"startOffset":31605,"endOffset":31657,"count":0}],"isBlockCoverage":false},{"functionName":"writeAny","ranges":[{"startOffset":31695,"endOffset":31761,"count":0}],"isBlockCoverage":false},{"functionName":"writeBuf","ranges":[{"startOffset":31806,"endOffset":31882,"count":0}],"isBlockCoverage":false},{"functionName":"writeJSON","ranges":[{"startOffset":32133,"endOffset":32204,"count":0}],"isBlockCoverage":false},{"functionName":"writeKey","ranges":[{"startOffset":32504,"endOffset":33433,"count":0}],"isBlockCoverage":false},{"functionName":"writeStructs","ranges":[{"startOffset":33693,"endOffset":34330,"count":3},{"startOffset":34289,"endOffset":34328,"count":10986}],"isBlockCoverage":true},{"functionName":"writeClientsStructs","ranges":[{"startOffset":34516,"endOffset":35266,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34626,"endOffset":34775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34810,"endOffset":34893,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35118,"endOffset":35139,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35149,"endOffset":35262,"count":3}],"isBlockCoverage":true},{"functionName":"readClientsStructRefs","ranges":[{"startOffset":35511,"endOffset":39695,"count":1},{"startOffset":36238,"endOffset":36402,"count":0},{"startOffset":36411,"endOffset":36760,"count":0},{"startOffset":37557,"endOffset":37579,"count":0},{"startOffset":37674,"endOffset":37697,"count":0},{"startOffset":37813,"endOffset":37835,"count":0},{"startOffset":37837,"endOffset":37843,"count":0},{"startOffset":37926,"endOffset":37948,"count":0}],"isBlockCoverage":true},{"functionName":"integrateStructs","ranges":[{"startOffset":40809,"endOffset":46060,"count":1},{"startOffset":41193,"endOffset":41214,"count":0},{"startOffset":41940,"endOffset":41961,"count":0},{"startOffset":41963,"endOffset":41984,"count":0},{"startOffset":43786,"endOffset":44037,"count":0},{"startOffset":44141,"endOffset":44827,"count":0},{"startOffset":44850,"endOffset":44878,"count":0},{"startOffset":45141,"endOffset":45204,"count":0},{"startOffset":45294,"endOffset":45389,"count":0},{"startOffset":45529,"endOffset":45634,"count":0},{"startOffset":45681,"endOffset":46044,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41134,"endOffset":41149,"count":0}],"isBlockCoverage":false},{"functionName":"getNextStructTarget","ranges":[{"startOffset":41245,"endOffset":41858,"count":2},{"startOffset":41296,"endOffset":41321,"count":0},{"startOffset":41542,"endOffset":41825,"count":1},{"startOffset":41621,"endOffset":41784,"count":0},{"startOffset":41825,"endOffset":41857,"count":1}],"isBlockCoverage":true},{"functionName":"updateMissingSv","ranges":[{"startOffset":42188,"endOffset":42340,"count":0}],"isBlockCoverage":false},{"functionName":"addStackToRestSS","ranges":[{"startOffset":42588,"endOffset":43476,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43665,"endOffset":43707,"count":1}],"isBlockCoverage":true},{"functionName":"writeStructsFromTransaction","ranges":[{"startOffset":46225,"endOffset":46327,"count":0}],"isBlockCoverage":false},{"functionName":"readUpdateV2","ranges":[{"startOffset":46734,"endOffset":49641,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46835,"endOffset":49614,"count":1},{"startOffset":47479,"endOffset":48082,"count":0},{"startOffset":48358,"endOffset":49056,"count":0},{"startOffset":49434,"endOffset":49610,"count":0}],"isBlockCoverage":true},{"functionName":"readUpdate","ranges":[{"startOffset":49984,"endOffset":50098,"count":0}],"isBlockCoverage":false},{"functionName":"applyUpdateV2","ranges":[{"startOffset":50614,"endOffset":50805,"count":1}],"isBlockCoverage":true},{"functionName":"applyUpdate","ranges":[{"startOffset":51248,"endOffset":51348,"count":1}],"isBlockCoverage":true},{"functionName":"writeStateAsUpdate","ranges":[{"startOffset":51796,"endOffset":51980,"count":3}],"isBlockCoverage":true},{"functionName":"encodeStateAsUpdateV2","ranges":[{"startOffset":52581,"endOffset":53412,"count":3},{"startOffset":52925,"endOffset":52969,"count":0},{"startOffset":53002,"endOffset":53098,"count":0},{"startOffset":53125,"endOffset":53390,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53216,"endOffset":53283,"count":0}],"isBlockCoverage":false},{"functionName":"encodeStateAsUpdate","ranges":[{"startOffset":53955,"endOffset":54065,"count":3}],"isBlockCoverage":true},{"functionName":"readStateVector","ranges":[{"startOffset":54317,"endOffset":54622,"count":3},{"startOffset":54453,"endOffset":54608,"count":0}],"isBlockCoverage":true},{"functionName":"decodeStateVector","ranges":[{"startOffset":55195,"endOffset":55281,"count":3}],"isBlockCoverage":true},{"functionName":"writeStateVector","ranges":[{"startOffset":55410,"endOffset":55768,"count":0}],"isBlockCoverage":false},{"functionName":"writeDocumentStateVector","ranges":[{"startOffset":55894,"endOffset":55964,"count":0}],"isBlockCoverage":false},{"functionName":"encodeStateVectorV2","ranges":[{"startOffset":56164,"endOffset":56360,"count":0}],"isBlockCoverage":false},{"functionName":"encodeStateVector","ranges":[{"startOffset":56510,"endOffset":56560,"count":0}],"isBlockCoverage":false},{"functionName":"EventHandler","ranges":[{"startOffset":56677,"endOffset":56778,"count":24}],"isBlockCoverage":true},{"functionName":"createEventHandler","ranges":[{"startOffset":56906,"endOffset":56930,"count":24}],"isBlockCoverage":true},{"functionName":"addEventHandlerListener","ranges":[{"startOffset":57234,"endOffset":57279,"count":5}],"isBlockCoverage":true},{"functionName":"removeEventHandlerListener","ranges":[{"startOffset":57596,"endOffset":57837,"count":0}],"isBlockCoverage":false},{"functionName":"callEventHandlerListeners","ranges":[{"startOffset":58119,"endOffset":58190,"count":40068}],"isBlockCoverage":true},{"functionName":"ID","ranges":[{"startOffset":58323,"endOffset":58546,"count":71098}],"isBlockCoverage":true},{"functionName":"compareIDs","ranges":[{"startOffset":58662,"endOffset":58757,"count":55485},{"startOffset":58680,"endOffset":58757,"count":36939},{"startOffset":58695,"endOffset":58708,"count":34937},{"startOffset":58709,"endOffset":58733,"count":34937},{"startOffset":58734,"endOffset":58756,"count":34937}],"isBlockCoverage":true},{"functionName":"createID","ranges":[{"startOffset":58864,"endOffset":58904,"count":71098}],"isBlockCoverage":true},{"functionName":"writeID","ranges":[{"startOffset":59014,"endOffset":59123,"count":0}],"isBlockCoverage":false},{"functionName":"readID","ranges":[{"startOffset":59339,"endOffset":59422,"count":0}],"isBlockCoverage":false},{"functionName":"findRootTypeKey","ranges":[{"startOffset":59746,"endOffset":59960,"count":1002},{"startOffset":59927,"endOffset":59959,"count":0}],"isBlockCoverage":true},{"functionName":"isParentOf","ranges":[{"startOffset":60193,"endOffset":60387,"count":24},{"startOffset":60299,"endOffset":60386,"count":0}],"isBlockCoverage":true},{"functionName":"logType","ranges":[{"startOffset":60567,"endOffset":60791,"count":0}],"isBlockCoverage":false},{"functionName":"PermanentUserData","ranges":[{"startOffset":60892,"endOffset":62652,"count":0}],"isBlockCoverage":false},{"functionName":"setUserMapping","ranges":[{"startOffset":62852,"endOffset":64446,"count":0}],"isBlockCoverage":false},{"functionName":"getUserByClientId","ranges":[{"startOffset":64511,"endOffset":64591,"count":0}],"isBlockCoverage":false},{"functionName":"getUserByDeletedId","ranges":[{"startOffset":64656,"endOffset":64839,"count":0}],"isBlockCoverage":false},{"functionName":"RelativePosition","ranges":[{"startOffset":66050,"endOffset":66724,"count":0}],"isBlockCoverage":false},{"functionName":"relativePositionToJSON","ranges":[{"startOffset":66818,"endOffset":67076,"count":0}],"isBlockCoverage":false},{"functionName":"createRelativePositionFromJSON","ranges":[{"startOffset":67193,"endOffset":67422,"count":0}],"isBlockCoverage":false},{"functionName":"AbsolutePosition","ranges":[{"startOffset":67557,"endOffset":67756,"count":0}],"isBlockCoverage":false},{"functionName":"createAbsolutePosition","ranges":[{"startOffset":67902,"endOffset":67970,"count":0}],"isBlockCoverage":false},{"functionName":"createRelativePosition","ranges":[{"startOffset":68115,"endOffset":68385,"count":0}],"isBlockCoverage":false},{"functionName":"createRelativePositionFromTypeIndex","ranges":[{"startOffset":68696,"endOffset":69491,"count":0}],"isBlockCoverage":false},{"functionName":"writeRelativePosition","ranges":[{"startOffset":69619,"endOffset":70257,"count":0}],"isBlockCoverage":false},{"functionName":"encodeRelativePosition","ranges":[{"startOffset":70357,"endOffset":70492,"count":0}],"isBlockCoverage":false},{"functionName":"readRelativePosition","ranges":[{"startOffset":70615,"endOffset":71285,"count":0}],"isBlockCoverage":false},{"functionName":"decodeRelativePosition","ranges":[{"startOffset":71391,"endOffset":71461,"count":0}],"isBlockCoverage":false},{"functionName":"createAbsolutePositionFromRelativePosition","ranges":[{"startOffset":71628,"endOffset":73161,"count":0}],"isBlockCoverage":false},{"functionName":"compareRelativePositions","ranges":[{"startOffset":73314,"endOffset":73471,"count":0}],"isBlockCoverage":false},{"functionName":"Snapshot","ranges":[{"startOffset":73578,"endOffset":73748,"count":1}],"isBlockCoverage":true},{"functionName":"equalSnapshots","ranges":[{"startOffset":73858,"endOffset":74592,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSnapshotV2","ranges":[{"startOffset":74730,"endOffset":74890,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSnapshot","ranges":[{"startOffset":74978,"endOffset":75035,"count":0}],"isBlockCoverage":false},{"functionName":"decodeSnapshotV2","ranges":[{"startOffset":75168,"endOffset":75308,"count":0}],"isBlockCoverage":false},{"functionName":"decodeSnapshot","ranges":[{"startOffset":75391,"endOffset":75465,"count":0}],"isBlockCoverage":false},{"functionName":"createSnapshot","ranges":[{"startOffset":75580,"endOffset":75612,"count":1}],"isBlockCoverage":true},{"functionName":"snapshot","ranges":[{"startOffset":75751,"endOffset":75842,"count":0}],"isBlockCoverage":false},{"functionName":"isVisible","ranges":[{"startOffset":75963,"endOffset":76153,"count":0}],"isBlockCoverage":false},{"functionName":"splitSnapshotAffectedStructs","ranges":[{"startOffset":76267,"endOffset":76773,"count":0}],"isBlockCoverage":false},{"functionName":"createDocFromSnapshot","ranges":[{"startOffset":76994,"endOffset":78373,"count":0}],"isBlockCoverage":false},{"functionName":"StructStore","ranges":[{"startOffset":78398,"endOffset":78705,"count":13}],"isBlockCoverage":true},{"functionName":"getStateVector","ranges":[{"startOffset":78934,"endOffset":79136,"count":60107}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":78993,"endOffset":79120,"count":60098}],"isBlockCoverage":true},{"functionName":"getState","ranges":[{"startOffset":79267,"endOffset":79481,"count":20023},{"startOffset":79362,"endOffset":79380,"count":13},{"startOffset":79380,"endOffset":79480,"count":20010}],"isBlockCoverage":true},{"functionName":"addStruct","ranges":[{"startOffset":79595,"endOffset":79972,"count":20023},{"startOffset":79698,"endOffset":79771,"count":13},{"startOffset":79771,"endOffset":79946,"count":20010},{"startOffset":79900,"endOffset":79942,"count":0}],"isBlockCoverage":true},{"functionName":"findIndexSS","ranges":[{"startOffset":80156,"endOffset":81158,"count":75036},{"startOffset":80313,"endOffset":80335,"count":20424},{"startOffset":80335,"endOffset":80708,"count":54612},{"startOffset":80708,"endOffset":80996,"count":371403},{"startOffset":80795,"endOffset":80904,"count":242056},{"startOffset":80838,"endOffset":80871,"count":54612},{"startOffset":80871,"endOffset":80904,"count":187444},{"startOffset":80904,"endOffset":80945,"count":129347},{"startOffset":80945,"endOffset":80996,"count":316791},{"startOffset":80996,"endOffset":81157,"count":0}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":81378,"endOffset":81549,"count":2}],"isBlockCoverage":true},{"functionName":"findIndexCleanStart","ranges":[{"startOffset":81883,"endOffset":82187,"count":9501},{"startOffset":82026,"endOffset":82051,"count":9482},{"startOffset":82053,"endOffset":82170,"count":9482},{"startOffset":82170,"endOffset":82186,"count":19}],"isBlockCoverage":true},{"functionName":"getItemCleanStart","ranges":[{"startOffset":82423,"endOffset":82610,"count":9480}],"isBlockCoverage":true},{"functionName":"getItemCleanEnd","ranges":[{"startOffset":82874,"endOffset":83292,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStruct","ranges":[{"startOffset":83482,"endOffset":83664,"count":0}],"isBlockCoverage":false},{"functionName":"iterateStructs","ranges":[{"startOffset":83929,"endOffset":84377,"count":21},{"startOffset":83994,"endOffset":84010,"count":0},{"startOffset":84136,"endOffset":84306,"count":24},{"startOffset":84221,"endOffset":84287,"count":0},{"startOffset":84337,"endOffset":84374,"count":6}],"isBlockCoverage":true},{"functionName":"Transaction","ranges":[{"startOffset":85357,"endOffset":87051,"count":30052}],"isBlockCoverage":true},{"functionName":"writeUpdateMessageFromTransaction","ranges":[{"startOffset":87242,"endOffset":87609,"count":0}],"isBlockCoverage":false},{"functionName":"addChangedTypeToTransaction","ranges":[{"startOffset":87924,"endOffset":88182,"count":38037},{"startOffset":88007,"endOffset":88095,"count":0}],"isBlockCoverage":true},{"functionName":"tryToMergeWithLeft","ranges":[{"startOffset":88285,"endOffset":88793,"count":74610},{"startOffset":88405,"endOffset":88446,"count":36986},{"startOffset":88448,"endOffset":88791,"count":36986},{"startOffset":88481,"endOffset":88787,"count":18497},{"startOffset":88573,"endOffset":88659,"count":10},{"startOffset":88661,"endOffset":88781,"count":0}],"isBlockCoverage":true},{"functionName":"tryGcDeleteSet","ranges":[{"startOffset":88926,"endOffset":89750,"count":30052},{"startOffset":89013,"endOffset":89748,"count":18013},{"startOffset":89382,"endOffset":89421,"count":36017},{"startOffset":89462,"endOffset":89738,"count":18014},{"startOffset":89566,"endOffset":89593,"count":0},{"startOffset":89663,"endOffset":89682,"count":18005},{"startOffset":89684,"endOffset":89730,"count":18005}],"isBlockCoverage":true},{"functionName":"tryMergeDeleteSet","ranges":[{"startOffset":89842,"endOffset":90646,"count":30052}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":90009,"endOffset":90642,"count":18013},{"startOffset":90503,"endOffset":90541,"count":53994},{"startOffset":90582,"endOffset":90632,"count":36008}],"isBlockCoverage":true},{"functionName":"tryGc","ranges":[{"startOffset":90770,"endOffset":90869,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupTransactions","ranges":[{"startOffset":90980,"endOffset":96644,"count":30052},{"startOffset":94160,"endOffset":94600,"count":9482},{"startOffset":94414,"endOffset":94487,"count":9110},{"startOffset":94630,"endOffset":94719,"count":1},{"startOffset":94721,"endOffset":94938,"count":0},{"startOffset":95146,"endOffset":95416,"count":0},{"startOffset":95459,"endOffset":95731,"count":0},{"startOffset":95893,"endOffset":96393,"count":0},{"startOffset":96442,"endOffset":96560,"count":20040},{"startOffset":96560,"endOffset":96632,"count":10012}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91704,"endOffset":91893,"count":20034}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91740,"endOffset":91892,"count":20034},{"startOffset":91786,"endOffset":91812,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91917,"endOffset":93010,"count":30052}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92003,"endOffset":92918,"count":20034}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92039,"endOffset":92917,"count":20034},{"startOffset":92201,"endOffset":92223,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92281,"endOffset":92366,"count":20034},{"startOffset":92336,"endOffset":92366,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92432,"endOffset":92506,"count":20034}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92638,"endOffset":92697,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":92946,"endOffset":93000,"count":30052}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93384,"endOffset":93897,"count":30054},{"startOffset":93469,"endOffset":93473,"count":13},{"startOffset":93510,"endOffset":93889,"count":20022},{"startOffset":93822,"endOffset":93879,"count":20010}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":95924,"endOffset":96131,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96165,"endOffset":96201,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96357,"endOffset":96383,"count":0}],"isBlockCoverage":false},{"functionName":"transact","ranges":[{"startOffset":96867,"endOffset":98211,"count":49061},{"startOffset":97076,"endOffset":97371,"count":30052},{"startOffset":97252,"endOffset":97307,"count":20040},{"startOffset":97449,"endOffset":98189,"count":30052},{"startOffset":97580,"endOffset":98183,"count":20040}],"isBlockCoverage":true},{"functionName":"StackItem","ranges":[{"startOffset":98315,"endOffset":98531,"count":22}],"isBlockCoverage":true},{"functionName":"clearUndoManagerStackItem","ranges":[{"startOffset":98662,"endOffset":98869,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98736,"endOffset":98865,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98792,"endOffset":98822,"count":1}],"isBlockCoverage":true},{"functionName":"popStackItem","ranges":[{"startOffset":99025,"endOffset":101858,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":99373,"endOffset":101624,"count":12},{"startOffset":101159,"endOffset":101333,"count":9},{"startOffset":101377,"endOffset":101383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":99798,"endOffset":100307,"count":9},{"startOffset":99886,"endOffset":100134,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100179,"endOffset":100233,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100372,"endOffset":100733,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100454,"endOffset":100486,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100762,"endOffset":100937,"count":5},{"startOffset":100910,"endOffset":100928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":101423,"endOffset":101595,"count":12},{"startOffset":101518,"endOffset":101539,"count":10},{"startOffset":101541,"endOffset":101589,"count":10}],"isBlockCoverage":true},{"functionName":"UndoManager","ranges":[{"startOffset":103551,"endOffset":107180,"count":7},{"startOffset":103819,"endOffset":103834,"count":0}],"isBlockCoverage":true},{"functionName":"captureTransaction","ranges":[{"startOffset":103628,"endOffset":103638,"count":24}],"isBlockCoverage":true},{"functionName":"deleteFilter","ranges":[{"startOffset":103659,"endOffset":103669,"count":9}],"isBlockCoverage":true},{"functionName":"UndoManager.afterTransactionHandler","ranges":[{"startOffset":104684,"endOffset":107043,"count":24},{"startOffset":104877,"endOffset":105019,"count":23},{"startOffset":104934,"endOffset":105018,"count":0},{"startOffset":105028,"endOffset":105052,"count":1},{"startOffset":105052,"endOffset":105153,"count":23},{"startOffset":105153,"endOffset":105169,"count":8},{"startOffset":105170,"endOffset":105186,"count":15},{"startOffset":105207,"endOffset":105301,"count":8},{"startOffset":105301,"endOffset":105420,"count":15},{"startOffset":105321,"endOffset":105420,"count":11},{"startOffset":105420,"endOffset":105836,"count":23},{"startOffset":105836,"endOffset":105882,"count":3},{"startOffset":105883,"endOffset":105902,"count":1},{"startOffset":105903,"endOffset":105914,"count":1},{"startOffset":105915,"endOffset":105926,"count":1},{"startOffset":105928,"endOffset":106192,"count":1},{"startOffset":106192,"endOffset":106333,"count":22},{"startOffset":106333,"endOffset":106353,"count":23},{"startOffset":106353,"endOffset":106364,"count":15},{"startOffset":106366,"endOffset":106406,"count":11},{"startOffset":106406,"endOffset":106809,"count":23},{"startOffset":106809,"endOffset":106817,"count":8},{"startOffset":106818,"endOffset":106826,"count":15},{"startOffset":106907,"endOffset":106968,"count":22},{"startOffset":106968,"endOffset":107037,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":104827,"endOffset":104875,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":105500,"endOffset":105739,"count":23},{"startOffset":105587,"endOffset":105591,"count":7},{"startOffset":105657,"endOffset":105731,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":106553,"endOffset":106699,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":106615,"endOffset":106645,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107139,"endOffset":107174,"count":1}],"isBlockCoverage":true},{"functionName":"addToScope","ranges":[{"startOffset":107262,"endOffset":107471,"count":7},{"startOffset":107328,"endOffset":107338,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107359,"endOffset":107465,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107397,"endOffset":107415,"count":0}],"isBlockCoverage":false},{"functionName":"addTrackedOrigin","ranges":[{"startOffset":107512,"endOffset":107580,"count":0}],"isBlockCoverage":false},{"functionName":"removeTrackedOrigin","ranges":[{"startOffset":107621,"endOffset":107695,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":107699,"endOffset":108311,"count":12},{"startOffset":107778,"endOffset":107795,"count":0},{"startOffset":107836,"endOffset":108307,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107862,"endOffset":108299,"count":1},{"startOffset":107898,"endOffset":108025,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107933,"endOffset":107982,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108089,"endOffset":108138,"count":1}],"isBlockCoverage":true},{"functionName":"stopCapturing","ranges":[{"startOffset":108934,"endOffset":108981,"count":8}],"isBlockCoverage":true},{"functionName":"undo","ranges":[{"startOffset":109102,"endOffset":109284,"count":8}],"isBlockCoverage":true},{"functionName":"redo","ranges":[{"startOffset":109404,"endOffset":109586,"count":4}],"isBlockCoverage":true},{"functionName":"canUndo","ranges":[{"startOffset":109688,"endOffset":109741,"count":0}],"isBlockCoverage":false},{"functionName":"canRedo","ranges":[{"startOffset":109843,"endOffset":109896,"count":12}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":109900,"endOffset":110043,"count":2}],"isBlockCoverage":true},{"functionName":"lazyStructReaderGenerator","ranges":[{"startOffset":110109,"endOffset":111988,"count":0}],"isBlockCoverage":false},{"functionName":"LazyStructReader","ranges":[{"startOffset":112119,"endOffset":112363,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":112417,"endOffset":112625,"count":0}],"isBlockCoverage":false},{"functionName":"logUpdate","ranges":[{"startOffset":112688,"endOffset":112734,"count":0}],"isBlockCoverage":false},{"functionName":"logUpdateV2","ranges":[{"startOffset":112869,"endOffset":113296,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUpdate","ranges":[{"startOffset":113361,"endOffset":113412,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUpdateV2","ranges":[{"startOffset":113550,"endOffset":113924,"count":0}],"isBlockCoverage":false},{"functionName":"LazyStructWriter","ranges":[{"startOffset":114022,"endOffset":114742,"count":0}],"isBlockCoverage":false},{"functionName":"mergeUpdates","ranges":[{"startOffset":114837,"endOffset":114905,"count":0}],"isBlockCoverage":false},{"functionName":"encodeStateVectorFromUpdateV2","ranges":[{"startOffset":115138,"endOffset":116799,"count":0}],"isBlockCoverage":false},{"functionName":"encodeStateVectorFromUpdate","ranges":[{"startOffset":116900,"endOffset":116977,"count":0}],"isBlockCoverage":false},{"functionName":"parseUpdateMetaV2","ranges":[{"startOffset":117179,"endOffset":118175,"count":0}],"isBlockCoverage":false},{"functionName":"parseUpdateMeta","ranges":[{"startOffset":118306,"endOffset":118358,"count":0}],"isBlockCoverage":false},{"functionName":"sliceStruct","ranges":[{"startOffset":118640,"endOffset":119305,"count":0}],"isBlockCoverage":false},{"functionName":"mergeUpdatesV2","ranges":[{"startOffset":119601,"endOffset":125357,"count":0}],"isBlockCoverage":false},{"functionName":"diffUpdateV2","ranges":[{"startOffset":125587,"endOffset":126914,"count":0}],"isBlockCoverage":false},{"functionName":"diffUpdate","ranges":[{"startOffset":127000,"endOffset":127074,"count":0}],"isBlockCoverage":false},{"functionName":"flushLazyStructWriter","ranges":[{"startOffset":127155,"endOffset":127435,"count":0}],"isBlockCoverage":false},{"functionName":"writeStructToLazyStructWriter","ranges":[{"startOffset":127579,"endOffset":128118,"count":0}],"isBlockCoverage":false},{"functionName":"finishLazyStructWriting","ranges":[{"startOffset":128368,"endOffset":129148,"count":0}],"isBlockCoverage":false},{"functionName":"convertUpdateFormat","ranges":[{"startOffset":129356,"endOffset":129923,"count":0}],"isBlockCoverage":false},{"functionName":"convertUpdateFormatV1ToV2","ranges":[{"startOffset":129998,"endOffset":130069,"count":0}],"isBlockCoverage":false},{"functionName":"convertUpdateFormatV2ToV1","ranges":[{"startOffset":130144,"endOffset":130215,"count":0}],"isBlockCoverage":false},{"functionName":"YEvent","ranges":[{"startOffset":130413,"endOffset":131253,"count":20034}],"isBlockCoverage":true},{"functionName":"get path","ranges":[{"startOffset":131619,"endOffset":131754,"count":0}],"isBlockCoverage":false},{"functionName":"deletes","ranges":[{"startOffset":131996,"endOffset":132078,"count":4237224}],"isBlockCoverage":true},{"functionName":"get keys","ranges":[{"startOffset":132190,"endOffset":133740,"count":10009}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":132413,"endOffset":133681,"count":10009},{"startOffset":132448,"endOffset":133673,"count":0}],"isBlockCoverage":true},{"functionName":"get delta","ranges":[{"startOffset":134267,"endOffset":134315,"count":0}],"isBlockCoverage":false},{"functionName":"adds","ranges":[{"startOffset":134555,"endOffset":134662,"count":4248809},{"startOffset":134653,"endOffset":134657,"count":4}],"isBlockCoverage":true},{"functionName":"get changes","ranges":[{"startOffset":135226,"endOffset":137095,"count":20022},{"startOffset":135302,"endOffset":137051,"count":10009},{"startOffset":136006,"endOffset":136914,"count":8477029},{"startOffset":136036,"endOffset":136360,"count":4237224},{"startOffset":136073,"endOffset":136092,"count":9004},{"startOffset":136094,"endOffset":136336,"count":9004},{"startOffset":136130,"endOffset":136160,"count":8991},{"startOffset":136360,"endOffset":136904,"count":4239805},{"startOffset":136401,"endOffset":136677,"count":10006},{"startOffset":136437,"endOffset":136467,"count":10001},{"startOffset":136677,"endOffset":136892,"count":4229799},{"startOffset":136719,"endOffset":136749,"count":4219808},{"startOffset":136751,"endOffset":136834,"count":18975},{"startOffset":136975,"endOffset":137006,"count":10006}],"isBlockCoverage":true},{"functionName":"packOp","ranges":[{"startOffset":135846,"endOffset":135931,"count":47991},{"startOffset":135876,"endOffset":135921,"count":37982}],"isBlockCoverage":true},{"functionName":"getPathTo","ranges":[{"startOffset":137625,"endOffset":138208,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySearchMarker","ranges":[{"startOffset":138516,"endOffset":138657,"count":3}],"isBlockCoverage":true},{"functionName":"refreshMarkerTimestamp","ranges":[{"startOffset":138737,"endOffset":138800,"count":8991}],"isBlockCoverage":true},{"functionName":"overwriteMarker","ranges":[{"startOffset":139011,"endOffset":139174,"count":8991}],"isBlockCoverage":true},{"functionName":"markPosition","ranges":[{"startOffset":139300,"endOffset":139719,"count":3},{"startOffset":139376,"endOffset":139592,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":139486,"endOffset":139529,"count":0}],"isBlockCoverage":false},{"functionName":"findMarker","ranges":[{"startOffset":140102,"endOffset":142479,"count":9015},{"startOffset":140152,"endOffset":140166,"count":9009},{"startOffset":140167,"endOffset":140199,"count":8994},{"startOffset":140201,"endOffset":140222,"count":21},{"startOffset":140222,"endOffset":140274,"count":8994},{"startOffset":140274,"endOffset":140280,"count":3},{"startOffset":140281,"endOffset":140383,"count":8991},{"startOffset":140451,"endOffset":140582,"count":8991},{"startOffset":140582,"endOffset":140643,"count":8994},{"startOffset":140643,"endOffset":140660,"count":5396565},{"startOffset":140662,"endOffset":140814,"count":5392355},{"startOffset":140683,"endOffset":140697,"count":2696202},{"startOffset":140699,"endOffset":140793,"count":2696202},{"startOffset":140738,"endOffset":140761,"count":4402},{"startOffset":140761,"endOffset":140793,"count":2691800},{"startOffset":140793,"endOffset":140814,"count":5387953},{"startOffset":140814,"endOffset":140905,"count":8994},{"startOffset":140905,"endOffset":140922,"count":8988},{"startOffset":140924,"endOffset":141014,"count":0},{"startOffset":141014,"endOffset":141279,"count":8994},{"startOffset":141279,"endOffset":141314,"count":5387953},{"startOffset":141315,"endOffset":141364,"count":5387953},{"startOffset":141366,"endOffset":141456,"count":5387953},{"startOffset":141403,"endOffset":141417,"count":2691800},{"startOffset":141419,"endOffset":141452,"count":2691800},{"startOffset":141456,"endOffset":142184,"count":8994},{"startOffset":142184,"endOffset":142289,"count":8991},{"startOffset":142291,"endOffset":142384,"count":8991},{"startOffset":142384,"endOffset":142477,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":140311,"endOffset":140382,"count":0}],"isBlockCoverage":false},{"functionName":"updateMarkerChanges","ranges":[{"startOffset":142775,"endOffset":143909,"count":9021},{"startOffset":142860,"endOffset":143907,"count":9003},{"startOffset":142910,"endOffset":143730,"count":3},{"startOffset":143316,"endOffset":143488,"count":0},{"startOffset":143532,"endOffset":143686,"count":0},{"startOffset":143767,"endOffset":143787,"count":3},{"startOffset":143790,"endOffset":143903,"count":0}],"isBlockCoverage":true},{"functionName":"getTypeChildren","ranges":[{"startOffset":144077,"endOffset":144188,"count":0}],"isBlockCoverage":false},{"functionName":"callTypeObservers","ranges":[{"startOffset":144472,"endOffset":144885,"count":20034},{"startOffset":144748,"endOffset":144817,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144677,"endOffset":144685,"count":20034}],"isBlockCoverage":true},{"functionName":"AbstractType","ranges":[{"startOffset":144969,"endOffset":145637,"count":12}],"isBlockCoverage":true},{"functionName":"get parent","ranges":[{"startOffset":145691,"endOffset":145794,"count":0}],"isBlockCoverage":false},{"functionName":"_integrate","ranges":[{"startOffset":146045,"endOffset":146112,"count":12}],"isBlockCoverage":true},{"functionName":"_copy","ranges":[{"startOffset":146167,"endOffset":146219,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":146274,"endOffset":146326,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":146399,"endOffset":146420,"count":0}],"isBlockCoverage":false},{"functionName":"get _first","ranges":[{"startOffset":146468,"endOffset":146588,"count":0}],"isBlockCoverage":false},{"functionName":"_callObserver","ranges":[{"startOffset":146835,"endOffset":146976,"count":10031},{"startOffset":146905,"endOffset":146926,"count":1},{"startOffset":146928,"endOffset":146972,"count":1}],"isBlockCoverage":true},{"functionName":"observe","ranges":[{"startOffset":147124,"endOffset":147183,"count":5}],"isBlockCoverage":true},{"functionName":"observeDeep","ranges":[{"startOffset":147356,"endOffset":147420,"count":0}],"isBlockCoverage":false},{"functionName":"unobserve","ranges":[{"startOffset":147550,"endOffset":147614,"count":0}],"isBlockCoverage":false},{"functionName":"unobserveDeep","ranges":[{"startOffset":147753,"endOffset":147822,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":147872,"endOffset":147884,"count":0}],"isBlockCoverage":false},{"functionName":"typeListSlice","ranges":[{"startOffset":148053,"endOffset":148613,"count":0}],"isBlockCoverage":false},{"functionName":"typeListToArray","ranges":[{"startOffset":148735,"endOffset":148999,"count":10016},{"startOffset":148806,"endOffset":148985,"count":8477038},{"startOffset":148843,"endOffset":148964,"count":4239809},{"startOffset":148926,"endOffset":148958,"count":8994240}],"isBlockCoverage":true},{"functionName":"typeListToArraySnapshot","ranges":[{"startOffset":149159,"endOffset":149447,"count":0}],"isBlockCoverage":false},{"functionName":"typeListForEach","ranges":[{"startOffset":149720,"endOffset":149986,"count":0}],"isBlockCoverage":false},{"functionName":"typeListMap","ranges":[{"startOffset":150172,"endOffset":150335,"count":0}],"isBlockCoverage":false},{"functionName":"typeListCreateIterator","ranges":[{"startOffset":150475,"endOffset":151535,"count":9002}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":150624,"endOffset":150670,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":150682,"endOffset":151529,"count":4254501},{"startOffset":150752,"endOffset":151259,"count":2700801},{"startOffset":150780,"endOffset":150792,"count":5401173},{"startOffset":150794,"endOffset":150828,"count":2700372},{"startOffset":150952,"endOffset":151047,"count":0},{"startOffset":151425,"endOffset":151465,"count":2696103}],"isBlockCoverage":true},{"functionName":"typeListGet","ranges":[{"startOffset":151671,"endOffset":152021,"count":0}],"isBlockCoverage":false},{"functionName":"typeListInsertGenericsAfter","ranges":[{"startOffset":152296,"endOffset":154379,"count":10010},{"startOffset":152508,"endOffset":152523,"count":9},{"startOffset":152524,"endOffset":152545,"count":10001}],"isBlockCoverage":true},{"functionName":"packJsonContent","ranges":[{"startOffset":152659,"endOffset":152944,"count":10010},{"startOffset":152699,"endOffset":152940,"count":10006},{"startOffset":152787,"endOffset":152801,"count":10001},{"startOffset":152816,"endOffset":152827,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":152964,"endOffset":154354,"count":10007},{"startOffset":152991,"endOffset":153025,"count":0},{"startOffset":153072,"endOffset":153084,"count":0},{"startOffset":153224,"endOffset":154336,"count":0}],"isBlockCoverage":true},{"functionName":"typeListInsertGenerics","ranges":[{"startOffset":154692,"endOffset":156007,"count":6},{"startOffset":154765,"endOffset":154795,"count":0},{"startOffset":155005,"endOffset":156006,"count":0}],"isBlockCoverage":true},{"functionName":"typeListPushGenerics","ranges":[{"startOffset":156367,"endOffset":156799,"count":10004},{"startOffset":156511,"endOffset":156516,"count":0},{"startOffset":156675,"endOffset":156727,"count":10001},{"startOffset":156697,"endOffset":156723,"count":8457010}],"isBlockCoverage":true},{"functionName":"marker.reduce.index","ranges":[{"startOffset":156525,"endOffset":156611,"count":9982},{"startOffset":156587,"endOffset":156599,"count":0}],"isBlockCoverage":true},{"functionName":"typeListDelete","ranges":[{"startOffset":156985,"endOffset":158050,"count":9005},{"startOffset":157047,"endOffset":157057,"count":0},{"startOffset":157208,"endOffset":157258,"count":8991},{"startOffset":157321,"endOffset":157333,"count":5401738},{"startOffset":157348,"endOffset":157542,"count":5392733},{"startOffset":157369,"endOffset":157383,"count":2696580},{"startOffset":157385,"endOffset":157538,"count":2696580},{"startOffset":157415,"endOffset":157507,"count":4781},{"startOffset":157596,"endOffset":157609,"count":13225},{"startOffset":157611,"endOffset":157839,"count":13225},{"startOffset":157633,"endOffset":157818,"count":9005},{"startOffset":157664,"endOffset":157757,"count":4699},{"startOffset":157858,"endOffset":157888,"count":0}],"isBlockCoverage":true},{"functionName":"typeMapDelete","ranges":[{"startOffset":158207,"endOffset":158330,"count":0}],"isBlockCoverage":false},{"functionName":"typeMapSet","ranges":[{"startOffset":158568,"endOffset":159544,"count":10001},{"startOffset":158643,"endOffset":158650,"count":1001},{"startOffset":158755,"endOffset":158799,"count":0},{"startOffset":158846,"endOffset":158858,"count":1},{"startOffset":158865,"endOffset":158877,"count":1},{"startOffset":158884,"endOffset":158897,"count":1},{"startOffset":158904,"endOffset":158915,"count":1},{"startOffset":158998,"endOffset":159100,"count":0},{"startOffset":159107,"endOffset":159192,"count":0},{"startOffset":159199,"endOffset":159376,"count":0},{"startOffset":159466,"endOffset":159480,"count":9000}],"isBlockCoverage":true},{"functionName":"typeMapGet","ranges":[{"startOffset":159763,"endOffset":159917,"count":3},{"startOffset":159861,"endOffset":159903,"count":2},{"startOffset":159904,"endOffset":159915,"count":1}],"isBlockCoverage":true},{"functionName":"typeMapGetAll","ranges":[{"startOffset":160131,"endOffset":160362,"count":0}],"isBlockCoverage":false},{"functionName":"typeMapHas","ranges":[{"startOffset":160501,"endOffset":160600,"count":0}],"isBlockCoverage":false},{"functionName":"typeMapGetSnapshot","ranges":[{"startOffset":160857,"endOffset":161155,"count":0}],"isBlockCoverage":false},{"functionName":"createMapIterator","ranges":[{"startOffset":161295,"endOffset":161394,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":161367,"endOffset":161393,"count":1000}],"isBlockCoverage":true},{"functionName":"YArrayEvent","ranges":[{"startOffset":161683,"endOffset":161791,"count":10011}],"isBlockCoverage":true},{"functionName":"YArray","ranges":[{"startOffset":161960,"endOffset":162167,"count":4}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":162383,"endOffset":162502,"count":0}],"isBlockCoverage":false},{"functionName":"_integrate","ranges":[{"startOffset":162748,"endOffset":162906,"count":4}],"isBlockCoverage":true},{"functionName":"_copy","ranges":[{"startOffset":162947,"endOffset":162985,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":163026,"endOffset":163255,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":163259,"endOffset":163362,"count":8994},{"startOffset":163330,"endOffset":163358,"count":0}],"isBlockCoverage":true},{"functionName":"_callObserver","ranges":[{"startOffset":163565,"endOffset":163738,"count":10011}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":164300,"endOffset":164601,"count":6},{"startOffset":164500,"endOffset":164597,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164380,"endOffset":164492,"count":6}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":164781,"endOffset":165052,"count":10004},{"startOffset":164963,"endOffset":165048,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164852,"endOffset":164955,"count":10004}],"isBlockCoverage":true},{"functionName":"unshift","ranges":[{"startOffset":165173,"endOffset":165225,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":165438,"endOffset":165705,"count":9005},{"startOffset":165611,"endOffset":165701,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":165521,"endOffset":165603,"count":9005}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":165866,"endOffset":165919,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":166015,"endOffset":166064,"count":10016}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":166216,"endOffset":166301,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":166399,"endOffset":166483,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":166843,"endOffset":166909,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":167110,"endOffset":167157,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":167208,"endOffset":167274,"count":9002}],"isBlockCoverage":true},{"functionName":"_write","ranges":[{"startOffset":167346,"endOffset":167407,"count":0}],"isBlockCoverage":false},{"functionName":"readYArray","ranges":[{"startOffset":167521,"endOffset":167545,"count":0}],"isBlockCoverage":false},{"functionName":"YMapEvent","ranges":[{"startOffset":167834,"endOffset":167936,"count":10003}],"isBlockCoverage":true},{"functionName":"YMap","ranges":[{"startOffset":168239,"endOffset":168513,"count":2},{"startOffset":168450,"endOffset":168509,"count":0}],"isBlockCoverage":true},{"functionName":"_integrate","ranges":[{"startOffset":168759,"endOffset":168968,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":168879,"endOffset":168930,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":169013,"endOffset":169049,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":169094,"endOffset":169344,"count":0}],"isBlockCoverage":false},{"functionName":"_callObserver","ranges":[{"startOffset":169545,"endOffset":169678,"count":10003}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":169784,"endOffset":170095,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":169892,"endOffset":170074,"count":1000},{"startOffset":170043,"endOffset":170055,"count":0}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":170199,"endOffset":170268,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":170386,"endOffset":170494,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":170611,"endOffset":170759,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":170864,"endOffset":171021,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":171224,"endOffset":171389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":171494,"endOffset":171546,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":171674,"endOffset":171912,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":172125,"endOffset":172413,"count":10001},{"startOffset":172302,"endOffset":172392,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":172198,"endOffset":172294,"count":10001}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":172541,"endOffset":172610,"count":3}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":172771,"endOffset":172819,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":172877,"endOffset":173171,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":173243,"endOffset":173302,"count":0}],"isBlockCoverage":false},{"functionName":"readYMap","ranges":[{"startOffset":173414,"endOffset":173436,"count":0}],"isBlockCoverage":false},{"functionName":"equalAttrs","ranges":[{"startOffset":173523,"endOffset":173628,"count":0}],"isBlockCoverage":false},{"functionName":"ItemTextListPosition","ranges":[{"startOffset":173808,"endOffset":173983,"count":10}],"isBlockCoverage":true},{"functionName":"forward","ranges":[{"startOffset":174058,"endOffset":174568,"count":11},{"startOffset":174100,"endOffset":174137,"count":0},{"startOffset":174190,"endOffset":174378,"count":0},{"startOffset":174427,"endOffset":174481,"count":10}],"isBlockCoverage":true},{"functionName":"findNextPosition","ranges":[{"startOffset":174787,"endOffset":175637,"count":10},{"startOffset":174846,"endOffset":174858,"count":5},{"startOffset":174860,"endOffset":175622,"count":3},{"startOffset":174913,"endOffset":175098,"count":0},{"startOffset":175188,"endOffset":175331,"count":0}],"isBlockCoverage":true},{"functionName":"findPosition","ranges":[{"startOffset":175829,"endOffset":176284,"count":10},{"startOffset":175960,"endOffset":176133,"count":3},{"startOffset":176133,"endOffset":176282,"count":7}],"isBlockCoverage":true},{"functionName":"insertNegatedAttributes","ranges":[{"startOffset":176544,"endOffset":177598,"count":10},{"startOffset":176686,"endOffset":176969,"count":1},{"startOffset":176793,"endOffset":176955,"count":0},{"startOffset":176974,"endOffset":177132,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177228,"endOffset":177594,"count":0}],"isBlockCoverage":false},{"functionName":"updateCurrentAttributes","ranges":[{"startOffset":177748,"endOffset":177928,"count":0}],"isBlockCoverage":false},{"functionName":"minimizeAttributeChanges","ranges":[{"startOffset":178083,"endOffset":178557,"count":10},{"startOffset":178205,"endOffset":178555,"count":11},{"startOffset":178239,"endOffset":178258,"count":9},{"startOffset":178258,"endOffset":178528,"count":2},{"startOffset":178290,"endOffset":178500,"count":1},{"startOffset":178346,"endOffset":178499,"count":0},{"startOffset":178502,"endOffset":178528,"count":1},{"startOffset":178528,"endOffset":178555,"count":1}],"isBlockCoverage":true},{"functionName":"insertAttributes","ranges":[{"startOffset":178807,"endOffset":179613,"count":10},{"startOffset":179024,"endOffset":179584,"count":0}],"isBlockCoverage":true},{"functionName":"insertText","ranges":[{"startOffset":179877,"endOffset":180963,"count":10},{"startOffset":180387,"endOffset":180468,"count":0},{"startOffset":180714,"endOffset":180728,"count":3},{"startOffset":180743,"endOffset":180754,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":179967,"endOffset":180064,"count":0}],"isBlockCoverage":false},{"functionName":"formatText","ranges":[{"startOffset":181203,"endOffset":183767,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupFormattingGap","ranges":[{"startOffset":184224,"endOffset":185908,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupContextlessFormattingGap","ranges":[{"startOffset":186024,"endOffset":186614,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupYTextFormatting","ranges":[{"startOffset":187212,"endOffset":188005,"count":0}],"isBlockCoverage":false},{"functionName":"deleteText","ranges":[{"startOffset":188200,"endOffset":189262,"count":0}],"isBlockCoverage":false},{"functionName":"YTextEvent","ranges":[{"startOffset":190094,"endOffset":190569,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":190425,"endOffset":190563,"count":20},{"startOffset":190507,"endOffset":190557,"count":0}],"isBlockCoverage":true},{"functionName":"get changes","ranges":[{"startOffset":190770,"endOffset":191279,"count":0}],"isBlockCoverage":false},{"functionName":"get delta","ranges":[{"startOffset":191596,"endOffset":197831,"count":0}],"isBlockCoverage":false},{"functionName":"YText","ranges":[{"startOffset":198277,"endOffset":198584,"count":6},{"startOffset":198457,"endOffset":198489,"count":0}],"isBlockCoverage":true},{"functionName":"YText._pending","ranges":[{"startOffset":198460,"endOffset":198488,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":198670,"endOffset":198713,"count":1}],"isBlockCoverage":true},{"functionName":"_integrate","ranges":[{"startOffset":198773,"endOffset":198986,"count":6},{"startOffset":198915,"endOffset":198956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":198898,"endOffset":198906,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":198990,"endOffset":199027,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":199064,"endOffset":199161,"count":0}],"isBlockCoverage":false},{"functionName":"_callObserver","ranges":[{"startOffset":199363,"endOffset":201526,"count":20},{"startOffset":199717,"endOffset":201522,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":200137,"endOffset":200307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":200479,"endOffset":200724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":200755,"endOffset":201514,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":201631,"endOffset":201948,"count":19},{"startOffset":201752,"endOffset":201929,"count":27},{"startOffset":201775,"endOffset":201789,"count":13},{"startOffset":201790,"endOffset":201832,"count":13},{"startOffset":201834,"endOffset":201904,"count":13}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":202075,"endOffset":202117,"count":0}],"isBlockCoverage":false},{"functionName":"applyDelta","ranges":[{"startOffset":202404,"endOffset":203799,"count":0}],"isBlockCoverage":false},{"functionName":"toDelta","ranges":[{"startOffset":204095,"endOffset":207583,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":207989,"endOffset":208572,"count":10},{"startOffset":208050,"endOffset":208070,"count":0},{"startOffset":208452,"endOffset":208568,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208135,"endOffset":208444,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208330,"endOffset":208362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":208518,"endOffset":208560,"count":0}],"isBlockCoverage":false},{"functionName":"insertEmbed","ranges":[{"startOffset":208915,"endOffset":209306,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":209527,"endOffset":209882,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":210234,"endOffset":210717,"count":0}],"isBlockCoverage":false},{"functionName":"removeAttribute","ranges":[{"startOffset":210985,"endOffset":211281,"count":0}],"isBlockCoverage":false},{"functionName":"setAttribute","ranges":[{"startOffset":211625,"endOffset":211960,"count":0}],"isBlockCoverage":false},{"functionName":"getAttribute","ranges":[{"startOffset":212364,"endOffset":212462,"count":0}],"isBlockCoverage":false},{"functionName":"getAttributes","ranges":[{"startOffset":212768,"endOffset":212821,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":212893,"endOffset":212953,"count":0}],"isBlockCoverage":false},{"functionName":"readYText","ranges":[{"startOffset":213085,"endOffset":213108,"count":0}],"isBlockCoverage":false},{"functionName":"YXmlTreeWalker","ranges":[{"startOffset":214059,"endOffset":214267,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":214271,"endOffset":214313,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":214452,"endOffset":215697,"count":0}],"isBlockCoverage":false},{"functionName":"YXmlFragment","ranges":[{"startOffset":216104,"endOffset":216214,"count":0}],"isBlockCoverage":false},{"functionName":"get firstChild","ranges":[{"startOffset":216269,"endOffset":216379,"count":0}],"isBlockCoverage":false},{"functionName":"_integrate","ranges":[{"startOffset":216625,"endOffset":216783,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":216787,"endOffset":216831,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":216875,"endOffset":217054,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":217058,"endOffset":217161,"count":0}],"isBlockCoverage":false},{"functionName":"createTreeWalker","ranges":[{"startOffset":217730,"endOffset":217805,"count":0}],"isBlockCoverage":false},{"functionName":"querySelector","ranges":[{"startOffset":218192,"endOffset":218506,"count":0}],"isBlockCoverage":false},{"functionName":"querySelectorAll","ranges":[{"startOffset":218880,"endOffset":219082,"count":0}],"isBlockCoverage":false},{"functionName":"_callObserver","ranges":[{"startOffset":219283,"endOffset":219416,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":219579,"endOffset":219657,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":219695,"endOffset":219737,"count":0}],"isBlockCoverage":false},{"functionName":"toDOM","ranges":[{"startOffset":220519,"endOffset":220864,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":221160,"endOffset":221493,"count":0}],"isBlockCoverage":false},{"functionName":"insertAfter","ranges":[{"startOffset":221811,"endOffset":222381,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":222598,"endOffset":222918,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":223042,"endOffset":223091,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":223227,"endOffset":223286,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":223426,"endOffset":223478,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":223658,"endOffset":223711,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":223882,"endOffset":223967,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":224181,"endOffset":224228,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":224493,"endOffset":224560,"count":0}],"isBlockCoverage":false},{"functionName":"readYXmlFragment","ranges":[{"startOffset":224706,"endOffset":224736,"count":0}],"isBlockCoverage":false},{"functionName":"YXmlElement","ranges":[{"startOffset":225045,"endOffset":225218,"count":0}],"isBlockCoverage":false},{"functionName":"get nextSibling","ranges":[{"startOffset":225273,"endOffset":225452,"count":0}],"isBlockCoverage":false},{"functionName":"get prevSibling","ranges":[{"startOffset":225507,"endOffset":225686,"count":0}],"isBlockCoverage":false},{"functionName":"_integrate","ranges":[{"startOffset":225932,"endOffset":226148,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":226277,"endOffset":226333,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":226376,"endOffset":226684,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":226955,"endOffset":227519,"count":0}],"isBlockCoverage":false},{"functionName":"removeAttribute","ranges":[{"startOffset":227684,"endOffset":227958,"count":0}],"isBlockCoverage":false},{"functionName":"setAttribute","ranges":[{"startOffset":228180,"endOffset":228494,"count":0}],"isBlockCoverage":false},{"functionName":"getAttribute","ranges":[{"startOffset":228776,"endOffset":228874,"count":0}],"isBlockCoverage":false},{"functionName":"hasAttribute","ranges":[{"startOffset":229085,"endOffset":229183,"count":0}],"isBlockCoverage":false},{"functionName":"getAttributes","ranges":[{"startOffset":229364,"endOffset":229417,"count":0}],"isBlockCoverage":false},{"functionName":"toDOM","ranges":[{"startOffset":230199,"endOffset":230633,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":230898,"endOffset":231001,"count":0}],"isBlockCoverage":false},{"functionName":"readYXmlElement","ranges":[{"startOffset":231132,"endOffset":231177,"count":0}],"isBlockCoverage":false},{"functionName":"YXmlEvent","ranges":[{"startOffset":231727,"endOffset":232216,"count":0}],"isBlockCoverage":false},{"functionName":"YXmlHook","ranges":[{"startOffset":232413,"endOffset":232522,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":232619,"endOffset":232672,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":232712,"endOffset":232853,"count":0}],"isBlockCoverage":false},{"functionName":"toDOM","ranges":[{"startOffset":233635,"endOffset":234029,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":234294,"endOffset":234394,"count":0}],"isBlockCoverage":false},{"functionName":"readYXmlHook","ranges":[{"startOffset":234531,"endOffset":234575,"count":0}],"isBlockCoverage":false},{"functionName":"get nextSibling","ranges":[{"startOffset":234803,"endOffset":234982,"count":0}],"isBlockCoverage":false},{"functionName":"get prevSibling","ranges":[{"startOffset":235037,"endOffset":235216,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":235220,"endOffset":235260,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":235300,"endOffset":235400,"count":0}],"isBlockCoverage":false},{"functionName":"toDOM","ranges":[{"startOffset":236176,"endOffset":236384,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":236388,"endOffset":237513,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":237551,"endOffset":237593,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":237665,"endOffset":237728,"count":0}],"isBlockCoverage":false},{"functionName":"readYXmlText","ranges":[{"startOffset":237865,"endOffset":237890,"count":0}],"isBlockCoverage":false},{"functionName":"AbstractStruct","ranges":[{"startOffset":237978,"endOffset":238052,"count":29505}],"isBlockCoverage":true},{"functionName":"get deleted","ranges":[{"startOffset":238089,"endOffset":238147,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":238457,"endOffset":238497,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":238660,"endOffset":238740,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":238822,"endOffset":238897,"count":0}],"isBlockCoverage":false},{"functionName":"get deleted","ranges":[{"startOffset":238987,"endOffset":239023,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":239027,"endOffset":239039,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":239101,"endOffset":239248,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":239330,"endOffset":239499,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":239599,"endOffset":239714,"count":0}],"isBlockCoverage":false},{"functionName":"getMissing","ranges":[{"startOffset":239829,"endOffset":239882,"count":0}],"isBlockCoverage":false},{"functionName":"ContentBinary","ranges":[{"startOffset":239955,"endOffset":240010,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":240048,"endOffset":240079,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":240121,"endOffset":240166,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":240205,"endOffset":240241,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":240286,"endOffset":240342,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":240415,"endOffset":240474,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":240547,"endOffset":240587,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":240665,"endOffset":240697,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":240750,"endOffset":240773,"count":0}],"isBlockCoverage":false},{"functionName":"gc","ranges":[{"startOffset":240820,"endOffset":240833,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":240932,"endOffset":240997,"count":0}],"isBlockCoverage":false},{"functionName":"getRef","ranges":[{"startOffset":241035,"endOffset":241063,"count":0}],"isBlockCoverage":false},{"functionName":"readContentBinary","ranges":[{"startOffset":241183,"endOffset":241230,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDeleted","ranges":[{"startOffset":241295,"endOffset":241338,"count":18005}],"isBlockCoverage":true},{"functionName":"getLength","ranges":[{"startOffset":241376,"endOffset":241414,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":241456,"endOffset":241489,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":241528,"endOffset":241565,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":241611,"endOffset":241664,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":241738,"endOffset":241856,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":241930,"endOffset":241996,"count":8513}],"isBlockCoverage":true},{"functionName":"integrate","ranges":[{"startOffset":242074,"endOffset":242217,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":242271,"endOffset":242294,"count":0}],"isBlockCoverage":false},{"functionName":"gc","ranges":[{"startOffset":242341,"endOffset":242354,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":242453,"endOffset":242523,"count":9489}],"isBlockCoverage":true},{"functionName":"getRef","ranges":[{"startOffset":242561,"endOffset":242589,"count":9489}],"isBlockCoverage":true},{"functionName":"readContentDeleted","ranges":[{"startOffset":242726,"endOffset":242774,"count":0}],"isBlockCoverage":false},{"functionName":"createDocFromOpts","ranges":[{"startOffset":242872,"endOffset":242969,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDoc","ranges":[{"startOffset":243047,"endOffset":243543,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":243581,"endOffset":243612,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":243654,"endOffset":243695,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":243734,"endOffset":243770,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":243812,"endOffset":243896,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":243966,"endOffset":244025,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":244095,"endOffset":244135,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":244213,"endOffset":244460,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":244514,"endOffset":244706,"count":0}],"isBlockCoverage":false},{"functionName":"gc","ranges":[{"startOffset":244754,"endOffset":244768,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":244868,"endOffset":244970,"count":0}],"isBlockCoverage":false},{"functionName":"getRef","ranges":[{"startOffset":245008,"endOffset":245036,"count":0}],"isBlockCoverage":false},{"functionName":"readContentDoc","ranges":[{"startOffset":245164,"endOffset":245249,"count":0}],"isBlockCoverage":false},{"functionName":"ContentEmbed","ranges":[{"startOffset":245334,"endOffset":245383,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":245421,"endOffset":245452,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":245494,"endOffset":245537,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":245576,"endOffset":245612,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":245656,"endOffset":245709,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":245781,"endOffset":245840,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":245912,"endOffset":245952,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":246030,"endOffset":246062,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":246115,"endOffset":246138,"count":0}],"isBlockCoverage":false},{"functionName":"gc","ranges":[{"startOffset":246185,"endOffset":246198,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":246297,"endOffset":246361,"count":0}],"isBlockCoverage":false},{"functionName":"getRef","ranges":[{"startOffset":246399,"endOffset":246427,"count":0}],"isBlockCoverage":false},{"functionName":"readContentEmbed","ranges":[{"startOffset":246559,"endOffset":246606,"count":0}],"isBlockCoverage":false},{"functionName":"ContentFormat","ranges":[{"startOffset":246717,"endOffset":246791,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":246829,"endOffset":246860,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":246902,"endOffset":246935,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":246974,"endOffset":247011,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":247056,"endOffset":247120,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":247193,"endOffset":247252,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":247325,"endOffset":247365,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":247443,"endOffset":247627,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":247681,"endOffset":247704,"count":0}],"isBlockCoverage":false},{"functionName":"gc","ranges":[{"startOffset":247751,"endOffset":247764,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":247863,"endOffset":247959,"count":0}],"isBlockCoverage":false},{"functionName":"getRef","ranges":[{"startOffset":247997,"endOffset":248025,"count":0}],"isBlockCoverage":false},{"functionName":"readContentFormat","ranges":[{"startOffset":248144,"endOffset":248211,"count":0}],"isBlockCoverage":false},{"functionName":"ContentJSON","ranges":[{"startOffset":248297,"endOffset":248382,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":248420,"endOffset":248465,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":248507,"endOffset":248546,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":248585,"endOffset":248621,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":248664,"endOffset":248714,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":248785,"endOffset":248924,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":248995,"endOffset":249077,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":249155,"endOffset":249187,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":249240,"endOffset":249263,"count":0}],"isBlockCoverage":false},{"functionName":"gc","ranges":[{"startOffset":249310,"endOffset":249323,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":249422,"endOffset":249674,"count":0}],"isBlockCoverage":false},{"functionName":"getRef","ranges":[{"startOffset":249712,"endOffset":249740,"count":0}],"isBlockCoverage":false},{"functionName":"readContentJSON","ranges":[{"startOffset":249870,"endOffset":250141,"count":0}],"isBlockCoverage":false},{"functionName":"ContentAny","ranges":[{"startOffset":250206,"endOffset":250291,"count":29489}],"isBlockCoverage":true},{"functionName":"getLength","ranges":[{"startOffset":250329,"endOffset":250374,"count":29489}],"isBlockCoverage":true},{"functionName":"getContent","ranges":[{"startOffset":250416,"endOffset":250455,"count":6970630}],"isBlockCoverage":true},{"functionName":"isCountable","ranges":[{"startOffset":250494,"endOffset":250530,"count":29489}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":250572,"endOffset":250621,"count":1}],"isBlockCoverage":true},{"functionName":"splice","ranges":[{"startOffset":250691,"endOffset":250829,"count":9480}],"isBlockCoverage":true},{"functionName":"mergeWith","ranges":[{"startOffset":250899,"endOffset":250981,"count":9980}],"isBlockCoverage":true},{"functionName":"integrate","ranges":[{"startOffset":251059,"endOffset":251091,"count":20009}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":251144,"endOffset":251167,"count":18006}],"isBlockCoverage":true},{"functionName":"gc","ranges":[{"startOffset":251214,"endOffset":251227,"count":18005}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":251326,"endOffset":251527,"count":1500},{"startOffset":251460,"endOffset":251523,"count":2001}],"isBlockCoverage":true},{"functionName":"getRef","ranges":[{"startOffset":251565,"endOffset":251593,"count":1500}],"isBlockCoverage":true},{"functionName":"readContentAny","ranges":[{"startOffset":251706,"endOffset":251868,"count":1}],"isBlockCoverage":true},{"functionName":"ContentString","ranges":[{"startOffset":251952,"endOffset":252033,"count":16}],"isBlockCoverage":true},{"functionName":"getLength","ranges":[{"startOffset":252071,"endOffset":252116,"count":26}],"isBlockCoverage":true},{"functionName":"getContent","ranges":[{"startOffset":252158,"endOffset":252207,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":252246,"endOffset":252282,"count":16}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":252327,"endOffset":252379,"count":4}],"isBlockCoverage":true},{"functionName":"splice","ranges":[{"startOffset":252452,"endOffset":253246,"count":2},{"startOffset":252786,"endOffset":252812,"count":0},{"startOffset":252814,"endOffset":253225,"count":0}],"isBlockCoverage":true},{"functionName":"mergeWith","ranges":[{"startOffset":253319,"endOffset":253385,"count":4}],"isBlockCoverage":true},{"functionName":"integrate","ranges":[{"startOffset":253463,"endOffset":253495,"count":14}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":253548,"endOffset":253571,"count":8}],"isBlockCoverage":true},{"functionName":"gc","ranges":[{"startOffset":253618,"endOffset":253631,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":253730,"endOffset":253834,"count":0}],"isBlockCoverage":false},{"functionName":"getRef","ranges":[{"startOffset":253872,"endOffset":253900,"count":0}],"isBlockCoverage":false},{"functionName":"readContentString","ranges":[{"startOffset":254034,"endOffset":254084,"count":0}],"isBlockCoverage":false},{"functionName":"ContentType","ranges":[{"startOffset":254584,"endOffset":254679,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":254717,"endOffset":254748,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":254790,"endOffset":254832,"count":0}],"isBlockCoverage":false},{"functionName":"isCountable","ranges":[{"startOffset":254871,"endOffset":254907,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":254950,"endOffset":255009,"count":0}],"isBlockCoverage":false},{"functionName":"splice","ranges":[{"startOffset":255080,"endOffset":255139,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":255210,"endOffset":255250,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":255328,"endOffset":255412,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":255466,"endOffset":256259,"count":0}],"isBlockCoverage":false},{"functionName":"gc","ranges":[{"startOffset":256307,"endOffset":256678,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":256778,"endOffset":256838,"count":0}],"isBlockCoverage":false},{"functionName":"getRef","ranges":[{"startOffset":256876,"endOffset":256904,"count":0}],"isBlockCoverage":false},{"functionName":"readContentType","ranges":[{"startOffset":257034,"endOffset":257102,"count":0}],"isBlockCoverage":false},{"functionName":"followRedone","ranges":[{"startOffset":257265,"endOffset":257641,"count":0}],"isBlockCoverage":false},{"functionName":"keepItem","ranges":[{"startOffset":257901,"endOffset":258059,"count":15}],"isBlockCoverage":true},{"functionName":"splitItem","ranges":[{"startOffset":258253,"endOffset":259367,"count":9482},{"startOffset":258625,"endOffset":258659,"count":0},{"startOffset":258681,"endOffset":258713,"count":0},{"startOffset":258746,"endOffset":258838,"count":0},{"startOffset":259011,"endOffset":259054,"count":8732},{"startOffset":259188,"endOffset":259215,"count":0},{"startOffset":259217,"endOffset":259320,"count":0}],"isBlockCoverage":true},{"functionName":"redoItem","ranges":[{"startOffset":259666,"endOffset":263246,"count":5},{"startOffset":259888,"endOffset":259943,"count":0},{"startOffset":260182,"endOffset":260212,"count":0},{"startOffset":260214,"endOffset":260580,"count":0},{"startOffset":260671,"endOffset":260725,"count":0},{"startOffset":260759,"endOffset":262018,"count":4},{"startOffset":260914,"endOffset":261443,"count":1},{"startOffset":261143,"endOffset":261257,"count":0},{"startOffset":261413,"endOffset":261443,"count":0},{"startOffset":261704,"endOffset":261821,"count":0},{"startOffset":261981,"endOffset":262014,"count":0},{"startOffset":262018,"endOffset":262860,"count":1},{"startOffset":262063,"endOffset":262089,"count":0},{"startOffset":262091,"endOffset":262785,"count":0},{"startOffset":262842,"endOffset":262849,"count":0},{"startOffset":263020,"endOffset":263034,"count":2},{"startOffset":263053,"endOffset":263064,"count":4}],"isBlockCoverage":true},{"functionName":"Item","ranges":[{"startOffset":263756,"endOffset":265314,"count":29505},{"startOffset":265306,"endOffset":265309,"count":0}],"isBlockCoverage":true},{"functionName":"set marker","ranges":[{"startOffset":265424,"endOffset":265545,"count":17991},{"startOffset":265502,"endOffset":265541,"count":17990}],"isBlockCoverage":true},{"functionName":"get marker","ranges":[{"startOffset":265549,"endOffset":265609,"count":3}],"isBlockCoverage":true},{"functionName":"get keep","ranges":[{"startOffset":265673,"endOffset":265731,"count":46025}],"isBlockCoverage":true},{"functionName":"set keep","ranges":[{"startOffset":265735,"endOffset":265828,"count":17},{"startOffset":265785,"endOffset":265824,"count":16}],"isBlockCoverage":true},{"functionName":"get countable","ranges":[{"startOffset":265832,"endOffset":265895,"count":16589671}],"isBlockCoverage":true},{"functionName":"get deleted","ranges":[{"startOffset":265975,"endOffset":266036,"count":38815297}],"isBlockCoverage":true},{"functionName":"set deleted","ranges":[{"startOffset":266040,"endOffset":266143,"count":0}],"isBlockCoverage":false},{"functionName":"markDeleted","ranges":[{"startOffset":266147,"endOffset":266197,"count":18014}],"isBlockCoverage":true},{"functionName":"getMissing","ranges":[{"startOffset":266409,"endOffset":268145,"count":1},{"startOffset":266463,"endOffset":266503,"count":0},{"startOffset":266504,"endOffset":266563,"count":0},{"startOffset":266565,"endOffset":266604,"count":0},{"startOffset":266630,"endOffset":266675,"count":0},{"startOffset":266676,"endOffset":266745,"count":0},{"startOffset":266747,"endOffset":266791,"count":0},{"startOffset":266846,"endOffset":266886,"count":0},{"startOffset":266887,"endOffset":266946,"count":0},{"startOffset":266948,"endOffset":266987,"count":0},{"startOffset":267062,"endOffset":267175,"count":0},{"startOffset":267202,"endOffset":267318,"count":0},{"startOffset":267338,"endOffset":267369,"count":0},{"startOffset":267386,"endOffset":267418,"count":0},{"startOffset":267421,"endOffset":267454,"count":0},{"startOffset":267539,"endOffset":267852,"count":0},{"startOffset":267894,"endOffset":268125,"count":0}],"isBlockCoverage":true},{"functionName":"integrate","ranges":[{"startOffset":268227,"endOffset":273004,"count":20023},{"startOffset":268281,"endOffset":268552,"count":0},{"startOffset":268599,"endOffset":268643,"count":1017},{"startOffset":268615,"endOffset":268642,"count":5},{"startOffset":268645,"endOffset":268693,"count":19011},{"startOffset":268659,"endOffset":268692,"count":19006},{"startOffset":268695,"endOffset":270996,"count":1012},{"startOffset":268923,"endOffset":268960,"count":0},{"startOffset":268995,"endOffset":269187,"count":1001},{"startOffset":269120,"endOffset":269138,"count":0},{"startOffset":269140,"endOffset":269177,"count":0},{"startOffset":269187,"endOffset":269273,"count":11},{"startOffset":269809,"endOffset":269828,"count":2},{"startOffset":269830,"endOffset":270962,"count":2},{"startOffset":269952,"endOffset":270513,"count":1},{"startOffset":270101,"endOffset":270383,"count":0},{"startOffset":270513,"endOffset":270929,"count":1},{"startOffset":270892,"endOffset":270929,"count":0},{"startOffset":271096,"endOffset":271204,"count":19007},{"startOffset":271204,"endOffset":271646,"count":1016},{"startOffset":271264,"endOffset":271456,"count":1001},{"startOffset":271389,"endOffset":271407,"count":0},{"startOffset":271409,"endOffset":271446,"count":0},{"startOffset":271456,"endOffset":271614,"count":15},{"startOffset":271678,"endOffset":271719,"count":6},{"startOffset":271719,"endOffset":272087,"count":20017},{"startOffset":271754,"endOffset":272087,"count":10002},{"startOffset":271954,"endOffset":272079,"count":9001},{"startOffset":272155,"endOffset":272172,"count":10021},{"startOffset":272173,"endOffset":272189,"count":10021},{"startOffset":272191,"endOffset":272279,"count":10021},{"startOffset":272603,"endOffset":272666,"count":0},{"startOffset":272696,"endOffset":272718,"count":10002},{"startOffset":272721,"endOffset":272859,"count":0},{"startOffset":272865,"endOffset":273000,"count":0}],"isBlockCoverage":true},{"functionName":"get next","ranges":[{"startOffset":273059,"endOffset":273176,"count":0}],"isBlockCoverage":false},{"functionName":"get prev","ranges":[{"startOffset":273235,"endOffset":273350,"count":0}],"isBlockCoverage":false},{"functionName":"get lastId","ranges":[{"startOffset":273419,"endOffset":273651,"count":55992},{"startOffset":273578,"endOffset":273587,"count":33361},{"startOffset":273588,"endOffset":273647,"count":22631}],"isBlockCoverage":true},{"functionName":"mergeWith","ranges":[{"startOffset":273748,"endOffset":274994,"count":36986},{"startOffset":273869,"endOffset":273898,"count":18497},{"startOffset":273899,"endOffset":273955,"count":18497},{"startOffset":273956,"endOffset":273999,"count":18497},{"startOffset":274000,"endOffset":274055,"count":18497},{"startOffset":274056,"endOffset":274095,"count":18497},{"startOffset":274096,"endOffset":274125,"count":18497},{"startOffset":274126,"endOffset":274156,"count":18497},{"startOffset":274157,"endOffset":274220,"count":18497},{"startOffset":274221,"endOffset":274267,"count":18497},{"startOffset":274274,"endOffset":274973,"count":18497},{"startOffset":274389,"endOffset":274751,"count":18487},{"startOffset":274774,"endOffset":274809,"count":2},{"startOffset":274873,"endOffset":274914,"count":8512},{"startOffset":274973,"endOffset":274993,"count":18489}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":274420,"endOffset":274741,"count":18466},{"startOffset":274466,"endOffset":274731,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":275085,"endOffset":275577,"count":18015},{"startOffset":275131,"endOffset":275573,"count":18014},{"startOffset":275292,"endOffset":275340,"count":9013}],"isBlockCoverage":true},{"functionName":"gc","ranges":[{"startOffset":275657,"endOffset":275936,"count":18005},{"startOffset":275704,"endOffset":275746,"count":0},{"startOffset":275794,"endOffset":275865,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":276229,"endOffset":277991,"count":10989},{"startOffset":276285,"endOffset":276339,"count":0},{"startOffset":276516,"endOffset":276519,"count":1002},{"startOffset":276520,"endOffset":276533,"count":9987},{"startOffset":276590,"endOffset":276603,"count":0},{"startOffset":276660,"endOffset":276663,"count":999},{"startOffset":276664,"endOffset":276677,"count":9990},{"startOffset":276759,"endOffset":276801,"count":9987},{"startOffset":276832,"endOffset":276880,"count":0},{"startOffset":276905,"endOffset":276928,"count":1002},{"startOffset":276930,"endOffset":277946,"count":1002},{"startOffset":277341,"endOffset":277465,"count":0},{"startOffset":277473,"endOffset":277860,"count":0},{"startOffset":277891,"endOffset":277940,"count":1000}],"isBlockCoverage":true},{"functionName":"readItemContent","ranges":[{"startOffset":278105,"endOffset":278165,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":278323,"endOffset":278356,"count":0}],"isBlockCoverage":false},{"functionName":"contentRefs","ranges":[{"startOffset":278609,"endOffset":278642,"count":0}],"isBlockCoverage":false},{"functionName":"get deleted","ranges":[{"startOffset":278770,"endOffset":278806,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":278810,"endOffset":278822,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWith","ranges":[{"startOffset":278886,"endOffset":279033,"count":0}],"isBlockCoverage":false},{"functionName":"integrate","ranges":[{"startOffset":279115,"endOffset":279221,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":279321,"endOffset":279548,"count":0}],"isBlockCoverage":false},{"functionName":"getMissing","ranges":[{"startOffset":279663,"endOffset":279716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/binary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2038,"count":1}],"isBlockCoverage":true}]},{"scriptId":"468","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/webcrypto.node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1}],"isBlockCoverage":true}]},{"scriptId":"469","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9170,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3120,"endOffset":3222,"count":4}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3246,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3518,"endOffset":3600,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3602,"endOffset":3702,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3704,"endOffset":3806,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3808,"endOffset":3912,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3914,"endOffset":4020,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":4022,"endOffset":4178,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4180,"endOffset":4262,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4264,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4322,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4406,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4490,"endOffset":4576,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5619,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5706,"endOffset":5990,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":5992,"endOffset":6083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6161,"endOffset":6414,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6418,"endOffset":6606,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6655,"endOffset":7485,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6753,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7248,"endOffset":7478,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8544,"endOffset":8584,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8696,"endOffset":8743,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8869,"endOffset":8890,"count":2}],"isBlockCoverage":true}]},{"scriptId":"470","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16193,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1299,"endOffset":1665,"count":384},{"startOffset":1534,"endOffset":1616,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1667,"endOffset":2128,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":2130,"endOffset":2673,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2675,"endOffset":3343,"count":384},{"startOffset":2781,"endOffset":2889,"count":0},{"startOffset":2935,"endOffset":2939,"count":0},{"startOffset":3072,"endOffset":3149,"count":0},{"startOffset":3173,"endOffset":3184,"count":0},{"startOffset":3316,"endOffset":3326,"count":0}],"isBlockCoverage":true},{"functionName":"randomFill","ranges":[{"startOffset":3345,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4941,"endOffset":7181,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7183,"endOffset":8059,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8062,"endOffset":8224,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8456,"endOffset":9146,"count":384},{"startOffset":8521,"endOffset":8562,"count":0},{"startOffset":8650,"endOffset":8957,"count":0},{"startOffset":8989,"endOffset":9102,"count":0}],"isBlockCoverage":true},{"functionName":"getHexBytes","ranges":[{"startOffset":9511,"endOffset":9810,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9812,"endOffset":10538,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10540,"endOffset":10843,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10845,"endOffset":11083,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11085,"endOffset":11405,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11407,"endOffset":12640,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12642,"endOffset":13098,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13100,"endOffset":13358,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":13632,"endOffset":13676,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13751,"endOffset":14178,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14180,"endOffset":14477,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14479,"endOffset":15289,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15291,"endOffset":16006,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3603,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":579,"endOffset":1389,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1391,"endOffset":1905,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1907,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2421,"endOffset":3535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10374,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":1193,"endOffset":1254,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":1256,"endOffset":1315,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1490,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1703,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1780,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1856,"endOffset":1898,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1902,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2260,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":3994,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":4209,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":5199,"endOffset":5338,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":5340,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":5684,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5925,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":6198,"endOffset":6430,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":6432,"endOffset":6702,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":7238,"endOffset":7518,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":7520,"endOffset":7756,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":7758,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":7925,"endOffset":8137,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":8139,"endOffset":8320,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":8459,"endOffset":9425,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":9427,"endOffset":9810,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2519,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1889,"endOffset":2132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3607,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":647,"endOffset":1459,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1461,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1978,"endOffset":3559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3560,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":864,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1322,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1752,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2220,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2597,"endOffset":3498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21389,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2330,"endOffset":6447,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2440,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2987,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3047,"endOffset":3188,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3194,"endOffset":3478,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3696,"endOffset":3754,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3760,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3846,"endOffset":4194,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4327,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4704,"endOffset":4764,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4770,"endOffset":4922,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4928,"endOffset":5305,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5369,"endOffset":5427,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5433,"endOffset":5723,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5788,"endOffset":5847,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5853,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6451,"endOffset":6836,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6838,"endOffset":7690,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7692,"endOffset":7813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7815,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8517,"endOffset":8654,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8656,"endOffset":10013,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10212,"endOffset":10348,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10548,"endOffset":10664,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10666,"endOffset":11244,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11246,"endOffset":11751,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11753,"endOffset":14300,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14302,"endOffset":15844,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15846,"endOffset":15934,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15936,"endOffset":16031,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16033,"endOffset":16731,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":16733,"endOffset":16937,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":16939,"endOffset":17276,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17278,"endOffset":17619,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17621,"endOffset":17703,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18126,"endOffset":18186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18190,"endOffset":18537,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18541,"endOffset":18676,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18680,"endOffset":18819,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18823,"endOffset":18958,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":18962,"endOffset":19105,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":19683,"endOffset":20162,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20166,"endOffset":20517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20521,"endOffset":20725,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":20854,"endOffset":20938,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10882,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1239,"endOffset":1309,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1311,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1467,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2248,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2367,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2746,"endOffset":3994,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":3996,"endOffset":9402,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9433,"endOffset":9970,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":9972,"endOffset":10174,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10176,"endOffset":10646,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10648,"endOffset":10782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10924,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1285,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3215,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3651,"endOffset":3813,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3927,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4385,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4652,"endOffset":4824,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4935,"endOffset":5095,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":5209,"endOffset":5371,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5413,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5646,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5841,"endOffset":5995,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":6306,"endOffset":6428,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6461,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6680,"endOffset":7030,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":7033,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":7170,"endOffset":7493,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7567,"endOffset":8635,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8754,"endOffset":10818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10412,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1253,"endOffset":2001,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1321,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2502,"endOffset":2868,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2870,"endOffset":3104,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3106,"endOffset":3525,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3527,"endOffset":3762,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3764,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4346,"endOffset":4547,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4690,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4835,"endOffset":4973,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":5002,"endOffset":5652,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5681,"endOffset":5984,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":6022,"endOffset":6169,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6202,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6366,"endOffset":6578,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6606,"endOffset":6948,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7196,"endOffset":7406,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7408,"endOffset":7999,"count":3},{"startOffset":7804,"endOffset":7877,"count":1},{"startOffset":7877,"endOffset":7939,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8400,"endOffset":8608,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9013,"endOffset":9230,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9392,"endOffset":10253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1588,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":469,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":663,"endOffset":971,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":700,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":973,"endOffset":1192,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7109,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":891,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1273,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1392,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1756,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1833,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1916,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2270,"endOffset":2515,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2539,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3205,"endOffset":4422,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4424,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4919,"endOffset":5555,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5558,"endOffset":7035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4881,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1021,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1671,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1870,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2002,"endOffset":2082,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2109,"endOffset":2621,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2649,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2997,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3577,"endOffset":3996,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4151,"endOffset":4826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9906,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1154,"endOffset":1237,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1239,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2486,"endOffset":2648,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2650,"endOffset":9660,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24418,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1393,"endOffset":1555,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1557,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1669,"endOffset":3696,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":3698,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":4784,"endOffset":5404,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":5406,"endOffset":7057,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":7059,"endOffset":8037,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":8039,"endOffset":9026,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":9028,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":9963,"endOffset":11518,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":11520,"endOffset":12189,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":12191,"endOffset":13541,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":13543,"endOffset":15361,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":15454,"endOffset":16124,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":16219,"endOffset":17177,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":17179,"endOffset":18460,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":18462,"endOffset":18617,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":18619,"endOffset":18798,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":18800,"endOffset":20477,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":20479,"endOffset":20675,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":20677,"endOffset":20873,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":21029,"endOffset":21089,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21124,"endOffset":21137,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":21176,"endOffset":21236,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":21240,"endOffset":21340,"count":3},{"startOffset":21280,"endOffset":21317,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21375,"endOffset":21388,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":21404,"endOffset":21558,"count":384},{"startOffset":21461,"endOffset":21498,"count":0}],"isBlockCoverage":true}]},{"scriptId":"486","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/prng/Xoroshiro128plus.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3408,"count":1}],"isBlockCoverage":true},{"functionName":"Xoroshiro128plus","ranges":[{"startOffset":1054,"endOffset":1369,"count":1},{"startOffset":1279,"endOffset":1342,"count":4}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1429,"endOffset":2337,"count":20000},{"startOffset":1489,"endOffset":2333,"count":10000}],"isBlockCoverage":true}]},{"scriptId":"487","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2747,"count":1},{"startOffset":1827,"endOffset":1844,"count":0},{"startOffset":1922,"endOffset":1941,"count":0}],"isBlockCoverage":true},{"functionName":"createUint8ArrayFromLen","ranges":[{"startOffset":319,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"createUint8ArrayViewFromArrayBuffer","ranges":[{"startOffset":550,"endOffset":624,"count":8}],"isBlockCoverage":true},{"functionName":"createUint8ArrayFromArrayBuffer","ranges":[{"startOffset":769,"endOffset":801,"count":0}],"isBlockCoverage":false},{"functionName":"toBase64Browser","ranges":[{"startOffset":906,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"toBase64Node","ranges":[{"startOffset":1178,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"fromBase64Browser","ranges":[{"startOffset":1370,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"fromBase64Node","ranges":[{"startOffset":1651,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"copyUint8Array","ranges":[{"startOffset":2123,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"encodeAny","ranges":[{"startOffset":2451,"endOffset":2580,"count":0}],"isBlockCoverage":false},{"functionName":"decodeAny","ranges":[{"startOffset":2694,"endOffset":2746,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":86,"endOffset":101,"count":40122}],"isBlockCoverage":true},{"functionName":"toArray","ranges":[{"startOffset":194,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":300,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":444,"endOffset":471,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/metric.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1563,"count":1}],"isBlockCoverage":true},{"functionName":"prefix","ranges":[{"startOffset":1077,"endOffset":1562,"count":12},{"startOffset":1129,"endOffset":1132,"count":0},{"startOffset":1189,"endOffset":1211,"count":4},{"startOffset":1213,"endOffset":1250,"count":4},{"startOffset":1281,"endOffset":1302,"count":3},{"startOffset":1304,"endOffset":1341,"count":3},{"startOffset":1378,"endOffset":1407,"count":9},{"startOffset":1408,"endOffset":1434,"count":3},{"startOffset":1474,"endOffset":1500,"count":3},{"startOffset":1501,"endOffset":1528,"count":9}],"isBlockCoverage":true}]},{"scriptId":"490","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":true},{"functionName":"isSymbol","ranges":[{"startOffset":237,"endOffset":263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/observable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1646,"count":1}],"isBlockCoverage":true},{"functionName":"Observable","ranges":[{"startOffset":245,"endOffset":361,"count":29}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":423,"endOffset":506,"count":89}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":568,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":795,"endOffset":1008,"count":2}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":1314,"endOffset":1588,"count":170368},{"startOffset":1533,"endOffset":1548,"count":170296}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1568,"endOffset":1583,"count":73}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":1592,"endOffset":1643,"count":4}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24198,"count":1},{"startOffset":8724,"endOffset":8749,"count":0}],"isBlockCoverage":true},{"functionName":"Encoder","ranges":[{"startOffset":1193,"endOffset":1335,"count":3}],"isBlockCoverage":true},{"functionName":"createEncoder","ranges":[{"startOffset":1410,"endOffset":1429,"count":3}],"isBlockCoverage":true},{"functionName":"length","ranges":[{"startOffset":1568,"endOffset":1708,"count":3},{"startOffset":1654,"endOffset":1693,"count":17}],"isBlockCoverage":true},{"functionName":"toUint8Array","ranges":[{"startOffset":1867,"endOffset":2207,"count":3},{"startOffset":1996,"endOffset":2082,"count":17}],"isBlockCoverage":true},{"functionName":"verifyLen","ranges":[{"startOffset":2433,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2891,"endOffset":3135,"count":87643},{"startOffset":2985,"endOffset":3096,"count":17}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3415,"endOffset":3810,"count":0}],"isBlockCoverage":false},{"functionName":"writeUint16","ranges":[{"startOffset":4446,"endOffset":4549,"count":0}],"isBlockCoverage":false},{"functionName":"setUint16","ranges":[{"startOffset":4818,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"writeUint32","ranges":[{"startOffset":5116,"endOffset":5227,"count":0}],"isBlockCoverage":false},{"functionName":"writeUint32BigEndian","ranges":[{"startOffset":5470,"endOffset":5581,"count":0}],"isBlockCoverage":false},{"functionName":"setUint32","ranges":[{"startOffset":5851,"endOffset":5974,"count":0}],"isBlockCoverage":false},{"functionName":"writeVarUint","ranges":[{"startOffset":6189,"endOffset":6384,"count":41975},{"startOffset":6238,"endOffset":6345,"count":10876}],"isBlockCoverage":true},{"functionName":"writeVarInt","ranges":[{"startOffset":6637,"endOffset":7255,"count":0}],"isBlockCoverage":false},{"functionName":"_writeVarStringNative","ranges":[{"startOffset":7571,"endOffset":7981,"count":7006},{"startOffset":7787,"endOffset":7791,"count":1002},{"startOffset":7865,"endOffset":7908,"count":19800},{"startOffset":7912,"endOffset":7979,"count":0}],"isBlockCoverage":true},{"functionName":"_writeVarStringPolyfill","ranges":[{"startOffset":8166,"endOffset":8420,"count":0}],"isBlockCoverage":false},{"functionName":"writeBinaryEncoder","ranges":[{"startOffset":9188,"endOffset":9255,"count":0}],"isBlockCoverage":false},{"functionName":"writeUint8Array","ranges":[{"startOffset":9424,"endOffset":10107,"count":0}],"isBlockCoverage":false},{"functionName":"writeVarUint8Array","ranges":[{"startOffset":10265,"endOffset":10379,"count":0}],"isBlockCoverage":false},{"functionName":"writeOnDataView","ranges":[{"startOffset":10908,"endOffset":11061,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloat32","ranges":[{"startOffset":11150,"endOffset":11221,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloat64","ranges":[{"startOffset":11310,"endOffset":11381,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64","ranges":[{"startOffset":11471,"endOffset":11564,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUint64","ranges":[{"startOffset":11655,"endOffset":11749,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32","ranges":[{"startOffset":11933,"endOffset":12021,"count":0}],"isBlockCoverage":false},{"functionName":"writeAny","ranges":[{"startOffset":14242,"endOffset":15976,"count":4003},{"startOffset":14292,"endOffset":14406,"count":3002},{"startOffset":14411,"endOffset":14845,"count":0},{"startOffset":14850,"endOffset":14963,"count":0},{"startOffset":14968,"endOffset":15787,"count":1001},{"startOffset":15008,"endOffset":15071,"count":0},{"startOffset":15104,"endOffset":15306,"count":0},{"startOffset":15344,"endOffset":15456,"count":0},{"startOffset":15648,"endOffset":15767,"count":2002},{"startOffset":15792,"endOffset":15902,"count":0},{"startOffset":15907,"endOffset":15970,"count":0}],"isBlockCoverage":true},{"functionName":"RleEncoder","ranges":[{"startOffset":16556,"endOffset":16744,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16778,"endOffset":17171,"count":0}],"isBlockCoverage":false},{"functionName":"IntDiffEncoder","ranges":[{"startOffset":17421,"endOffset":17536,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17575,"endOffset":17639,"count":0}],"isBlockCoverage":false},{"functionName":"RleIntDiffEncoder","ranges":[{"startOffset":18002,"endOffset":18136,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18175,"endOffset":18600,"count":0}],"isBlockCoverage":false},{"functionName":"flushUintOptRleEncoder","ranges":[{"startOffset":18681,"endOffset":19198,"count":0}],"isBlockCoverage":false},{"functionName":"UintOptRleEncoder","ranges":[{"startOffset":19628,"endOffset":19753,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19792,"endOffset":19942,"count":0}],"isBlockCoverage":false},{"functionName":"toUint8Array","ranges":[{"startOffset":19946,"endOffset":20038,"count":0}],"isBlockCoverage":false},{"functionName":"IncUintOptRleEncoder","ranges":[{"startOffset":20356,"endOffset":20481,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":20520,"endOffset":20683,"count":0}],"isBlockCoverage":false},{"functionName":"toUint8Array","ranges":[{"startOffset":20687,"endOffset":20779,"count":0}],"isBlockCoverage":false},{"functionName":"flushIntDiffOptRleEncoder","ranges":[{"startOffset":20866,"endOffset":21582,"count":0}],"isBlockCoverage":false},{"functionName":"IntDiffOptRleEncoder","ranges":[{"startOffset":22489,"endOffset":22632,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":22671,"endOffset":22882,"count":0}],"isBlockCoverage":false},{"functionName":"toUint8Array","ranges":[{"startOffset":22886,"endOffset":22981,"count":0}],"isBlockCoverage":false},{"functionName":"StringEncoder","ranges":[{"startOffset":23611,"endOffset":23752,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":23796,"endOffset":23956,"count":0}],"isBlockCoverage":false},{"functionName":"toUint8Array","ranges":[{"startOffset":23960,"endOffset":24195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/decoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17147,"count":1},{"startOffset":10791,"endOffset":10815,"count":0}],"isBlockCoverage":true},{"functionName":"Decoder","ranges":[{"startOffset":1436,"endOffset":1661,"count":4}],"isBlockCoverage":true},{"functionName":"createDecoder","ranges":[{"startOffset":1770,"endOffset":1807,"count":4}],"isBlockCoverage":true},{"functionName":"hasContent","ranges":[{"startOffset":1905,"endOffset":1950,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":2218,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"readUint8Array","ranges":[{"startOffset":2853,"endOffset":3030,"count":5}],"isBlockCoverage":true},{"functionName":"readVarUint8Array","ranges":[{"startOffset":3418,"endOffset":3474,"count":5}],"isBlockCoverage":true},{"functionName":"readTailAsUint8Array","ranges":[{"startOffset":3635,"endOffset":3703,"count":0}],"isBlockCoverage":false},{"functionName":"skip8","ranges":[{"startOffset":3879,"endOffset":3903,"count":0}],"isBlockCoverage":false},{"functionName":"readUint8","ranges":[{"startOffset":4081,"endOffset":4118,"count":4}],"isBlockCoverage":true},{"functionName":"readUint16","ranges":[{"startOffset":4276,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"readUint32","ranges":[{"startOffset":4567,"endOffset":4794,"count":0}],"isBlockCoverage":false},{"functionName":"readUint32BigEndian","ranges":[{"startOffset":5014,"endOffset":5241,"count":0}],"isBlockCoverage":false},{"functionName":"peekUint8","ranges":[{"startOffset":5462,"endOffset":5497,"count":0}],"isBlockCoverage":false},{"functionName":"peekUint16","ranges":[{"startOffset":5719,"endOffset":5796,"count":0}],"isBlockCoverage":false},{"functionName":"peekUint32","ranges":[{"startOffset":6018,"endOffset":6187,"count":0}],"isBlockCoverage":false},{"functionName":"readVarUint","ranges":[{"startOffset":6518,"endOffset":7086,"count":16},{"startOffset":6621,"endOffset":7050,"count":20},{"startOffset":6889,"endOffset":6913,"count":16},{"startOffset":6913,"endOffset":6979,"count":4},{"startOffset":6979,"endOffset":7021,"count":0},{"startOffset":7050,"endOffset":7085,"count":0}],"isBlockCoverage":true},{"functionName":"readVarInt","ranges":[{"startOffset":7529,"endOffset":8191,"count":0}],"isBlockCoverage":false},{"functionName":"peekVarUint","ranges":[{"startOffset":8353,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"peekVarInt","ranges":[{"startOffset":8618,"endOffset":8721,"count":0}],"isBlockCoverage":false},{"functionName":"_readVarStringPolyfill","ranges":[{"startOffset":9301,"endOffset":10280,"count":0}],"isBlockCoverage":false},{"functionName":"_readVarStringNative","ranges":[{"startOffset":10424,"endOffset":10513,"count":5}],"isBlockCoverage":true},{"functionName":"peekVarString","ranges":[{"startOffset":10981,"endOffset":11087,"count":0}],"isBlockCoverage":false},{"functionName":"readFromDataView","ranges":[{"startOffset":11202,"endOffset":11345,"count":0}],"isBlockCoverage":false},{"functionName":"readFloat32","ranges":[{"startOffset":11410,"endOffset":11470,"count":0}],"isBlockCoverage":false},{"functionName":"readFloat64","ranges":[{"startOffset":11535,"endOffset":11595,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64","ranges":[{"startOffset":11661,"endOffset":11743,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUint64","ranges":[{"startOffset":11810,"endOffset":11893,"count":0}],"isBlockCoverage":false},{"functionName":"obj","ranges":[{"startOffset":11974,"endOffset":11994,"count":0}],"isBlockCoverage":false},{"functionName":"obj","ranges":[{"startOffset":12021,"endOffset":12036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12201,"endOffset":12217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12250,"endOffset":12265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12334,"endOffset":12620,"count":1},{"startOffset":12519,"endOffset":12601,"count":2}],"isBlockCoverage":true},{"functionName":"readAnyLookupTable","ranges":[{"startOffset":12624,"endOffset":12810,"count":0}],"isBlockCoverage":false},{"functionName":"readAny","ranges":[{"startOffset":12918,"endOffset":12982,"count":3}],"isBlockCoverage":true},{"functionName":"RleDecoder","ranges":[{"startOffset":13166,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":13385,"endOffset":13742,"count":0}],"isBlockCoverage":false},{"functionName":"IntDiffDecoder","ranges":[{"startOffset":13869,"endOffset":14006,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":14044,"endOffset":14106,"count":0}],"isBlockCoverage":false},{"functionName":"RleIntDiffDecoder","ranges":[{"startOffset":14236,"endOffset":14392,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":14430,"endOffset":14792,"count":0}],"isBlockCoverage":false},{"functionName":"UintOptRleDecoder","ranges":[{"startOffset":14895,"endOffset":15019,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":15023,"endOffset":15413,"count":0}],"isBlockCoverage":false},{"functionName":"IncUintOptRleDecoder","ranges":[{"startOffset":15519,"endOffset":15643,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":15647,"endOffset":16039,"count":0}],"isBlockCoverage":false},{"functionName":"IntDiffOptRleDecoder","ranges":[{"startOffset":16145,"endOffset":16287,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":16325,"endOffset":16698,"count":0}],"isBlockCoverage":false},{"functionName":"StringDecoder","ranges":[{"startOffset":16781,"endOffset":16963,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":17001,"endOffset":17144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":138,"endOffset":155,"count":3}],"isBlockCoverage":true},{"functionName":"methodUnimplemented","ranges":[{"startOffset":261,"endOffset":309,"count":0}],"isBlockCoverage":false},{"functionName":"unexpectedCase","ranges":[{"startOffset":410,"endOffset":453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1230,"count":1}],"isBlockCoverage":true},{"functionName":"mapIterator","ranges":[{"startOffset":232,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"createIterator","ranges":[{"startOffset":564,"endOffset":693,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":624,"endOffset":666,"count":1}],"isBlockCoverage":true},{"functionName":"iteratorFilter","ranges":[{"startOffset":820,"endOffset":967,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":857,"endOffset":966,"count":1001},{"startOffset":929,"endOffset":950,"count":1000}],"isBlockCoverage":true},{"functionName":"iteratorMap","ranges":[{"startOffset":1085,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/prng/Xorshift32.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":603,"count":1}],"isBlockCoverage":true},{"functionName":"Xorshift32","ranges":[{"startOffset":237,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":450,"endOffset":600,"count":4}],"isBlockCoverage":true}]},{"scriptId":"497","url":"file:///home/dmonad/ylabs/y-utility/node_modules/lib0/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":457,"endOffset":536,"count":0}],"isBlockCoverage":true},{"functionName":"isInteger","ranges":[{"startOffset":461,"endOffset":535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":61899,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1522,"endOffset":1547,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3904,"endOffset":3912,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4250,"endOffset":4344,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4346,"endOffset":4729,"count":1},{"startOffset":4513,"endOffset":4535,"count":0},{"startOffset":4570,"endOffset":4728,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":4732,"endOffset":4870,"count":1},{"startOffset":4827,"endOffset":4845,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":4873,"endOffset":4956,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5157,"endOffset":5261,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5484,"endOffset":5885,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":5887,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":5964,"endOffset":6080,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":6574,"endOffset":7300,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":7372,"endOffset":7975,"count":1},{"startOffset":7728,"endOffset":7969,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":7977,"endOffset":8317,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":8569,"endOffset":13111,"count":1},{"startOffset":8629,"endOffset":8656,"count":0},{"startOffset":8684,"endOffset":8813,"count":0},{"startOffset":8883,"endOffset":9131,"count":0},{"startOffset":9193,"endOffset":9389,"count":0},{"startOffset":9951,"endOffset":9977,"count":0},{"startOffset":10383,"endOffset":10491,"count":0},{"startOffset":11019,"endOffset":11053,"count":0},{"startOffset":11129,"endOffset":11140,"count":0},{"startOffset":11198,"endOffset":11726,"count":0},{"startOffset":11817,"endOffset":11894,"count":0},{"startOffset":11895,"endOffset":11941,"count":0},{"startOffset":11943,"endOffset":12158,"count":0},{"startOffset":12693,"endOffset":12958,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":13284,"endOffset":13414,"count":23},{"startOffset":13386,"endOffset":13408,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":13534,"endOffset":14150,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":14153,"endOffset":14299,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":14506,"endOffset":15014,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":15096,"endOffset":15600,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":15634,"endOffset":16011,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":16047,"endOffset":16653,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":16684,"endOffset":16728,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16814,"endOffset":16858,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16937,"endOffset":16993,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17103,"endOffset":17418,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17506,"endOffset":17586,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17673,"endOffset":17718,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":17725,"endOffset":17971,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":18063,"endOffset":18292,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":18319,"endOffset":18475,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":18513,"endOffset":18863,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":18891,"endOffset":19225,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":19255,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":19467,"endOffset":19653,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":19700,"endOffset":19799,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":19833,"endOffset":19980,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":20012,"endOffset":21522,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":21551,"endOffset":21650,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":21685,"endOffset":21982,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":21985,"endOffset":22166,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":22193,"endOffset":22284,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":22317,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":22415,"endOffset":22479,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":22509,"endOffset":22569,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":22606,"endOffset":22882,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":22914,"endOffset":22979,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":23009,"endOffset":23068,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":23099,"endOffset":23162,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":23203,"endOffset":23250,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":23286,"endOffset":24198,"count":23},{"startOffset":23508,"endOffset":23852,"count":0},{"startOffset":23933,"endOffset":23989,"count":0},{"startOffset":24043,"endOffset":24079,"count":0},{"startOffset":24158,"endOffset":24196,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":23603,"endOffset":23717,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":23724,"endOffset":23803,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":24229,"endOffset":24297,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":24327,"endOffset":24408,"count":23}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":24601,"endOffset":24705,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":24737,"endOffset":25666,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":25671,"endOffset":26470,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":26473,"endOffset":28360,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":28363,"endOffset":30494,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":30523,"endOffset":31974,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":31977,"endOffset":32123,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":32125,"endOffset":35902,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":35904,"endOffset":38951,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":38953,"endOffset":39012,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":39038,"endOffset":39225,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":39254,"endOffset":39447,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":39451,"endOffset":41032,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":41034,"endOffset":42735,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":42737,"endOffset":42867,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignalOption","ranges":[{"startOffset":42869,"endOffset":43309,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":43311,"endOffset":44583,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":44694,"endOffset":44759,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":44827,"endOffset":46279,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":46281,"endOffset":48632,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":48699,"endOffset":48761,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":48764,"endOffset":48879,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":48882,"endOffset":50142,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":50171,"endOffset":53997,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":54000,"endOffset":54412,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":54494,"endOffset":54537,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":54612,"endOffset":54901,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":54904,"endOffset":56708,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":56857,"endOffset":57610,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":57639,"endOffset":58506,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":58548,"endOffset":58934,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":58938,"endOffset":59021,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":59080,"endOffset":59242,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59464,"endOffset":59500,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":59504,"endOffset":59545,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59624,"endOffset":59655,"count":31}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":59659,"endOffset":59695,"count":1}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":59733,"endOffset":59974,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":60000,"endOffset":60098,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":60126,"endOffset":60225,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":60367,"endOffset":61036,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":61075,"endOffset":61316,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":61445,"endOffset":61547,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":61551,"endOffset":61673,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7037,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1007,"endOffset":1032,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1151,"endOffset":2006,"count":23},{"startOffset":1251,"endOffset":1418,"count":0},{"startOffset":1423,"endOffset":1437,"count":0},{"startOffset":1442,"endOffset":1506,"count":0},{"startOffset":1594,"endOffset":1656,"count":0},{"startOffset":1661,"endOffset":1673,"count":0},{"startOffset":1678,"endOffset":1691,"count":0},{"startOffset":1696,"endOffset":1711,"count":0},{"startOffset":1716,"endOffset":1780,"count":0},{"startOffset":1785,"endOffset":2000,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2008,"endOffset":2693,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2695,"endOffset":2933,"count":23}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2935,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3576,"endOffset":3781,"count":23}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3783,"endOffset":4086,"count":23},{"startOffset":3950,"endOffset":4001,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4088,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6021,"endOffset":6831,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3095,"count":1}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":524,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":666,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":1114,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":1161,"endOffset":1462,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":1484,"endOffset":1564,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1575,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":1764,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":1916,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":1957,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":2005,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":2060,"endOffset":2433,"count":2},{"startOffset":2141,"endOffset":2161,"count":0},{"startOffset":2177,"endOffset":2192,"count":0},{"startOffset":2225,"endOffset":2252,"count":0},{"startOffset":2254,"endOffset":2334,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":2435,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2568,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":2820,"endOffset":3004,"count":0}],"isBlockCoverage":false}]}],"timestamp":12812.611358,"source-map-cache":{"file:///home/dmonad/ylabs/y-utility/node_modules/yjs/dist/yjs.mjs":{"lineLengths":[45,36,34,32,42,42,38,40,38,36,38,35,40,32,40,34,42,38,0,3,99,2,93,46,2,29,3,44,5,22,27,5,33,12,20,31,3,1,0,18,5,26,24,5,28,7,21,7,23,7,21,7,19,3,1,0,3,100,87,46,121,115,3,17,18,7,44,7,29,3,1,0,3,52,2,35,24,36,2,12,3,53,45,96,46,29,66,5,5,0,3,33,24,24,2,11,12,3,37,15,29,25,52,30,31,28,39,23,7,26,12,27,5,3,13,2,0,3,24,17,20,2,11,12,3,31,40,65,2,0,3,24,2,11,12,3,37,30,43,58,31,67,65,13,46,31,28,49,76,14,20,26,9,12,7,5,20,5,2,0,3,32,40,3,32,33,49,53,40,68,81,11,36,11,38,53,65,9,41,7,7,3,32,15,2,0,3,24,25,24,25,2,11,12,3,55,122,2,0,46,0,3,26,50,2,11,12,3,46,31,43,7,32,7,23,46,32,27,38,32,37,108,31,11,9,49,7,5,29,38,5,5,11,2,0,3,45,24,2,11,12,3,41,62,0,67,34,32,37,30,57,33,54,37,32,41,37,7,7,2,0,3,45,22,2,11,12,3,34,29,63,40,28,61,70,30,106,49,81,7,5,3,11,2,0,3,155,3,0,3,45,35,29,151,2,11,12,3,64,38,63,40,28,61,70,52,42,47,42,51,26,31,71,9,48,11,93,23,11,21,36,44,57,96,65,9,40,23,36,43,34,63,101,15,41,13,18,17,11,9,14,69,7,5,3,37,37,65,36,28,3,13,2,0,3,12,3,0,42,0,3,28,86,139,90,163,184,173,152,3,0,3,51,30,3,30,5,40,5,154,12,17,29,42,21,37,7,53,7,27,35,7,33,7,29,7,33,7,35,7,23,7,29,7,111,20,7,22,33,29,21,7,126,165,6,22,7,26,7,95,90,103,101,40,7,26,7,91,7,49,29,29,22,9,7,66,9,34,9,42,58,41,20,9,8,36,7,33,48,49,7,66,27,30,7,7,7,78,61,60,7,45,3,0,5,109,4,96,4,48,5,11,28,44,69,44,21,5,27,3,0,17,23,3,0,21,65,3,0,5,77,80,75,17,4,16,93,102,14,4,12,5,31,36,3,0,5,31,4,75,42,58,4,84,4,22,98,69,4,13,26,25,40,41,8,4,25,111,83,4,12,5,46,61,19,38,31,14,7,36,73,36,21,40,27,56,42,25,25,11,11,31,57,23,9,33,32,33,16,14,107,7,5,15,3,0,5,16,27,24,4,12,5,24,17,33,3,0,5,27,20,4,12,5,23,17,32,3,0,5,16,27,22,4,12,5,22,17,31,3,0,5,27,27,4,12,5,30,17,39,3,0,5,88,75,4,92,4,34,5,13,7,34,7,19,0,40,32,7,0,14,3,0,5,60,5,14,65,28,24,24,63,85,31,69,32,28,44,9,45,21,5,35,33,20,3,0,5,30,36,5,21,27,3,0,5,30,24,5,22,28,3,1,0,19,5,38,5,25,31,3,0,20,10,3,0,5,21,5,18,49,3,0,5,21,5,16,49,3,1,0,43,5,17,5,17,99,3,0,5,17,5,18,99,3,0,5,29,91,5,17,49,3,0,5,52,5,15,47,3,0,5,21,5,17,51,3,0,5,28,5,21,55,3,0,5,52,5,18,49,3,0,5,61,4,25,5,14,49,3,0,5,18,5,14,45,3,0,5,25,5,14,78,3,0,5,70,4,18,5,15,63,3,0,5,21,5,14,51,3,1,0,19,5,38,5,25,7,15,7,23,31,3,0,20,23,3,0,5,21,5,18,61,25,3,0,5,21,5,16,60,27,15,3,1,0,43,5,38,5,25,19,7,77,46,6,28,7,19,74,98,93,99,100,104,89,110,94,90,3,0,5,17,5,17,74,3,0,5,17,5,18,75,3,0,5,29,91,5,17,36,3,0,5,52,5,15,58,3,0,5,21,5,17,36,3,0,5,22,5,21,46,3,0,5,47,5,18,37,3,0,5,61,4,21,5,14,33,3,0,5,18,5,14,45,3,0,5,25,5,14,55,3,0,5,45,4,154,4,18,5,15,45,3,0,5,21,5,14,49,38,32,12,44,26,16,5,3,1,0,19,18,48,3,0,19,50,3,0,20,10,3,0,5,26,5,24,51,3,0,5,24,5,20,49,3,1,0,43,5,19,5,20,55,54,3,0,5,19,5,21,55,54,3,0,5,67,27,5,24,52,3,0,5,51,5,20,48,3,0,5,22,5,19,49,3,0,5,28,5,28,60,3,0,5,51,5,23,50,3,0,5,61,4,24,5,18,49,3,0,5,21,5,18,45,3,0,5,28,5,18,55,3,0,5,23,5,21,69,3,0,5,24,5,18,51,3,1,0,19,18,88,23,3,0,19,50,3,0,20,23,3,0,5,26,5,24,40,27,50,3,0,5,24,5,20,20,29,5,53,26,3,1,0,43,18,12,7,33,7,28,7,58,48,6,21,7,22,63,58,64,65,68,54,74,59,55,3,0,19,45,96,78,76,79,80,82,76,88,77,73,65,79,41,3,0,5,19,5,20,40,42,3,0,5,19,5,21,40,43,3,0,5,27,5,24,37,3,0,5,51,5,20,33,3,0,5,22,5,19,32,3,0,5,28,5,28,49,3,0,5,51,5,23,36,3,0,5,61,4,24,5,18,31,3,0,5,21,5,18,45,3,0,5,28,5,18,55,3,0,5,45,4,154,4,23,5,21,47,3,0,5,87,87,4,72,4,24,5,18,39,30,9,58,8,120,83,8,122,8,59,8,132,8,9,44,50,36,12,40,5,3,1,0,3,53,58,25,71,2,12,3,59,19,80,54,28,79,30,52,47,38,59,62,33,3,2,0,3,53,29,34,2,11,12,3,54,44,23,34,46,42,28,5,5,52,27,24,5,5,37,54,45,50,85,17,68,5,2,0,3,91,19,63,2,11,12,3,49,5,63,5,34,70,47,70,7,29,7,44,40,58,38,43,47,38,36,23,40,57,23,15,9,52,129,64,59,23,15,9,39,13,105,92,27,13,80,112,55,69,32,34,36,26,89,26,96,132,114,58,12,67,0,67,91,68,97,79,85,112,55,69,32,94,0,34,36,26,29,26,40,135,114,58,11,12,27,33,9,7,5,79,3,19,2,0,3,56,2,69,49,80,2,84,35,2,66,36,2,100,102,2,87,38,2,35,29,77,73,2,11,12,3,69,5,29,5,19,146,88,42,15,3,37,44,17,5,153,67,33,44,153,14,19,7,5,28,4,47,56,15,3,0,5,24,5,40,30,5,27,26,5,46,41,43,35,5,4,5,20,5,104,52,26,0,34,31,36,62,30,72,30,91,41,32,36,14,126,48,7,101,76,5,21,4,0,54,16,41,116,53,23,49,30,69,62,27,14,65,31,32,62,13,56,13,106,56,100,87,31,18,56,20,11,63,42,51,80,9,7,5,32,27,55,96,87,12,47,38,23,13,14,89,7,5,3,37,42,57,28,47,113,65,3,13,2,0,3,53,35,2,11,12,3,139,0,3,36,2,77,2,36,20,117,61,2,12,3,104,33,55,30,22,32,28,36,57,87,32,80,32,65,41,18,40,54,46,23,15,9,7,24,47,60,53,49,47,11,9,78,7,12,41,5,84,32,76,26,76,91,125,81,30,45,60,14,30,30,45,44,7,12,69,31,5,82,32,0,96,32,16,87,34,45,5,31,0,3,36,2,77,2,36,20,117,2,12,3,134,0,3,119,2,100,2,20,29,117,70,2,12,3,88,49,72,2,0,3,119,2,100,2,20,29,117,2,12,3,121,0,3,129,46,2,53,19,139,2,12,3,77,61,69,2,0,3,166,46,2,84,2,19,138,55,23,2,12,3,121,72,54,43,52,28,38,3,33,90,3,27,50,107,57,36,5,3,19,2,0,3,166,46,2,84,2,19,138,23,2,12,3,139,0,3,51,2,45,99,2,12,3,36,23,61,38,61,60,26,3,11,2,0,3,45,2,35,99,2,12,3,124,0,3,45,2,35,99,2,12,3,113,0,3,45,33,12,3,43,54,85,118,54,5,16,2,0,3,45,19,2,12,3,104,0,3,30,2,38,47,23,2,12,3,67,27,35,10,43,3,31,2,0,3,30,2,38,23,2,12,3,77,0,3,40,2,23,2,11,3,20,18,7,47,7,16,3,1,0,3,22,37,2,11,12,3,52,0,3,45,53,2,22,48,57,2,11,12,3,52,25,0,3,29,2,22,48,76,60,2,11,12,3,57,27,23,42,38,78,3,2,0,3,47,41,2,22,48,21,21,2,11,12,3,63,42,0,10,5,37,66,5,31,7,16,21,7,25,7,46,21,7,23,3,1,0,3,23,23,20,2,12,3,115,0,3,25,24,2,11,12,3,58,0,3,36,17,2,11,12,3,34,44,43,2,0,3,11,60,32,2,36,15,2,11,12,3,25,73,0,3,62,61,77,2,34,19,2,11,12,3,33,61,56,25,16,5,3,30,2,0,3,44,2,36,27,61,2,11,12,3,39,26,34,17,5,66,3,14,2,0,3,45,2,65,2,34,3,25,17,22,13,16,16,3,33,85,2,0,25,5,21,35,5,54,7,36,7,26,28,19,7,44,6,33,7,29,19,7,30,38,7,49,9,35,9,32,34,114,66,45,58,50,182,13,13,11,9,141,65,91,8,31,6,20,32,50,65,8,7,22,32,3,0,5,21,29,36,25,68,5,81,30,42,16,24,36,35,39,5,37,29,24,57,37,77,46,31,40,64,55,47,13,13,44,51,19,40,58,11,9,12,7,87,24,35,41,82,44,38,45,9,9,7,3,0,5,29,18,5,32,45,3,0,5,19,28,5,27,61,30,30,7,5,15,3,1,0,3,89,108,102,2,112,19,2,75,2,41,2,11,49,72,20,27,24,35,93,47,91,2,3,24,5,26,31,26,26,5,46,7,22,7,21,7,26,7,23,7,24,7,21,7,76,71,32,62,6,79,33,6,21,7,23,3,1,0,3,33,16,3,40,18,18,26,3,19,28,3,18,26,3,27,28,3,13,2,0,3,20,29,2,12,3,269,0,24,5,36,26,28,5,40,7,32,7,21,7,21,7,23,23,3,1,0,3,34,24,26,2,12,3,100,0,3,34,24,26,2,12,3,55,20,19,28,34,10,65,3,57,2,0,3,58,2,72,47,26,29,2,12,3,73,22,18,96,22,54,5,12,3,22,36,29,62,93,7,24,5,40,59,58,5,16,3,50,2,0,3,36,33,2,12,3,50,44,22,38,27,30,82,36,44,29,84,36,27,10,32,3,39,16,2,0,3,33,23,3,40,43,39,39,2,0,3,36,29,2,12,3,41,18,19,20,42,11,60,31,11,11,84,46,11,13,86,29,5,3,80,57,2,0,3,33,29,3,102,0,3,33,19,34,2,12,3,67,26,28,27,27,27,18,16,25,59,17,5,45,27,35,17,5,59,53,148,25,26,40,28,9,19,7,5,10,25,28,33,59,34,19,7,51,72,33,14,38,19,7,12,34,5,21,27,12,16,5,3,56,2,0,3,35,35,20,2,12,3,55,132,2,0,16,5,26,45,5,24,7,24,7,17,7,16,33,7,17,3,1,0,3,26,26,20,3,42,31,31,23,23,55,16,3,45,33,18,5,3,51,43,46,18,5,47,34,34,75,20,7,5,3,13,2,0,3,29,47,23,3,69,39,41,31,2,0,3,29,23,3,81,0,3,26,47,21,3,91,71,2,0,3,26,21,3,98,0,3,24,33,21,3,56,0,67,0,3,19,21,3,109,0,3,21,39,2,13,12,3,60,17,130,0,3,35,29,3,65,94,38,48,28,44,44,64,7,7,64,23,3,2,0,3,25,29,106,16,3,76,21,121,62,3,30,0,40,37,17,25,22,15,7,7,53,63,39,24,16,7,54,64,7,64,62,32,70,34,33,52,50,37,7,5,32,5,0,60,15,2,0,19,18,7,41,7,29,7,74,7,31,7,32,7,26,3,1,0,3,44,56,2,29,31,2,10,12,3,33,23,46,47,52,5,11,2,0,3,29,25,19,2,10,12,3,37,44,30,12,3,49,48,2,0,3,29,26,2,11,12,3,38,52,30,17,49,10,51,70,34,5,3,23,2,0,3,44,34,24,19,2,11,12,3,41,15,33,27,30,27,16,3,55,90,101,98,25,28,28,28,42,23,7,26,12,27,5,46,3,66,61,30,2,0,3,95,2,29,17,20,2,11,12,3,29,5,27,5,15,47,48,2,0,3,95,11,12,3,68,0,3,35,34,24,3,62,44,32,58,90,20,3,14,2,0,3,95,2,35,17,17,2,11,12,3,48,92,69,2,0,3,95,2,35,29,17,17,2,11,12,3,53,5,24,5,15,47,47,32,86,97,3,15,2,0,3,41,29,26,29,2,11,12,3,53,86,61,2,0,3,34,2,35,34,45,22,36,2,12,3,70,18,10,3,36,68,13,6,30,53,58,5,14,72,2,0,3,77,64,73,72,73,2,11,36,42,22,36,5,57,43,43,79,21,20,20,30,2,10,3,19,5,21,24,27,5,36,7,24,18,7,19,7,48,24,7,37,7,54,33,7,49,7,45,33,7,32,7,69,65,72,62,7,29,7,72,42,64,7,40,7,36,7,28,7,18,7,25,7,49,27,7,26,7,52,22,7,23,7,23,7,34,7,23,7,36,7,23,7,35,3,1,0,3,53,35,46,3,69,151,16,3,47,52,49,13,2,0,3,72,78,2,35,42,33,3,71,26,111,77,3,2,0,3,41,22,3,46,32,29,81,32,29,149,110,7,5,3,2,0,3,24,29,43,3,49,61,78,58,41,67,11,78,68,30,9,35,67,15,9,91,34,9,7,5,3,2,0,3,24,29,3,42,38,89,47,78,58,41,66,130,11,61,54,30,9,40,7,5,5,2,0,3,24,29,43,3,40,38,31,2,0,3,50,20,3,57,39,47,32,28,37,51,9,32,69,58,9,37,8,69,8,39,9,20,40,53,23,67,54,11,10,8,21,30,64,25,82,34,61,29,32,76,18,20,35,45,19,85,20,83,57,60,72,13,12,10,72,9,22,15,53,67,19,48,7,35,0,58,57,69,36,84,74,80,70,43,11,9,9,34,108,63,53,53,82,62,53,61,9,36,57,9,7,121,161,45,7,103,62,41,46,83,25,93,9,7,43,46,83,25,95,9,7,74,87,40,41,44,51,11,34,11,69,121,59,7,0,48,38,69,14,56,7,5,3,2,0,3,57,2,14,19,37,29,14,2,12,3,59,55,26,5,16,5,20,34,23,59,47,43,47,5,59,3,7,33,13,22,72,30,26,67,108,81,19,75,33,80,70,52,7,5,3,15,2,0,17,5,33,34,5,39,33,31,7,65,7,26,3,1,3,26,26,31,3,58,58,80,28,5,5,2,0,3,35,34,28,23,3,57,5,30,23,5,20,5,93,16,5,17,30,34,32,49,30,63,9,26,9,36,9,28,9,31,34,74,37,39,64,27,100,13,26,11,102,39,11,9,9,73,12,35,57,123,53,11,34,9,9,37,155,9,79,80,59,38,45,35,33,9,7,50,5,53,43,53,38,7,7,22,18,23,54,117,3,15,2,0,3,39,61,141,90,76,73,19,75,242,107,3,0,3,84,69,86,79,100,2,101,3,38,5,117,40,5,27,25,36,30,37,35,90,11,12,7,39,7,20,31,37,29,41,49,7,31,7,24,7,31,7,24,7,73,6,22,7,25,25,19,24,57,41,7,39,7,51,40,10,48,77,139,9,14,7,35,35,62,20,84,28,56,32,7,41,60,68,42,22,62,9,9,37,25,123,41,47,86,77,14,32,69,22,7,33,30,7,52,102,86,31,9,9,186,19,51,14,53,7,6,66,34,21,7,3,0,5,65,5,23,55,29,49,31,7,7,3,0,5,24,5,29,36,3,0,5,24,5,32,39,3,0,56,83,31,29,84,30,9,29,84,30,9,109,9,5,3,0,5,74,86,31,4,4,13,33,29,29,18,63,30,29,27,29,18,68,4,5,20,24,3,0,5,31,4,67,5,11,24,12,9,55,15,27,5,14,3,0,5,30,4,67,5,11,24,12,9,55,15,27,5,14,3,0,5,30,4,49,5,14,36,3,0,5,30,4,49,5,14,36,3,0,14,37,67,20,3,1,0,3,53,3,48,70,47,70,40,58,47,38,40,24,62,53,21,47,78,110,53,67,30,32,34,23,87,24,94,52,121,112,56,10,21,31,14,38,51,21,7,5,3,1,0,24,5,55,33,5,38,50,7,38,7,21,22,35,16,3,0,5,37,5,11,28,8,48,86,20,3,1,0,3,29,2,3,65,0,3,29,70,2,3,61,21,69,65,79,23,3,38,42,35,2,0,3,29,2,3,73,0,3,29,70,2,3,64,21,69,65,79,23,3,10,12,36,3,2,0,24,5,55,5,25,24,24,21,27,7,132,6,107,6,111,106,6,66,7,28,3,1,0,3,37,23,3,90,0,3,29,60,68,23,3,103,33,98,32,22,17,36,62,67,56,42,30,17,34,46,65,64,9,36,22,43,7,24,38,28,7,26,48,7,5,25,26,13,61,60,5,43,41,37,58,30,33,10,50,33,3,2,0,3,29,23,3,114,0,3,29,68,65,3,67,5,32,5,25,5,32,5,23,98,32,22,36,34,36,36,56,42,32,32,38,40,48,28,36,7,46,5,28,34,3,21,2,0,3,29,65,3,77,0,3,83,82,2,33,23,22,3,37,32,38,69,41,38,71,10,48,42,20,37,11,41,11,27,22,25,35,5,3,2,0,3,2,51,2,37,70,70,23,3,93,29,21,3,93,94,0,5,62,64,5,23,0,39,25,64,0,75,88,70,0,16,96,77,28,63,58,68,32,90,66,17,89,18,28,11,16,58,9,7,6,42,11,5,46,97,80,78,0,29,68,27,0,72,56,163,34,24,7,10,52,123,161,9,16,7,0,55,93,48,27,14,82,145,54,35,94,18,97,93,15,27,15,118,46,11,95,91,25,56,93,46,20,45,13,11,71,97,52,31,11,9,7,12,85,25,5,9,34,156,31,7,91,46,5,3,27,89,21,3,45,0,68,34,36,37,2,0,3,29,25,70,70,3,94,38,33,57,63,54,23,29,38,47,43,53,20,14,5,48,98,20,67,72,22,7,12,42,123,22,7,5,3,44,13,36,30,31,2,0,3,29,25,3,94,0,3,39,3,45,31,135,62,27,3,2,0,3,39,28,25,3,71,42,77,38,3,33,45,24,53,23,84,3,43,23,2,3,61,57,44,2,39,3,49,36,0,56,53,0,5,43,50,5,0,56,70,0,61,52,7,40,7,30,60,37,67,3,2,0,3,29,68,69,3,61,69,65,39,57,0,79,55,3,38,42,36,37,2,0,3,29,3,106,0,3,29,3,106,0,3,34,43,3,14,5,40,37,5,37,7,51,16,7,25,7,66,32,7,32,7,49,26,7,35,7,26,7,25,7,104,7,22,7,158,7,23,3,0,5,52,4,102,4,34,13,19,34,29,9,39,5,15,63,53,3,0,5,48,4,107,4,35,22,5,20,59,3,0,5,95,5,15,30,29,33,91,30,27,66,13,48,13,21,23,32,33,54,31,13,37,56,34,65,22,22,15,20,56,34,65,22,31,37,15,13,18,37,32,83,20,27,13,11,46,9,9,24,5,21,3,0,5,87,85,89,93,4,147,5,16,29,3,0,5,46,4,107,4,35,22,5,17,87,3,0,5,87,85,89,93,4,184,5,18,32,27,33,33,35,9,75,9,23,17,14,16,14,23,8,91,30,11,22,11,26,30,23,31,11,10,74,29,57,67,25,39,15,43,32,25,18,34,67,25,40,15,78,30,20,67,25,39,15,43,13,11,9,61,19,9,7,30,5,39,3,1,0,3,59,2,11,75,39,41,56,45,2,36,42,52,2,11,12,3,38,18,52,41,26,42,12,28,16,75,47,25,14,9,20,7,22,5,66,3,13,2,0,27,0,3,50,2,66,2,17,3,36,0,25,5,20,26,5,26,20,15,23,51,3,1,0,3,36,3,95,0,3,91,2,36,18,24,3,47,26,15,18,23,51,2,0,3,49,18,24,3,50,47,68,84,38,17,10,24,47,26,13,3,2,0,3,75,2,76,2,54,2,70,2,36,24,3,39,79,15,3,161,24,17,24,17,26,80,3,33,46,36,38,13,7,25,5,16,3,64,45,15,36,25,5,3,98,84,54,113,15,36,25,5,3,0,18,20,6,32,18,28,49,30,10,50,8,28,17,49,8,6,18,37,29,73,8,50,82,6,130,29,39,17,10,24,56,3,2,0,3,41,2,49,2,49,24,83,3,59,54,30,18,9,26,9,18,23,92,65,107,48,19,45,55,30,9,7,44,92,34,16,7,14,22,5,118,47,5,3,2,0,3,72,2,31,24,3,30,19,17,13,16,16,3,12,2,0,3,73,41,2,22,40,35,27,3,57,27,60,16,17,71,30,11,5,64,3,65,2,0,3,22,26,3,20,18,7,24,7,22,7,31,7,26,7,24,7,23,7,23,7,20,21,7,21,50,7,36,7,26,59,7,37,7,46,7,30,3,0,5,37,5,17,83,3,0,5,47,4,33,40,35,4,36,28,5,24,17,22,3,0,5,38,5,12,37,3,0,5,38,5,12,37,3,0,5,56,5,23,0,5,31,5,17,24,37,18,5,12,3,0,5,49,38,4,37,98,5,44,51,36,5,3,0,5,54,4,71,5,15,41,3,0,5,71,4,79,5,19,42,3,0,5,37,4,70,5,17,44,3,0,5,37,4,79,5,21,45,3,0,5,14,18,5,14,1,0,3,34,24,22,23,2,11,12,3,45,18,33,3,16,29,3,24,16,22,33,36,39,30,26,14,59,24,16,9,18,7,5,16,3,11,2,0,3,34,23,2,11,12,3,33,16,22,22,36,39,42,22,7,5,16,3,11,2,0,3,34,29,23,2,11,12,3,53,16,22,22,48,39,42,22,7,5,16,3,11,2,0,3,72,2,34,98,2,11,12,3,38,16,22,22,36,39,42,31,7,5,16,3,2,0,3,16,34,52,21,2,11,12,3,34,5,23,5,20,35,31,5,15,2,0,3,34,34,2,11,12,3,40,22,5,28,5,28,30,10,26,17,6,17,26,36,41,22,9,98,25,18,23,28,11,9,51,48,32,69,7,58,49,57,30,7,14,20,13,7,5,3,2,0,3,34,24,16,2,11,12,3,38,41,22,24,17,26,3,35,36,29,44,7,24,5,3,2,0,3,35,36,31,94,2,11,12,3,86,27,30,35,26,77,5,49,5,23,33,33,171,37,23,5,4,24,21,26,12,30,20,20,21,19,20,30,15,16,28,34,28,29,216,45,19,21,190,45,19,20,46,172,47,22,78,15,11,7,5,5,20,2,0,56,0,3,35,36,24,86,2,11,12,3,73,31,24,3,20,31,71,5,74,3,27,43,24,24,17,26,69,22,68,98,63,5,3,35,36,30,31,30,84,9,13,7,24,5,3,29,74,3,69,2,0,3,106,21,2,35,36,86,2,11,12,3,64,68,173,19,10,21,18,5,3,69,2,0,3,35,36,24,25,2,11,12,3,64,30,27,29,43,24,24,17,26,3,41,48,36,29,82,7,24,5,3,32,36,21,30,83,7,28,25,5,16,3,19,24,3,29,125,3,2,0,3,35,36,22,2,11,12,3,53,33,24,26,3,2,0,3,35,36,22,83,2,11,12,3,57,44,30,35,14,22,38,10,32,18,18,19,17,18,42,13,22,71,13,15,61,13,14,44,43,16,52,9,5,3,155,2,0,3,36,22,100,2,11,12,3,37,35,97,2,0,3,36,115,2,11,12,3,35,5,31,5,17,39,25,62,5,5,12,2,0,3,36,22,20,2,11,12,3,37,35,42,2,0,3,36,22,29,100,2,11,12,3,55,39,110,15,3,96,2,0,3,32,41,2,11,12,3,126,0,3,17,3,0,3,47,14,29,3,34,5,47,60,5,37,31,36,3,1,0,3,33,14,40,28,3,35,18,12,7,26,15,7,29,7,39,7,28,3,0,5,59,78,28,24,5,23,7,24,7,27,18,12,3,0,5,47,4,33,40,35,4,36,23,5,24,30,68,31,3,0,5,24,5,12,23,3,0,5,24,5,12,7,24,7,29,42,77,7,14,3,0,17,83,3,0,5,45,4,37,97,5,43,49,77,3,0,5,37,4,77,79,61,4,13,43,29,42,30,4,58,51,5,27,28,41,87,9,12,83,5,3,0,5,36,4,58,4,57,5,18,28,41,78,9,12,71,5,3,0,5,38,4,60,5,21,28,3,0,5,45,4,68,76,5,30,28,41,57,9,12,76,5,3,0,5,44,4,77,16,5,15,35,3,0,5,50,4,23,5,14,32,3,0,5,50,4,28,26,23,5,40,42,3,0,5,50,4,25,5,13,68,3,0,5,77,28,4,16,97,77,38,5,11,52,3,0,5,74,4,104,5,15,29,3,0,5,34,5,24,39,3,0,5,55,5,20,38,3,1,0,3,54,2,11,12,3,44,0,3,14,27,46,3,32,5,51,37,50,5,41,29,28,3,1,0,3,20,31,2,44,34,3,33,5,4,101,5,25,12,7,31,15,7,31,0,32,38,12,45,5,3,0,5,47,4,33,40,35,4,36,23,5,24,29,84,27,7,31,3,0,5,28,5,12,21,3,0,5,28,5,12,7,28,7,27,34,104,7,14,3,0,5,43,4,37,97,5,43,87,3,0,5,50,4,33,5,13,7,37,7,19,38,26,61,62,7,7,14,3,0,5,60,4,21,5,15,51,3,0,5,56,4,39,5,11,94,3,0,5,58,4,36,5,13,132,3,0,5,46,4,36,5,14,140,3,0,5,66,4,114,5,15,38,26,65,7,7,3,0,5,46,4,36,5,24,25,3,0,5,47,4,58,5,16,28,41,46,9,12,72,5,3,0,5,63,4,67,59,5,20,28,41,71,9,12,76,5,16,3,0,5,48,4,24,32,5,13,53,3,0,5,74,4,41,22,5,13,32,3,0,5,41,5,12,28,41,50,47,11,9,12,68,5,3,0,5,55,5,20,36,3,1,0,3,54,2,11,12,3,40,0,3,17,17,20,3,125,0,28,5,28,29,26,47,5,55,21,23,23,47,3,0,5,58,5,14,30,29,5,45,25,34,109,9,13,14,34,42,9,13,5,27,34,3,1,0,3,35,36,46,33,2,11,12,3,55,43,44,25,33,107,9,13,14,33,41,26,102,11,40,36,9,13,5,25,32,119,3,12,2,0,3,35,36,24,33,2,11,12,3,54,38,43,15,99,67,10,84,52,3,2,0,3,25,2,35,36,40,45,2,11,12,3,86,49,9,31,41,62,159,7,5,5,33,89,5,22,3,30,35,43,30,32,185,41,31,22,5,2,0,3,45,32,2,11,12,3,64,32,23,34,10,38,3,2,0,3,40,41,2,11,12,3,59,79,16,33,11,257,11,5,22,3,2,0,3,35,36,40,41,28,2,11,12,4,72,30,35,38,30,33,32,66,39,66,45,38,184,46,24,5,3,26,2,0,3,35,36,40,48,41,2,11,12,4,72,52,40,29,5,5,30,35,48,87,19,178,39,29,82,3,152,34,24,24,20,75,2,0,3,35,36,40,25,41,2,11,12,3,74,30,35,48,87,52,59,120,39,24,29,18,7,37,86,7,5,5,33,50,29,86,39,35,42,44,20,33,62,53,35,15,48,13,46,18,54,11,15,9,16,46,111,11,41,15,7,5,22,3,80,75,58,19,22,34,23,5,230,44,22,3,75,2,0,3,71,29,2,35,22,89,43,42,59,2,12,3,93,5,22,5,18,5,38,5,34,50,68,60,33,5,20,3,19,26,25,25,25,5,25,36,36,29,72,66,76,110,38,23,106,44,43,22,56,15,13,11,47,92,11,15,9,7,5,46,3,17,2,0,3,35,28,3,64,48,79,22,3,26,47,53,70,66,27,33,14,23,7,5,21,3,2,0,3,68,2,90,93,83,2,112,2,22,72,3,40,14,58,50,26,39,56,17,34,42,29,99,17,18,101,58,24,17,9,7,22,5,5,12,2,0,3,35,40,25,33,2,11,12,3,54,29,57,30,48,42,50,25,26,27,46,111,11,41,44,15,7,5,22,3,14,99,3,111,29,84,3,16,2,0,3,68,104,2,11,6,13,59,29,61,8,6,2,3,0,3,59,3,12,7,19,25,7,3,36,4,0,3,25,52,3,33,5,25,37,49,5,42,30,7,36,22,15,7,34,7,37,26,7,33,27,25,37,14,34,7,7,3,0,5,184,5,18,33,9,213,9,23,24,26,25,26,8,30,5,45,3,0,5,45,104,4,126,4,12,5,16,31,53,9,130,9,23,34,87,40,38,11,26,11,26,11,37,11,83,11,32,11,24,23,26,29,32,15,26,15,19,29,28,43,30,21,28,32,49,37,61,41,49,21,21,17,28,21,28,32,57,37,49,57,19,17,27,21,13,27,26,11,10,31,45,29,30,36,42,26,36,56,26,17,46,42,26,36,17,31,41,42,26,36,17,28,15,19,31,36,42,44,28,38,19,76,17,46,42,26,36,17,41,41,42,26,36,17,38,15,19,33,81,36,42,68,51,46,30,21,78,45,28,46,21,46,45,19,17,46,46,66,49,44,28,19,43,17,41,46,45,41,49,46,30,21,41,45,28,46,21,122,45,19,17,15,34,42,26,17,104,15,19,13,11,28,9,16,34,49,79,61,24,18,17,11,9,9,26,5,43,3,1,0,3,57,2,73,78,68,2,36,3,34,5,61,5,24,12,7,47,38,7,79,7,39,7,28,3,0,5,44,4,19,5,17,23,3,0,5,19,23,5,24,30,9,71,17,23,5,25,3,0,12,22,3,0,5,20,5,12,29,36,15,3,0,5,44,4,37,97,5,43,49,64,32,48,86,29,54,38,76,63,35,18,9,127,98,39,11,11,34,15,9,7,33,75,58,18,11,83,39,11,11,7,28,34,79,82,39,16,86,33,101,57,37,20,13,39,55,13,13,9,9,5,3,0,5,70,4,12,5,15,17,7,24,7,24,24,81,60,7,18,5,14,3,0,5,70,4,21,12,5,13,26,3,0,5,53,4,61,26,99,4,4,12,5,48,28,41,82,48,30,40,77,75,60,75,55,190,60,79,13,47,83,47,56,11,9,9,12,88,5,3,0,5,57,4,33,37,68,57,4,12,5,52,7,24,7,19,40,46,17,24,25,27,42,11,37,11,30,34,51,31,34,11,11,37,11,35,28,37,9,21,17,7,5,32,26,99,42,33,59,70,94,28,123,17,85,92,28,119,17,45,26,52,15,66,19,13,29,32,24,17,43,17,26,49,16,47,69,38,59,37,19,15,27,19,13,31,43,26,101,15,19,11,9,20,7,16,6,35,81,44,36,23,62,9,27,66,9,23,20,12,21,5,14,3,0,5,34,4,65,71,75,76,45,12,5,36,27,12,5,23,21,34,59,26,26,23,74,9,61,9,12,102,5,3,0,5,33,4,60,84,77,45,4,12,5,47,23,21,34,59,62,9,12,108,5,3,0,5,41,4,60,78,4,12,5,26,23,12,5,23,21,34,80,9,12,92,5,3,0,5,43,4,66,77,77,45,4,12,5,38,23,12,5,23,21,34,59,33,16,9,63,9,12,104,5,3,0,5,26,4,119,4,76,4,12,5,35,28,41,56,9,12,101,5,3,0,5,34,4,119,4,72,71,4,12,5,48,28,41,69,9,12,114,5,3,0,5,67,4,119,4,73,49,47,4,12,5,32,63,3,0,5,61,4,119,4,79,4,12,5,20,30,3,0,5,55,5,20,37,3,1,0,3,54,18,2,11,12,3,42,0,3,15,3,0,3,59,87,2,11,29,27,26,2,33,3,0,3,23,2,22,55,49,72,3,0,3,73,24,2,60,2,10,68,3,22,5,45,53,5,38,21,22,7,19,7,58,27,3,0,24,15,3,0,5,23,4,75,4,12,5,11,7,24,7,30,69,135,10,51,124,34,26,16,41,30,35,26,19,49,23,20,68,13,11,9,103,5,28,21,19,45,5,26,70,3,1,0,3,71,77,76,73,2,10,35,3,41,18,12,7,30,7,29,3,0,5,38,5,21,30,55,3,0,5,47,4,33,40,35,4,36,23,5,24,30,68,31,3,0,12,29,3,0,5,27,5,12,34,17,97,13,3,0,17,83,3,0,5,36,4,13,72,31,30,16,6,4,106,76,63,65,4,12,5,29,43,3,0,5,58,44,4,19,16,10,11,18,4,59,99,4,12,5,25,32,17,119,33,20,17,12,23,5,3,0,5,51,47,4,77,4,58,92,4,12,5,28,32,17,120,3,0,5,43,4,37,97,5,43,87,3,0,5,76,4,64,5,15,60,3,0,5,21,5,13,26,3,0,5,57,4,80,76,51,85,73,69,71,71,100,4,12,5,53,56,32,49,5,38,76,7,19,3,0,5,37,4,13,43,44,4,57,70,5,27,28,41,66,9,12,80,55,5,3,0,5,37,4,13,43,44,4,79,70,5,30,28,41,79,73,9,12,65,74,40,54,7,38,5,3,0,5,45,4,68,80,5,30,28,41,57,9,12,80,48,5,3,0,5,50,4,51,5,14,32,3,0,5,36,4,77,5,18,38,3,0,5,38,4,79,5,21,28,3,0,5,44,4,77,35,5,15,35,3,0,5,50,4,28,26,42,5,40,42,3,0,5,65,4,126,5,15,29,3,0,5,71,19,4,60,4,85,5,20,44,3,1,0,3,54,25,2,11,12,3,56,0,3,44,80,2,52,72,3,40,40,12,29,7,36,7,34,3,0,5,38,5,22,50,103,3,0,5,38,5,22,50,103,3,0,5,47,4,33,40,35,4,36,23,5,24,29,84,36,7,29,3,0,5,80,4,26,5,12,41,3,0,5,26,5,12,46,39,30,39,5,17,97,13,3,0,5,55,77,35,4,61,4,12,5,15,39,29,20,30,21,5,16,32,39,26,56,5,55,86,73,3,0,5,48,4,76,4,12,5,35,28,41,56,9,12,79,5,3,0,5,34,4,72,74,4,12,5,48,28,41,69,9,12,93,5,3,0,5,67,4,73,49,50,4,12,5,32,63,3,0,5,40,4,77,52,4,12,5,32,63,3,0,5,61,4,79,4,12,5,20,30,3,0,5,57,4,80,76,51,85,73,69,71,71,100,4,12,5,53,55,39,30,40,5,35,61,7,32,44,5,14,3,0,5,71,19,4,60,4,85,5,20,43,36,3,1,0,3,53,24,2,12,3,70,0,3,53,69,3,32,5,96,92,42,76,57,5,43,31,7,36,22,15,7,34,7,37,26,7,39,27,25,37,14,40,7,7,3,1,0,3,57,2,23,3,29,5,55,5,26,12,7,21,7,29,3,0,5,80,5,12,38,3,0,5,23,5,12,43,34,25,7,13,3,0,5,57,4,80,76,51,83,73,69,71,70,103,4,12,5,53,38,12,29,33,12,50,5,53,32,44,5,14,3,0,5,71,19,4,60,4,85,5,20,40,36,3,1,0,3,53,21,2,11,12,3,31,34,0,3,77,54,3,30,5,38,5,22,50,103,3,0,5,38,5,22,50,103,3,0,12,25,3,0,5,23,5,12,32,36,15,3,0,5,54,4,80,76,51,82,73,69,71,71,100,4,12,5,48,58,32,44,5,14,3,0,15,17,40,29,48,25,55,70,9,48,53,46,7,46,67,34,19,52,36,35,53,37,48,9,19,7,26,57,47,7,16,15,3,0,5,21,5,13,26,3,0,5,55,5,20,40,3,1,0,3,53,21,2,11,12,3,47,0,22,5,19,27,5,28,17,25,3,0,5,20,5,18,37,3,0,5,50,90,63,34,52,5,21,16,3,0,5,85,27,32,5,40,37,3,0,5,37,27,5,35,37,3,1,0,28,0,3,11,3,33,18,15,3,0,14,0,5,22,22,5,21,49,18,5,32,15,3,0,5,37,27,5,35,21,30,28,5,43,3,0,5,55,27,5,27,41,43,3,0,5,37,31,28,5,35,15,3,1,0,21,5,32,5,25,27,3,0,5,21,5,16,12,3,0,5,25,5,17,25,3,0,5,22,5,18,15,3,0,5,28,5,11,42,3,0,5,27,28,5,19,37,3,0,5,33,22,5,21,16,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,35,3,0,5,21,5,13,12,3,1,0,3,54,26,3,74,0,22,5,24,5,21,19,3,0,5,21,5,16,19,3,0,5,25,5,17,13,3,0,5,22,5,18,16,3,0,5,29,5,11,39,3,0,5,27,29,5,19,56,22,16,3,0,5,34,22,5,21,26,15,3,0,5,37,23,5,33,83,23,3,0,5,37,5,25,5,31,5,15,5,55,27,5,27,40,3,0,5,21,5,13,12,3,1,0,3,11,2,54,27,3,76,0,3,23,36,3,124,0,3,11,3,18,5,21,5,21,20,143,5,7,18,7,19,7,18,7,20,21,18,22,5,23,27,5,28,27,5,3,0,5,21,5,16,12,3,0,5,25,5,17,21,3,0,5,22,5,18,15,3,0,5,25,5,11,70,3,0,5,27,25,5,19,37,3,0,5,30,22,5,21,16,3,0,5,37,23,5,33,56,26,43,30,46,5,3,0,5,37,5,24,49,48,12,47,5,3,0,5,31,5,16,0,5,55,27,5,27,39,32,3,0,5,21,5,13,12,3,1,0,3,11,2,53,23,3,109,0,3,11,3,20,5,26,5,23,23,3,0,5,21,5,16,12,3,0,5,25,5,17,23,3,0,5,22,5,18,15,3,0,5,27,5,11,39,3,0,5,27,27,5,19,37,3,0,5,32,22,5,21,16,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,34,3,0,5,21,5,13,12,3,1,0,3,11,2,53,25,3,73,0,3,11,3,21,5,24,26,5,28,19,23,3,0,5,21,5,16,12,3,0,5,25,5,17,13,3,0,5,22,5,18,16,3,0,5,28,5,11,50,3,0,5,27,28,5,19,37,3,0,5,33,22,5,21,16,3,0,5,37,23,5,33,75,72,3,0,5,37,5,25,5,31,5,15,5,55,27,5,27,31,34,3,0,5,21,5,13,12,3,1,0,3,53,26,3,94,0,3,11,3,19,5,28,5,21,7,25,7,19,3,0,5,21,5,16,26,3,0,5,25,5,17,19,3,0,5,22,5,18,15,3,0,5,26,5,11,36,3,0,5,27,26,5,19,58,41,16,3,0,5,31,22,5,21,42,15,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,32,35,40,28,77,5,3,0,5,21,5,13,12,3,1,0,3,11,2,53,24,3,36,32,16,33,35,28,25,12,29,5,3,28,2,0,18,5,28,5,21,7,25,7,19,3,0,5,21,5,16,26,3,0,5,25,5,17,19,3,0,5,22,5,18,15,3,0,5,25,5,11,35,3,0,5,27,25,5,19,57,41,16,3,0,5,30,22,5,21,42,15,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,32,35,40,28,26,5,3,0,5,21,5,13,12,3,1,0,3,53,23,3,35,32,16,33,31,3,27,2,0,3,11,3,21,5,24,5,21,7,21,7,19,3,0,5,21,5,16,26,3,0,5,25,5,17,29,3,0,5,22,5,18,15,3,0,5,28,5,11,38,3,0,5,27,28,5,19,60,41,0,120,58,61,86,98,88,53,30,43,5,16,3,0,5,33,22,5,21,26,15,3,0,5,37,23,5,34,5,37,5,25,5,31,5,15,5,55,27,5,27,74,3,0,5,21,5,13,12,3,1,0,3,11,2,53,26,3,77,0,3,79,11,3,18,13,11,12,18,19,15,14,2,0,22,20,21,27,28,24,24,0,3,11,3,19,5,36,5,22,7,32,7,21,3,0,5,21,5,16,12,3,0,5,25,5,17,22,3,0,5,22,5,18,15,3,0,5,26,5,11,45,3,0,5,27,26,5,19,37,3,0,5,31,22,5,21,16,3,0,5,37,23,5,33,48,3,0,5,37,5,24,32,27,26,33,14,70,68,70,90,45,7,24,5,36,26,33,14,24,45,7,7,42,3,0,5,31,5,14,32,27,27,24,5,28,71,29,29,25,7,7,31,3,0,5,55,27,5,27,30,3,0,5,21,5,13,12,3,1,0,3,11,2,53,24,3,93,0,3,41,2,29,17,37,3,37,5,20,5,18,15,11,6,19,60,5,34,40,25,51,10,14,3,2,0,3,70,2,73,28,2,26,24,3,34,47,21,64,3,2,0,3,32,35,25,23,17,2,12,11,3,52,21,40,29,35,13,39,19,25,20,23,33,4,25,28,3,22,26,3,33,86,3,91,29,17,33,37,3,28,44,23,65,97,3,25,18,2,0,3,39,2,53,21,31,35,42,2,22,2,11,3,91,30,26,35,29,24,49,3,72,5,22,5,18,5,22,5,12,36,59,53,165,17,5,40,69,5,3,145,0,32,51,21,17,34,27,9,26,9,27,42,110,104,7,107,25,13,7,23,5,28,9,26,9,29,42,112,107,7,109,27,13,7,26,5,10,17,48,18,54,110,95,26,7,22,42,53,59,7,40,75,37,19,7,12,57,5,3,49,50,30,11,30,29,15,19,23,4,23,29,39,19,2,0,3,46,3,35,5,19,30,30,31,35,175,37,37,5,82,35,7,61,24,7,25,7,59,26,7,21,7,60,26,7,23,7,62,24,7,35,7,40,7,25,7,78,80,76,57,28,7,31,7,78,22,24,7,23,7,30,7,27,7,17,22,20,51,26,7,61,3,0,5,67,4,20,5,25,55,31,5,3,0,17,40,3,0,5,47,5,15,40,3,0,21,31,31,5,3,0,20,40,3,0,5,42,20,5,18,40,3,0,26,36,31,5,3,0,18,29,3,0,5,91,4,37,31,28,5,35,123,31,5,143,36,5,157,31,5,0,50,0,22,67,37,5,27,68,39,5,103,25,5,61,23,56,39,45,7,58,40,46,7,48,53,42,27,14,75,7,5,15,3,0,5,37,27,5,35,21,30,115,37,49,28,5,0,22,119,11,28,11,29,0,11,28,11,14,46,28,25,45,94,49,23,11,16,68,9,88,43,11,28,11,43,11,28,11,44,60,48,70,48,35,34,50,21,47,23,39,69,124,66,19,131,195,21,82,23,39,13,18,17,11,22,9,25,7,68,31,38,27,31,14,14,38,94,49,23,11,16,67,72,9,23,7,32,31,43,78,86,33,72,40,9,7,32,71,78,7,45,48,42,111,192,94,33,7,12,59,61,5,3,0,5,38,5,15,23,37,18,5,12,3,0,5,42,5,15,22,37,17,5,12,3,0,5,52,5,17,113,98,3,0,5,27,4,24,22,5,21,8,47,46,29,56,43,55,39,29,30,63,43,7,88,25,40,35,79,28,34,50,42,13,11,11,7,23,25,7,31,32,31,7,34,17,5,16,3,0,5,31,4,37,5,24,24,68,36,54,38,7,25,88,71,39,5,3,0,5,31,31,5,25,24,34,5,27,20,63,12,53,5,3,0,5,71,19,4,60,4,85,27,5,27,99,41,37,57,64,75,70,28,26,34,5,31,40,5,50,68,39,40,34,34,33,47,60,36,16,60,45,9,101,58,36,45,58,36,14,31,7,31,39,7,5,40,3,1,0,3,53,23,3,85,0,3,41,2,77,3,21,61,26,23,25,25,24,25,23,22,22,67,2,0,31,0,3,11,3,35,18,15,3,0,14,0,5,24,22,5,21,49,18,5,32,15,3,0,5,37,27,5,35,40,27,3,0,5,55,27,5,27,43,83,69,3,0,5,37,31,28,5,35,15,3,1,0,25,0,65,14,33,12,17,51,0,39,0,37,5,61,4,95,111,103,50,4,100,103,78,4,42,5,141,1,29,0,1530,32,0],"data":{"version":3,"file":"yjs.mjs","sources":["file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/AbstractConnector.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/DeleteSet.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/Doc.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/UpdateDecoder.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/UpdateEncoder.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/encoding.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/EventHandler.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/ID.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/isParentOf.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/logging.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/PermanentUserData.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/RelativePosition.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/Snapshot.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/StructStore.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/Transaction.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/UndoManager.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/updates.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/utils/YEvent.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/AbstractType.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YArray.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YMap.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YText.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YXmlFragment.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YXmlElement.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YXmlEvent.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YXmlHook.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/types/YXmlText.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/AbstractStruct.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/GC.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentBinary.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentDeleted.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentDoc.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentEmbed.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentFormat.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentJSON.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentAny.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentString.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/ContentType.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/Item.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/structs/Skip.js","file:///home/dmonad/ylabs/y-utility/node_modules/yjs/src/index.js"],"sourcesContent":["\nimport { Observable } from 'lib0/observable'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nexport class AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n","\nimport {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal()\n      encoding.writeVarUint(encoder.restEncoder, client)\n      const len = dsitems.length\n      encoding.writeVarUint(encoder.restEncoder, len)\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i]\n        encoder.writeDsClock(item.clock)\n        encoder.writeDsLen(item.len)\n      }\n    })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]))\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler)\n          resolve()\n        }\n      }\n      this.on('sync', eventHandler)\n    })\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise()\n      }\n      this.isSynced = isSynced === undefined || isSynced === true\n      if (!this.isLoaded) {\n        this.emit('load', [])\n      }\n    })\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise()\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n","\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n","\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as array from 'lib0/array'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n","import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n","\nimport {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n","\nimport {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n","\nimport {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n","\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n","\nimport {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1]\n  const right = structs[pos]\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1)\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                )\n              events\n                .forEach(event => {\n                  event.currentTarget = type\n                })\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length)\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction)\n            }\n          })\n        )\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      })\n      callAll(fs, [])\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1)\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  /**\n   * @type {any}\n   */\n  let result = null\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    result = f(doc._transaction)\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0]\n      doc._transaction = null\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0)\n      }\n    }\n  }\n  return result\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport { Observable } from 'lib0/observable'\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = []\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.doc = doc\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    this.captureTimeout = captureTimeout\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n","\nimport * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as logging from 'lib0/logging'\nimport * as math from 'lib0/math'\nimport {\n  createID,\n  readItemContent,\n  readDeleteSet,\n  writeDeleteSet,\n  Skip,\n  mergeDeleteSets,\n  DSEncoderV1,\n  DSEncoderV2,\n  decodeStateVector,\n  Item, GC, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1)\n","\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYArray = _decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {MapType} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value))\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYMap = _decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const marker = findMarker(parent, index)\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create()\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content)\n      endFormats.set(cf.key, cf)\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          const startAttrValue = startAttributes.get(key) || null\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key)\n              } else {\n                currAttributes.set(key, startAttrValue)\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content))\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen }\n                deleteLen = 0\n                break\n              case 'insert':\n                op = { insert }\n                if (currentAttributes.size > 0) {\n                  op.attributes = {}\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value\n                    }\n                  })\n                }\n                insert = ''\n                break\n              case 'retain':\n                op = { retain }\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {}\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key]\n                  }\n                }\n                retain = 0\n                break\n            }\n            delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    const doc = transaction.doc\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this)\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot)\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot)\n        }\n        computeDelta()\n      }, 'cleanup')\n    } else {\n      computeDelta()\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        insertText(transaction, this, pos, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = _decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as array from 'lib0/array'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = _decoder => new YXmlFragment()\n","\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key])\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key])\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n","\nimport {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n","\nimport {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","\nimport {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n","\nimport {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n","\nimport {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n","\nimport {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n","\nimport {\n  AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n","\nimport {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && isDeleted(itemsToDelete, left.right.id)) {\n        left = left.right\n      }\n      // follow redone\n      // trace redone until parent matches\n      while (left !== null && left.redone !== null) {\n        left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} offset\n   * @return {AbstractContent}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  ContentBinary,\n  ContentDeleted,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  UpdateEncoderV1\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null}}}